#include "Functions.hpp"

namespace Functions {

void * const C2DA__C2DACtor__0 = reinterpret_cast<void*>(0x082BEBCC);
void * const C2DA__C2DACtor__1 = reinterpret_cast<void*>(0x082BEC80);
void * const C2DA__C2DADtor = reinterpret_cast<void*>(0x082BED24);
void * const C2DA__GetCExoStringEntry__0 = reinterpret_cast<void*>(0x082BD000);
void * const C2DA__GetCExoStringEntry__1 = reinterpret_cast<void*>(0x082BD0D4);
void * const C2DA__GetCExoStringEntry__2 = reinterpret_cast<void*>(0x082BEDBC);
void * const C2DA__GetCExoStringEntry__3 = reinterpret_cast<void*>(0x082BEE60);
void * const C2DA__GetColumnIndex = reinterpret_cast<void*>(0x082BED74);
void * const C2DA__GetFLOATEntry__0 = reinterpret_cast<void*>(0x082BEFA4);
void * const C2DA__GetFLOATEntry__1 = reinterpret_cast<void*>(0x082BF038);
void * const C2DA__GetFLOATEntry__2 = reinterpret_cast<void*>(0x082BF100);
void * const C2DA__GetFLOATEntry__3 = reinterpret_cast<void*>(0x082BF1C0);
void * const C2DA__GetINTEntry__0 = reinterpret_cast<void*>(0x082BDA04);
void * const C2DA__GetINTEntry__1 = reinterpret_cast<void*>(0x082BDB58);
void * const C2DA__GetINTEntry__2 = reinterpret_cast<void*>(0x082BD77C);
void * const C2DA__GetINTEntry__3 = reinterpret_cast<void*>(0x082BD8A8);
void * const C2DA__GetNextLineLength = reinterpret_cast<void*>(0x082BF580);
void * const C2DA__GetNextToken = reinterpret_cast<void*>(0x082BE0C0);
void * const C2DA__GetNumColumns = reinterpret_cast<void*>(0x082BF6D0);
void * const C2DA__GetNumRows = reinterpret_cast<void*>(0x082BF6DC);
void * const C2DA__GetRowIndex = reinterpret_cast<void*>(0x082BF5A8);
void * const C2DA__Load2DArray = reinterpret_cast<void*>(0x082BE1A8);
void * const C2DA__SetBlankEntry__0 = reinterpret_cast<void*>(0x082BDEBC);
void * const C2DA__SetBlankEntry__1 = reinterpret_cast<void*>(0x082BDFEC);
void * const C2DA__SetBlankEntry__2 = reinterpret_cast<void*>(0x082BF488);
void * const C2DA__SetBlankEntry__3 = reinterpret_cast<void*>(0x082BF4D4);
void * const C2DA__SetCExoStringEntry__0 = reinterpret_cast<void*>(0x082BD1A0);
void * const C2DA__SetCExoStringEntry__1 = reinterpret_cast<void*>(0x082BD320);
void * const C2DA__SetCExoStringEntry__2 = reinterpret_cast<void*>(0x082BD448);
void * const C2DA__SetCExoStringEntry__3 = reinterpret_cast<void*>(0x082BEF04);
void * const C2DA__SetFLOATEntry__0 = reinterpret_cast<void*>(0x082BD544);
void * const C2DA__SetFLOATEntry__1 = reinterpret_cast<void*>(0x082BD68C);
void * const C2DA__SetFLOATEntry__2 = reinterpret_cast<void*>(0x082BF224);
void * const C2DA__SetFLOATEntry__3 = reinterpret_cast<void*>(0x082BF28C);
void * const C2DA__SetINTEntry__0 = reinterpret_cast<void*>(0x082BDC8C);
void * const C2DA__SetINTEntry__1 = reinterpret_cast<void*>(0x082BDDD0);
void * const C2DA__SetINTEntry__2 = reinterpret_cast<void*>(0x082BF35C);
void * const C2DA__SetINTEntry__3 = reinterpret_cast<void*>(0x082BF3C0);
void * const C2DA__SkipNewLines = reinterpret_cast<void*>(0x082BF5F0);
void * const C2DA__Unload2DArray = reinterpret_cast<void*>(0x082BEA88);

void * const CAppManager__CAppManagerCtor = reinterpret_cast<void*>(0x0805134C);
void * const CAppManager__CAppManagerDtor = reinterpret_cast<void*>(0x08051510);
void * const CAppManager__CreateServer = reinterpret_cast<void*>(0x08052318);
void * const CAppManager__DestroyScriptDebuggerPopup = reinterpret_cast<void*>(0x080523F4);
void * const CAppManager__DestroyServer = reinterpret_cast<void*>(0x08052388);
void * const CAppManager__DisplayScriptDebuggerPopup = reinterpret_cast<void*>(0x080523EC);
void * const CAppManager__DoSaveGameScreenShot = reinterpret_cast<void*>(0x08052308);
void * const CAppManager__GetDungeonMasterEXERunning = reinterpret_cast<void*>(0x080523E0);
void * const CAppManager__GetObjectTableManager = reinterpret_cast<void*>(0x080522E8);
void * const CAppManager__GetProgressFromCodeword = reinterpret_cast<void*>(0x08051E2C);
void * const CAppManager__ReadProgressFromINI = reinterpret_cast<void*>(0x080515C0);
void * const CAppManager__SetDungeonMasterEXERunning = reinterpret_cast<void*>(0x080523D0);
void * const CAppManager__ShowServerMem = reinterpret_cast<void*>(0x08052310);
void * const CAppManager__SpawnExternalScriptDebugger = reinterpret_cast<void*>(0x080523FC);

void * const CBWCBlowFish__CBWCBlowFishCtor__0 = reinterpret_cast<void*>(0x08308384);
void * const CBWCBlowFish__CBWCBlowFishCtor__1 = reinterpret_cast<void*>(0x0830865C);
void * const CBWCBlowFish__CBWCBlowFishDtor = reinterpret_cast<void*>(0x083083B4);
void * const CBWCBlowFish__BlockToBytes = reinterpret_cast<void*>(0x08308520);
void * const CBWCBlowFish__BytesToBlock = reinterpret_cast<void*>(0x083084D4);
void * const CBWCBlowFish__Decrypt__0 = reinterpret_cast<void*>(0x08308014);
void * const CBWCBlowFish__Decrypt__1 = reinterpret_cast<void*>(0x08308164);
void * const CBWCBlowFish__DecryptBlock = reinterpret_cast<void*>(0x08307C6C);
void * const CBWCBlowFish__Encrypt__0 = reinterpret_cast<void*>(0x08307D78);
void * const CBWCBlowFish__Encrypt__1 = reinterpret_cast<void*>(0x08307EC8);
void * const CBWCBlowFish__EncryptBlock = reinterpret_cast<void*>(0x08307B60);
void * const CBWCBlowFish__F = reinterpret_cast<void*>(0x083085D0);
void * const CBWCBlowFish__GetDecryptedSize = reinterpret_cast<void*>(0x083085A8);
void * const CBWCBlowFish__GetEncryptedSize = reinterpret_cast<void*>(0x08308584);
void * const CBWCBlowFish__GetLowOrderByte = reinterpret_cast<void*>(0x083085C8);
void * const CBWCBlowFish__GetState = reinterpret_cast<void*>(0x083084B0);
void * const CBWCBlowFish__GetStateSize = reinterpret_cast<void*>(0x0830849C);
void * const CBWCBlowFish__ResetChain = reinterpret_cast<void*>(0x08308450);
void * const CBWCBlowFish__ResetKey = reinterpret_cast<void*>(0x083083F4);
void * const CBWCBlowFish__SetKey = reinterpret_cast<void*>(0x08307980);
void * const CBWCBlowFish__SetState = reinterpret_cast<void*>(0x0830846C);

void * const CBWCBlowFishBlock__CBWCBlowFishBlockCtor__0 = reinterpret_cast<void*>(0x083082B0);
void * const CBWCBlowFishBlock__CBWCBlowFishBlockCtor__1 = reinterpret_cast<void*>(0x083082EC);
void * const CBWCBlowFishBlock__CBWCBlowFishBlockDtor = reinterpret_cast<void*>(0x083082C4);
void * const CBWCBlowFishBlock____aer = reinterpret_cast<void*>(0x08308304);

void * const CBWCBlowFishState__CBWCBlowFishStateCtor__0 = reinterpret_cast<void*>(0x083078AC);
void * const CBWCBlowFishState__CBWCBlowFishStateCtor__1 = reinterpret_cast<void*>(0x08307910);
void * const CBWCBlowFishState__CBWCBlowFishStateDtor = reinterpret_cast<void*>(0x08307818);
void * const CBWCBlowFishState__GetChain = reinterpret_cast<void*>(0x0830836C);
void * const CBWCBlowFishState__ResetChain = reinterpret_cast<void*>(0x08308354);
void * const CBWCBlowFishState__SetChain = reinterpret_cast<void*>(0x0830831C);

void * const CBWCMD5__CBWCMD5Ctor = reinterpret_cast<void*>(0x08308EB4);
void * const CBWCMD5__CBWCMD5Dtor = reinterpret_cast<void*>(0x08308ECC);
void * const CBWCMD5__Decrypt__0 = reinterpret_cast<void*>(0x08309028);
void * const CBWCMD5__Decrypt__1 = reinterpret_cast<void*>(0x08309030);
void * const CBWCMD5__Encrypt__0 = reinterpret_cast<void*>(0x08308D64);
void * const CBWCMD5__Encrypt__1 = reinterpret_cast<void*>(0x08309020);
void * const CBWCMD5__EncryptBlock = reinterpret_cast<void*>(0x083086B8);
void * const CBWCMD5__EncryptFinalBlock = reinterpret_cast<void*>(0x08308F80);
void * const CBWCMD5__F = reinterpret_cast<void*>(0x08309090);
void * const CBWCMD5__G = reinterpret_cast<void*>(0x083090A4);
void * const CBWCMD5__GetDecryptedSize = reinterpret_cast<void*>(0x0830904C);
void * const CBWCMD5__GetEncryptedSize = reinterpret_cast<void*>(0x08309038);
void * const CBWCMD5__GetState = reinterpret_cast<void*>(0x08308F68);
void * const CBWCMD5__GetStateSize = reinterpret_cast<void*>(0x08308F54);
void * const CBWCMD5__H = reinterpret_cast<void*>(0x083090B8);
void * const CBWCMD5__I = reinterpret_cast<void*>(0x083090C8);
void * const CBWCMD5__Reset = reinterpret_cast<void*>(0x08308EF0);
void * const CBWCMD5__SetKey = reinterpret_cast<void*>(0x08308F14);
void * const CBWCMD5__SetState = reinterpret_cast<void*>(0x08308F30);

void * const CCodeBase__CCodeBaseCtor = reinterpret_cast<void*>(0x082D9A24);
void * const CCodeBase__CCodeBaseDtor = reinterpret_cast<void*>(0x082D9A6C);
void * const CCodeBase__AddBinaryData = reinterpret_cast<void*>(0x082D9C44);
void * const CCodeBase__AddFloat = reinterpret_cast<void*>(0x082D9B90);
void * const CCodeBase__AddInt = reinterpret_cast<void*>(0x082D9BB4);
void * const CCodeBase__AddLocation = reinterpret_cast<void*>(0x082D9BFC);
void * const CCodeBase__AddString = reinterpret_cast<void*>(0x082D9C20);
void * const CCodeBase__AddVector = reinterpret_cast<void*>(0x082D9BD8);
void * const CCodeBase__CloseAllFiles = reinterpret_cast<void*>(0x082D9CAC);
void * const CCodeBase__DeleteVar = reinterpret_cast<void*>(0x082D9C88);
void * const CCodeBase__DestroyDatabase = reinterpret_cast<void*>(0x082D9CCC);
void * const CCodeBase__GetBinaryData = reinterpret_cast<void*>(0x082D9B60);
void * const CCodeBase__GetFloat = reinterpret_cast<void*>(0x082D9AAC);
void * const CCodeBase__GetInt = reinterpret_cast<void*>(0x082D9AD0);
void * const CCodeBase__GetLocation = reinterpret_cast<void*>(0x082D9B18);
void * const CCodeBase__GetString = reinterpret_cast<void*>(0x082D9B3C);
void * const CCodeBase__GetVector = reinterpret_cast<void*>(0x082D9AF4);

void * const CCodeBaseInternal__CCodeBaseInternalCtor = reinterpret_cast<void*>(0x082DABA0);
void * const CCodeBaseInternal__CCodeBaseInternalDtor = reinterpret_cast<void*>(0x082DAC30);
void * const CCodeBaseInternal__AddBinaryData = reinterpret_cast<void*>(0x082DB040);
void * const CCodeBaseInternal__AddFloat = reinterpret_cast<void*>(0x082DAE40);
void * const CCodeBaseInternal__AddInt = reinterpret_cast<void*>(0x082DAEB4);
void * const CCodeBaseInternal__AddLocation = reinterpret_cast<void*>(0x082D9F30);
void * const CCodeBaseInternal__AddString = reinterpret_cast<void*>(0x082DAFBC);
void * const CCodeBaseInternal__AddVarEnd = reinterpret_cast<void*>(0x082DB0B8);
void * const CCodeBaseInternal__AddVarStart = reinterpret_cast<void*>(0x082DA944);
void * const CCodeBaseInternal__AddVector = reinterpret_cast<void*>(0x082DAF24);
void * const CCodeBaseInternal__CloseAllFiles = reinterpret_cast<void*>(0x082DAC88);
void * const CCodeBaseInternal__CloseFile = reinterpret_cast<void*>(0x082DA664);
void * const CCodeBaseInternal__DeleteVar = reinterpret_cast<void*>(0x082DA000);
void * const CCodeBaseInternal__DestroyDatabase = reinterpret_cast<void*>(0x082DA0C0);
void * const CCodeBaseInternal__GetBinaryData = reinterpret_cast<void*>(0x082DADA8);
void * const CCodeBaseInternal__GetFile = reinterpret_cast<void*>(0x082DA57C);
void * const CCodeBaseInternal__GetFloat = reinterpret_cast<void*>(0x082DACB4);
void * const CCodeBaseInternal__GetInt = reinterpret_cast<void*>(0x082DAD30);
void * const CCodeBaseInternal__GetLocation = reinterpret_cast<void*>(0x082D9D9C);
void * const CCodeBaseInternal__GetString = reinterpret_cast<void*>(0x082D9E74);
void * const CCodeBaseInternal__GetVar = reinterpret_cast<void*>(0x082DA6E0);
void * const CCodeBaseInternal__GetVector = reinterpret_cast<void*>(0x082D9CF0);
void * const CCodeBaseInternal__OpenFile = reinterpret_cast<void*>(0x082DA22C);

void * const CCombatInformation__CCombatInformationCtor = reinterpret_cast<void*>(0x080C4E88);
void * const CCombatInformation__CCombatInformationDtor = reinterpret_cast<void*>(0x080C4FC8);
void * const CCombatInformation____as = reinterpret_cast<void*>(0x080C5FA4);
void * const CCombatInformation____eq = reinterpret_cast<void*>(0x080C5CF0);
void * const CCombatInformation____ne = reinterpret_cast<void*>(0x080C5E10);
void * const CCombatInformation__LoadData = reinterpret_cast<void*>(0x080C55C4);
void * const CCombatInformation__SaveData = reinterpret_cast<void*>(0x080C50B0);

void * const CCombatInformationNode__CCombatInformationNodeCtor = reinterpret_cast<void*>(0x080CB51C);
void * const CCombatInformationNode____as = reinterpret_cast<void*>(0x080CB5C8);
void * const CCombatInformationNode____eq = reinterpret_cast<void*>(0x080CB540);
void * const CCombatInformationNode____ne = reinterpret_cast<void*>(0x080CB584);

void * const CConnectionLib__CConnectionLibCtor = reinterpret_cast<void*>(0x08271D24);
void * const CConnectionLib__CConnectionLibDtor = reinterpret_cast<void*>(0x08271FB0);
void * const CConnectionLib__AddServer = reinterpret_cast<void*>(0x08272A98);
void * const CConnectionLib__ChatNameMangle = reinterpret_cast<void*>(0x08272D34);
void * const CConnectionLib__ClearServers = reinterpret_cast<void*>(0x08272B74);
void * const CConnectionLib__ClientConnectToGameSpy = reinterpret_cast<void*>(0x08271EF8);
void * const CConnectionLib__ErrorClientShuttingDown = reinterpret_cast<void*>(0x08272924);
void * const CConnectionLib__GenerateCommunityNameResponse = reinterpret_cast<void*>(0x082726C0);
void * const CConnectionLib__GenerateResponse = reinterpret_cast<void*>(0x082721A0);
void * const CConnectionLib__GetAvailability = reinterpret_cast<void*>(0x0827283C);
void * const CConnectionLib__GetAvailabilityStatus = reinterpret_cast<void*>(0x0827282C);
void * const CConnectionLib__GetClientConnectionPhase = reinterpret_cast<void*>(0x08272918);
void * const CConnectionLib__GetClientError = reinterpret_cast<void*>(0x0827293C);
void * const CConnectionLib__GetCommunityNameStatus = reinterpret_cast<void*>(0x082726AC);
void * const CConnectionLib__GetDigiDistModuleCipher = reinterpret_cast<void*>(0x08272860);
void * const CConnectionLib__GetGameFilters = reinterpret_cast<void*>(0x08272CCC);
void * const CConnectionLib__GetGameTypeFromGroupId = reinterpret_cast<void*>(0x08272C54);
void * const CConnectionLib__GetGroupIdFromGameType = reinterpret_cast<void*>(0x08272C9C);
void * const CConnectionLib__GetGSClientGameRegion = reinterpret_cast<void*>(0x08272A80);
void * const CConnectionLib__GetKeyAuthDemand = reinterpret_cast<void*>(0x08272634);
void * const CConnectionLib__GetKeyCollision = reinterpret_cast<void*>(0x08272658);
void * const CConnectionLib__GetKeyRejectionReason = reinterpret_cast<void*>(0x08272690);
void * const CConnectionLib__GetKeyStatus = reinterpret_cast<void*>(0x0827267C);
void * const CConnectionLib__GetMasterServerInternetName = reinterpret_cast<void*>(0x08272208);
void * const CConnectionLib__GetMasterServerPort = reinterpret_cast<void*>(0x0827222C);
void * const CConnectionLib__GetMasterServerStatus = reinterpret_cast<void*>(0x08272778);
void * const CConnectionLib__GetMessageOfTheDay = reinterpret_cast<void*>(0x082726E8);
void * const CConnectionLib__GetMessagesIn = reinterpret_cast<void*>(0x08272610);
void * const CConnectionLib__GetNetConnectionUp = reinterpret_cast<void*>(0x08272044);
void * const CConnectionLib__GetNetLayer = reinterpret_cast<void*>(0x08272524);
void * const CConnectionLib__GetNextBuddyEntry = reinterpret_cast<void*>(0x08272818);
void * const CConnectionLib__GetPublicPartFromCDKey = reinterpret_cast<void*>(0x082721C8);
void * const CConnectionLib__GetStrrefFromGameType = reinterpret_cast<void*>(0x08272C24);
void * const CConnectionLib__GetStrrefFromGroupId = reinterpret_cast<void*>(0x08272BD4);
void * const CConnectionLib__GetVersion = reinterpret_cast<void*>(0x08272788);
void * const CConnectionLib__GetVersionNumber = reinterpret_cast<void*>(0x0827253C);
void * const CConnectionLib__GSClientGetBuildFilter = reinterpret_cast<void*>(0x08272A50);
void * const CConnectionLib__GSClientGetGroupRoomNumber = reinterpret_cast<void*>(0x08272A10);
void * const CConnectionLib__GSClientGroupRoomAdded = reinterpret_cast<void*>(0x08272948);
void * const CConnectionLib__GSClientJoinGroupRoom = reinterpret_cast<void*>(0x082729F0);
void * const CConnectionLib__GSClientMessage = reinterpret_cast<void*>(0x082729AC);
void * const CConnectionLib__GSClientRoomPlayerChange = reinterpret_cast<void*>(0x08272968);
void * const CConnectionLib__GSClientSetBuildFilter = reinterpret_cast<void*>(0x08272A2C);
void * const CConnectionLib__HandleGameSpyToServerMessage = reinterpret_cast<void*>(0x08272154);
void * const CConnectionLib__HandleMasterServerToGameMessage = reinterpret_cast<void*>(0x082725F0);
void * const CConnectionLib__HandleServerGameSpyMessage = reinterpret_cast<void*>(0x08272130);
void * const CConnectionLib__InitializeGameSpyRooms = reinterpret_cast<void*>(0x08271E04);
void * const CConnectionLib__NewClientChallenge = reinterpret_cast<void*>(0x0827218C);
void * const CConnectionLib__RemoveServer = reinterpret_cast<void*>(0x08272AF8);
void * const CConnectionLib__ResetMessagesInFlag = reinterpret_cast<void*>(0x08272620);
void * const CConnectionLib__SendAddBuddyRequest = reinterpret_cast<void*>(0x0827247C);
void * const CConnectionLib__SendClientToMasterCreateAccountPartOne = reinterpret_cast<void*>(0x082723DC);
void * const CConnectionLib__SendClientToMasterCreateAccountPartTwo = reinterpret_cast<void*>(0x082723FC);
void * const CConnectionLib__SendClientToMasterMOTDRequest = reinterpret_cast<void*>(0x0827242C);
void * const CConnectionLib__SendClientToMasterVersionRequest = reinterpret_cast<void*>(0x08272454);
void * const CConnectionLib__SendDigiDistAuthRequest = reinterpret_cast<void*>(0x0827284C);
void * const CConnectionLib__SendGameToMasterAuthorizationRequest__0 = reinterpret_cast<void*>(0x08272240);
void * const CConnectionLib__SendGameToMasterAuthorizationRequest__1 = reinterpret_cast<void*>(0x08272260);
void * const CConnectionLib__SendGameToMasterCommunityNameAuth = reinterpret_cast<void*>(0x08272398);
void * const CConnectionLib__SendGameToMasterDisconnect__0 = reinterpret_cast<void*>(0x082722C0);
void * const CConnectionLib__SendGameToMasterDisconnect__1 = reinterpret_cast<void*>(0x082722A0);
void * const CConnectionLib__SendGameToMasterHeartbeat = reinterpret_cast<void*>(0x08272280);
void * const CConnectionLib__SendGameToMasterModule = reinterpret_cast<void*>(0x08272370);
void * const CConnectionLib__SendGameToMasterShutDown = reinterpret_cast<void*>(0x08272350);
void * const CConnectionLib__SendGameToMasterStartup = reinterpret_cast<void*>(0x08272300);
void * const CConnectionLib__SendGameToMasterStatusRequest = reinterpret_cast<void*>(0x082722E0);
void * const CConnectionLib__SendGetAvailabilityRequest = reinterpret_cast<void*>(0x08272504);
void * const CConnectionLib__SendGetBuddyListRequest = reinterpret_cast<void*>(0x082724BC);
void * const CConnectionLib__SendMessageToNick = reinterpret_cast<void*>(0x08272BB0);
void * const CConnectionLib__SendMessageToRoom = reinterpret_cast<void*>(0x08272B8C);
void * const CConnectionLib__SendRemoveBuddyRequest = reinterpret_cast<void*>(0x0827249C);
void * const CConnectionLib__SendSetAvailabilityRequest = reinterpret_cast<void*>(0x082724DC);
void * const CConnectionLib__ServerConnectToGameSpy = reinterpret_cast<void*>(0x08272050);
void * const CConnectionLib__SetGameFilters = reinterpret_cast<void*>(0x08272CF4);
void * const CConnectionLib__SetGSClientGameRegion = reinterpret_cast<void*>(0x08272A68);
void * const CConnectionLib__SetLanguage = reinterpret_cast<void*>(0x08272010);
void * const CConnectionLib__SetNetConnectionUp = reinterpret_cast<void*>(0x08272034);
void * const CConnectionLib__ShutDownClientGameSpyConnection = reinterpret_cast<void*>(0x08272874);
void * const CConnectionLib__ShutDownServerGameSpyConnection = reinterpret_cast<void*>(0x082720E4);
void * const CConnectionLib__StartMstHeartbeatTimer = reinterpret_cast<void*>(0x08272560);
void * const CConnectionLib__StartSystemUpdateTimer = reinterpret_cast<void*>(0x08272588);
void * const CConnectionLib__StartTimeOutTimer = reinterpret_cast<void*>(0x082725B0);
void * const CConnectionLib__TimeOutTimerRunning = reinterpret_cast<void*>(0x082725D8);
void * const CConnectionLib__UpdateConnectionPhase = reinterpret_cast<void*>(0x082728E8);
void * const CConnectionLib__UpdateGameSpyClient = reinterpret_cast<void*>(0x082728A0);
void * const CConnectionLib__UpdateGameSpyServer = reinterpret_cast<void*>(0x08272110);
void * const CConnectionLib__UpdateMstHeartbeatTimer = reinterpret_cast<void*>(0x08272574);
void * const CConnectionLib__UpdateServer = reinterpret_cast<void*>(0x08272B14);
void * const CConnectionLib__UpdateSystemUpdateTimer = reinterpret_cast<void*>(0x0827259C);
void * const CConnectionLib__UpdateTimeOutTimer = reinterpret_cast<void*>(0x082725C4);
void * const CConnectionLib__ValidateCdKey = reinterpret_cast<void*>(0x08272178);

void * const CDUtil__CalculateCRC = reinterpret_cast<void*>(0x08299168);
void * const CDUtil__CreateChallengeString = reinterpret_cast<void*>(0x08293F04);
void * const CDUtil__DecodeBase = reinterpret_cast<void*>(0x082992E8);
void * const CDUtil__EncodeBase = reinterpret_cast<void*>(0x0829925C);
void * const CDUtil__GenerateResponse = reinterpret_cast<void*>(0x08293FC8);
void * const CDUtil__Initialize = reinterpret_cast<void*>(0x082940A0);
void * const CDUtil__InitializeBaseConvert = reinterpret_cast<void*>(0x08299208);
void * const CDUtil__InitializeCrc = reinterpret_cast<void*>(0x0829912C);
void * const CDUtil__ScrambleKey = reinterpret_cast<void*>(0x08298ED8);
void * const CDUtil__UnScrambleKey = reinterpret_cast<void*>(0x08298FA8);
void * const CDUtil__ValidateKey = reinterpret_cast<void*>(0x08299074);

void * const CERFFile__CERFFileCtor = reinterpret_cast<void*>(0x082B647C);
void * const CERFFile__CERFFileDtor = reinterpret_cast<void*>(0x082B7AF8);
void * const CERFFile__AddResource__0 = reinterpret_cast<void*>(0x082B65F4);
void * const CERFFile__AddResource__1 = reinterpret_cast<void*>(0x082B7B74);
void * const CERFFile__AddString = reinterpret_cast<void*>(0x082B6844);
void * const CERFFile__Create = reinterpret_cast<void*>(0x082B7B8C);
void * const CERFFile__Finish = reinterpret_cast<void*>(0x082B7CAC);
void * const CERFFile__Read = reinterpret_cast<void*>(0x082B7B84);
void * const CERFFile__ReadModuleDescription = reinterpret_cast<void*>(0x082B7280);
void * const CERFFile__RecalculateOffsets = reinterpret_cast<void*>(0x082B71D8);
void * const CERFFile__RemoveResource__0 = reinterpret_cast<void*>(0x082B6704);
void * const CERFFile__RemoveResource__1 = reinterpret_cast<void*>(0x082B7B7C);
void * const CERFFile__Reset = reinterpret_cast<void*>(0x082B652C);
void * const CERFFile__SetNumEntries = reinterpret_cast<void*>(0x082B6A54);
void * const CERFFile__SetVersion = reinterpret_cast<void*>(0x082B7B5C);
void * const CERFFile__Write = reinterpret_cast<void*>(0x082B6EE8);
void * const CERFFile__WriteHeader = reinterpret_cast<void*>(0x082B7C44);
void * const CERFFile__WriteResource = reinterpret_cast<void*>(0x082B6BF8);
void * const CERFFile__WriteStringTable = reinterpret_cast<void*>(0x082B68FC);

void * const CERFKey__CERFKeyCtor = reinterpret_cast<void*>(0x082B7CF8);
void * const CERFKey__CERFKeyDtor = reinterpret_cast<void*>(0x082B7D24);
void * const CERFKey__Read = reinterpret_cast<void*>(0x082B7DC4);
void * const CERFKey__Reset = reinterpret_cast<void*>(0x082B7D58);
void * const CERFKey__SetName = reinterpret_cast<void*>(0x082B7D80);
void * const CERFKey__Write = reinterpret_cast<void*>(0x082B7DCC);

void * const CERFRes__CERFResCtor = reinterpret_cast<void*>(0x082B7E20);
void * const CERFRes__CERFResDtor = reinterpret_cast<void*>(0x082B7E3C);
void * const CERFRes__Read = reinterpret_cast<void*>(0x082B7EAC);
void * const CERFRes__Reset = reinterpret_cast<void*>(0x082B7E70);
void * const CERFRes__Write = reinterpret_cast<void*>(0x082B7EB4);

void * const CERFString__CERFStringCtor = reinterpret_cast<void*>(0x082B7F1C);
void * const CERFString__CERFStringDtor = reinterpret_cast<void*>(0x082B7F38);
void * const CERFString__GetText = reinterpret_cast<void*>(0x082B7FA8);
void * const CERFString__Read = reinterpret_cast<void*>(0x082B8038);
void * const CERFString__Reset = reinterpret_cast<void*>(0x082B7F6C);
void * const CERFString__SetText = reinterpret_cast<void*>(0x082B7FD0);
void * const CERFString__Write = reinterpret_cast<void*>(0x082B8040);

void * const CExoAliasList__CExoAliasListCtor = reinterpret_cast<void*>(0x082C92DC);
void * const CExoAliasList__CExoAliasListDtor = reinterpret_cast<void*>(0x082C9324);
void * const CExoAliasList__Add = reinterpret_cast<void*>(0x082C9364);
void * const CExoAliasList__Clear = reinterpret_cast<void*>(0x082C940C);
void * const CExoAliasList__Delete = reinterpret_cast<void*>(0x082C9420);
void * const CExoAliasList__GetAliasPath = reinterpret_cast<void*>(0x082C9484);
void * const CExoAliasList__ResolveFileName = reinterpret_cast<void*>(0x082C9498);

void * const CExoAliasListInternal__CExoAliasListInternalCtor = reinterpret_cast<void*>(0x082D06CC);
void * const CExoAliasListInternal__CExoAliasListInternalDtor = reinterpret_cast<void*>(0x082D0720);
void * const CExoAliasListInternal__Add = reinterpret_cast<void*>(0x082CFE54);
void * const CExoAliasListInternal__Clear = reinterpret_cast<void*>(0x082D079C);
void * const CExoAliasListInternal__Delete = reinterpret_cast<void*>(0x082D00F0);
void * const CExoAliasListInternal__GetAliasPath = reinterpret_cast<void*>(0x082D07F0);
void * const CExoAliasListInternal__ResolveFileName = reinterpret_cast<void*>(0x082D0260);

void * const CExoArrayListTemplatedCCombatInformationNodePtr__CExoArrayListTemplatedCCombatInformationNodePtrCtor__0 = reinterpret_cast<void*>(0x080CBC2C);
void * const CExoArrayListTemplatedCCombatInformationNodePtr__CExoArrayListTemplatedCCombatInformationNodePtrCtor__1 = reinterpret_cast<void*>(0x080CBBF8);
void * const CExoArrayListTemplatedCCombatInformationNodePtr____vc = reinterpret_cast<void*>(0x08083438);
void * const CExoArrayListTemplatedCCombatInformationNodePtr__Add = reinterpret_cast<void*>(0x080CBBB8);
void * const CExoArrayListTemplatedCCombatInformationNodePtr__Allocate = reinterpret_cast<void*>(0x080CBCDC);
void * const CExoArrayListTemplatedCCombatInformationNodePtr__DelIndex = reinterpret_cast<void*>(0x080CBC64);
void * const CExoArrayListTemplatedCCombatInformationNodePtr__SetSize = reinterpret_cast<void*>(0x080CBC94);

void * const CExoArrayListTemplatedCEffectIconObjectPtr__CExoArrayListTemplatedCEffectIconObjectPtrCtor__0 = reinterpret_cast<void*>(0x08094814);
void * const CExoArrayListTemplatedCEffectIconObjectPtr__CExoArrayListTemplatedCEffectIconObjectPtrCtor__1 = reinterpret_cast<void*>(0x080947E0);
void * const CExoArrayListTemplatedCEffectIconObjectPtr____vc = reinterpret_cast<void*>(0x08083428);
void * const CExoArrayListTemplatedCEffectIconObjectPtr__Add = reinterpret_cast<void*>(0x08083520);
void * const CExoArrayListTemplatedCEffectIconObjectPtr__Allocate = reinterpret_cast<void*>(0x08083BB8);
void * const CExoArrayListTemplatedCEffectIconObjectPtr__DelIndex = reinterpret_cast<void*>(0x080834F0);
void * const CExoArrayListTemplatedCEffectIconObjectPtr__SetSize = reinterpret_cast<void*>(0x081E4B14);

void * const CExoArrayListTemplatedCExoString__CExoArrayListTemplatedCExoStringCtor__0 = reinterpret_cast<void*>(0x08050F60);
void * const CExoArrayListTemplatedCExoString__CExoArrayListTemplatedCExoStringCtor__1 = reinterpret_cast<void*>(0x08050F2C);
void * const CExoArrayListTemplatedCExoString____vc__0 = reinterpret_cast<void*>(0x08050FC4);
void * const CExoArrayListTemplatedCExoString____vc__1 = reinterpret_cast<void*>(0x082ACF5C);
void * const CExoArrayListTemplatedCExoString__Add = reinterpret_cast<void*>(0x080512CC);
void * const CExoArrayListTemplatedCExoString__AddUnique = reinterpret_cast<void*>(0x08050FF4);
void * const CExoArrayListTemplatedCExoString__Allocate = reinterpret_cast<void*>(0x080510B0);
void * const CExoArrayListTemplatedCExoString__Contains = reinterpret_cast<void*>(0x08051248);
void * const CExoArrayListTemplatedCExoString__DelIndex = reinterpret_cast<void*>(0x080B18B0);
void * const CExoArrayListTemplatedCExoString__Insert = reinterpret_cast<void*>(0x082CEB9C);
void * const CExoArrayListTemplatedCExoString__Remove = reinterpret_cast<void*>(0x080B17C8);
void * const CExoArrayListTemplatedCExoString__SetSize = reinterpret_cast<void*>(0x08061CB0);

void * const CExoArrayListTemplatedCExoStringPtr__CExoArrayListTemplatedCExoStringPtrCtor__0 = reinterpret_cast<void*>(0x081D64F0);
void * const CExoArrayListTemplatedCExoStringPtr__CExoArrayListTemplatedCExoStringPtrCtor__1 = reinterpret_cast<void*>(0x081D64BC);
void * const CExoArrayListTemplatedCExoStringPtr__CExoArrayListTemplatedCExoStringPtrCtor__2 = reinterpret_cast<void*>(0x08236D04);
void * const CExoArrayListTemplatedCExoStringPtr____vc__0 = reinterpret_cast<void*>(0x081139A0);
void * const CExoArrayListTemplatedCExoStringPtr____vc__1 = reinterpret_cast<void*>(0x08236DA8);
void * const CExoArrayListTemplatedCExoStringPtr__Add = reinterpret_cast<void*>(0x081D6690);
void * const CExoArrayListTemplatedCExoStringPtr__Allocate = reinterpret_cast<void*>(0x081D676C);
void * const CExoArrayListTemplatedCExoStringPtr__SetSize = reinterpret_cast<void*>(0x081D66D0);

void * const CExoArrayListTemplatedCFeatUseListEntryPtr__CExoArrayListTemplatedCFeatUseListEntryPtrCtor__0 = reinterpret_cast<void*>(0x08165910);
void * const CExoArrayListTemplatedCFeatUseListEntryPtr__CExoArrayListTemplatedCFeatUseListEntryPtrCtor__1 = reinterpret_cast<void*>(0x081658DC);
void * const CExoArrayListTemplatedCFeatUseListEntryPtr____vc = reinterpret_cast<void*>(0x08082DB8);
void * const CExoArrayListTemplatedCFeatUseListEntryPtr__Add = reinterpret_cast<void*>(0x080832D0);
void * const CExoArrayListTemplatedCFeatUseListEntryPtr__Allocate = reinterpret_cast<void*>(0x08083A04);
void * const CExoArrayListTemplatedCFeatUseListEntryPtr__DelIndex = reinterpret_cast<void*>(0x080832A0);

void * const CExoArrayListTemplatedCFileInfo__CExoArrayListTemplatedCFileInfoCtor__0 = reinterpret_cast<void*>(0x081E86F0);
void * const CExoArrayListTemplatedCFileInfo__CExoArrayListTemplatedCFileInfoCtor__1 = reinterpret_cast<void*>(0x081E86BC);
void * const CExoArrayListTemplatedCFileInfo____vc = reinterpret_cast<void*>(0x081E8758);
void * const CExoArrayListTemplatedCFileInfo__Add = reinterpret_cast<void*>(0x082CEAE0);
void * const CExoArrayListTemplatedCFileInfo__Allocate = reinterpret_cast<void*>(0x081E876C);
void * const CExoArrayListTemplatedCFileInfo__Insert = reinterpret_cast<void*>(0x082CE994);

void * const CExoArrayListTemplatedCGameEffectPtr__CExoArrayListTemplatedCGameEffectPtrCtor__0 = reinterpret_cast<void*>(0x080E55D8);
void * const CExoArrayListTemplatedCGameEffectPtr__CExoArrayListTemplatedCGameEffectPtrCtor__1 = reinterpret_cast<void*>(0x080E55A4);
void * const CExoArrayListTemplatedCGameEffectPtr__CExoArrayListTemplatedCGameEffectPtrCtor__2 = reinterpret_cast<void*>(0x0813F0B0);
void * const CExoArrayListTemplatedCGameEffectPtr____as = reinterpret_cast<void*>(0x08165A6C);
void * const CExoArrayListTemplatedCGameEffectPtr____vc__0 = reinterpret_cast<void*>(0x0805F234);
void * const CExoArrayListTemplatedCGameEffectPtr____vc__1 = reinterpret_cast<void*>(0x0813F18C);
void * const CExoArrayListTemplatedCGameEffectPtr__Add = reinterpret_cast<void*>(0x08061028);
void * const CExoArrayListTemplatedCGameEffectPtr__Allocate = reinterpret_cast<void*>(0x08061068);
void * const CExoArrayListTemplatedCGameEffectPtr__DelIndex = reinterpret_cast<void*>(0x08060E38);
void * const CExoArrayListTemplatedCGameEffectPtr__IndexOf = reinterpret_cast<void*>(0x081D6624);
void * const CExoArrayListTemplatedCGameEffectPtr__Insert = reinterpret_cast<void*>(0x081D65D8);
void * const CExoArrayListTemplatedCGameEffectPtr__SetSize = reinterpret_cast<void*>(0x081D6538);

void * const CExoArrayListTemplatedCGameObjectPtr__CExoArrayListTemplatedCGameObjectPtrCtor__0 = reinterpret_cast<void*>(0x080BD1E0);
void * const CExoArrayListTemplatedCGameObjectPtr__CExoArrayListTemplatedCGameObjectPtrCtor__1 = reinterpret_cast<void*>(0x080BD1AC);
void * const CExoArrayListTemplatedCGameObjectPtr____vc = reinterpret_cast<void*>(0x080D5E38);
void * const CExoArrayListTemplatedCGameObjectPtr__Add = reinterpret_cast<void*>(0x080D5C68);
void * const CExoArrayListTemplatedCGameObjectPtr__Allocate = reinterpret_cast<void*>(0x080BD218);

void * const CExoArrayListTemplatedchar__CExoArrayListTemplatedcharCtor__0 = reinterpret_cast<void*>(0x080830E8);
void * const CExoArrayListTemplatedchar__CExoArrayListTemplatedcharCtor__1 = reinterpret_cast<void*>(0x080830B4);
void * const CExoArrayListTemplatedchar____vc = reinterpret_cast<void*>(0x08083164);
void * const CExoArrayListTemplatedchar__Add = reinterpret_cast<void*>(0x08083120);
void * const CExoArrayListTemplatedchar__Allocate = reinterpret_cast<void*>(0x08083964);

void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__CExoArrayListTemplatedCLoopingVisualEffectPtrCtor__0 = reinterpret_cast<void*>(0x081D6418);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__CExoArrayListTemplatedCLoopingVisualEffectPtrCtor__1 = reinterpret_cast<void*>(0x081D63E4);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr____vc = reinterpret_cast<void*>(0x0813F0A0);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__Add = reinterpret_cast<void*>(0x080836FC);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__AddUnique = reinterpret_cast<void*>(0x08082CFC);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__Allocate = reinterpret_cast<void*>(0x08083680);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__Contains = reinterpret_cast<void*>(0x080836D4);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__DelIndex = reinterpret_cast<void*>(0x081D6580);
void * const CExoArrayListTemplatedCLoopingVisualEffectPtr__SetSize = reinterpret_cast<void*>(0x08082CB4);

void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo__CExoArrayListTemplatedCNetLayerPlayerCDKeyInfoCtor__0 = reinterpret_cast<void*>(0x082ACE64);
void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo__CExoArrayListTemplatedCNetLayerPlayerCDKeyInfoCtor__1 = reinterpret_cast<void*>(0x082ACE30);
void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo____vc = reinterpret_cast<void*>(0x08050E34);
void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo__Add = reinterpret_cast<void*>(0x082ACAC4);
void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo__Allocate = reinterpret_cast<void*>(0x082ACB80);
void * const CExoArrayListTemplatedCNetLayerPlayerCDKeyInfo__SetSize = reinterpret_cast<void*>(0x082ACED8);

void * const CExoArrayListTemplatedCNWCCMessageDataPtr__CExoArrayListTemplatedCNWCCMessageDataPtrCtor__0 = reinterpret_cast<void*>(0x080E56B0);
void * const CExoArrayListTemplatedCNWCCMessageDataPtr__CExoArrayListTemplatedCNWCCMessageDataPtrCtor__1 = reinterpret_cast<void*>(0x080E567C);
void * const CExoArrayListTemplatedCNWCCMessageDataPtr____vc = reinterpret_cast<void*>(0x080F5CDC);
void * const CExoArrayListTemplatedCNWCCMessageDataPtr__Add = reinterpret_cast<void*>(0x080F5C9C);
void * const CExoArrayListTemplatedCNWCCMessageDataPtr__Allocate = reinterpret_cast<void*>(0x080E58D4);

void * const CExoArrayListTemplatedCNWItemProperty__CExoArrayListTemplatedCNWItemPropertyCtor__0 = reinterpret_cast<void*>(0x081A7328);
void * const CExoArrayListTemplatedCNWItemProperty__CExoArrayListTemplatedCNWItemPropertyCtor__1 = reinterpret_cast<void*>(0x081A72F4);
void * const CExoArrayListTemplatedCNWItemProperty____as = reinterpret_cast<void*>(0x081A73D0);
void * const CExoArrayListTemplatedCNWItemProperty____vc__0 = reinterpret_cast<void*>(0x081A73A8);
void * const CExoArrayListTemplatedCNWItemProperty____vc__1 = reinterpret_cast<void*>(0x081A7568);
void * const CExoArrayListTemplatedCNWItemProperty__Add = reinterpret_cast<void*>(0x081A7440);
void * const CExoArrayListTemplatedCNWItemProperty__Allocate = reinterpret_cast<void*>(0x081A74F8);
void * const CExoArrayListTemplatedCNWItemProperty__DelIndex = reinterpret_cast<void*>(0x081A7490);
void * const CExoArrayListTemplatedCNWItemProperty__SetSize = reinterpret_cast<void*>(0x081A7360);

void * const CExoArrayListTemplatedCNWLevelStatsPtr__CExoArrayListTemplatedCNWLevelStatsPtrCtor__0 = reinterpret_cast<void*>(0x0816597C);
void * const CExoArrayListTemplatedCNWLevelStatsPtr__CExoArrayListTemplatedCNWLevelStatsPtrCtor__1 = reinterpret_cast<void*>(0x08165948);
void * const CExoArrayListTemplatedCNWLevelStatsPtr____vc = reinterpret_cast<void*>(0x081659F4);
void * const CExoArrayListTemplatedCNWLevelStatsPtr__Add = reinterpret_cast<void*>(0x081659B4);
void * const CExoArrayListTemplatedCNWLevelStatsPtr__Allocate = reinterpret_cast<void*>(0x08165CD0);
void * const CExoArrayListTemplatedCNWLevelStatsPtr__DelIndex = reinterpret_cast<void*>(0x08165A04);
void * const CExoArrayListTemplatedCNWLevelStatsPtr__Remove = reinterpret_cast<void*>(0x08165B4C);

void * const CExoArrayListTemplatedCNWSExpressionListPtr__CExoArrayListTemplatedCNWSExpressionListPtrCtor__0 = reinterpret_cast<void*>(0x08240240);
void * const CExoArrayListTemplatedCNWSExpressionListPtr__CExoArrayListTemplatedCNWSExpressionListPtrCtor__1 = reinterpret_cast<void*>(0x0824020C);
void * const CExoArrayListTemplatedCNWSExpressionListPtr____vc = reinterpret_cast<void*>(0x082402B8);
void * const CExoArrayListTemplatedCNWSExpressionListPtr__Add = reinterpret_cast<void*>(0x08240278);
void * const CExoArrayListTemplatedCNWSExpressionListPtr__Allocate = reinterpret_cast<void*>(0x082403E4);
void * const CExoArrayListTemplatedCNWSExpressionListPtr__DelIndex = reinterpret_cast<void*>(0x082402C8);

void * const CExoArrayListTemplatedCNWSExpressionNodePtr__CExoArrayListTemplatedCNWSExpressionNodePtrCtor__0 = reinterpret_cast<void*>(0x0824032C);
void * const CExoArrayListTemplatedCNWSExpressionNodePtr__CExoArrayListTemplatedCNWSExpressionNodePtrCtor__1 = reinterpret_cast<void*>(0x082402F8);
void * const CExoArrayListTemplatedCNWSExpressionNodePtr____vc = reinterpret_cast<void*>(0x082403A4);
void * const CExoArrayListTemplatedCNWSExpressionNodePtr__Add = reinterpret_cast<void*>(0x08240364);
void * const CExoArrayListTemplatedCNWSExpressionNodePtr__Allocate = reinterpret_cast<void*>(0x08240438);
void * const CExoArrayListTemplatedCNWSExpressionNodePtr__DelIndex = reinterpret_cast<void*>(0x082403B4);

void * const CExoArrayListTemplatedCNWSExpressionPtr__CExoArrayListTemplatedCNWSExpressionPtrCtor__0 = reinterpret_cast<void*>(0x081D6484);
void * const CExoArrayListTemplatedCNWSExpressionPtr__CExoArrayListTemplatedCNWSExpressionPtrCtor__1 = reinterpret_cast<void*>(0x081D6450);
void * const CExoArrayListTemplatedCNWSExpressionPtr____vc = reinterpret_cast<void*>(0x081D6528);
void * const CExoArrayListTemplatedCNWSExpressionPtr__Add = reinterpret_cast<void*>(0x081D6650);
void * const CExoArrayListTemplatedCNWSExpressionPtr__Allocate = reinterpret_cast<void*>(0x081D6718);

void * const CExoArrayListTemplatedCNWSFactionPtr__CExoArrayListTemplatedCNWSFactionPtrCtor__0 = reinterpret_cast<void*>(0x080BABD8);
void * const CExoArrayListTemplatedCNWSFactionPtr__CExoArrayListTemplatedCNWSFactionPtrCtor__1 = reinterpret_cast<void*>(0x080BABA4);
void * const CExoArrayListTemplatedCNWSFactionPtr____vc = reinterpret_cast<void*>(0x080BAB7C);
void * const CExoArrayListTemplatedCNWSFactionPtr__Add = reinterpret_cast<void*>(0x081D8560);
void * const CExoArrayListTemplatedCNWSFactionPtr__Allocate = reinterpret_cast<void*>(0x080BAC10);

void * const CExoArrayListTemplatedCNWSInvitationDetails__CExoArrayListTemplatedCNWSInvitationDetailsCtor = reinterpret_cast<void*>(0x08113BCC);
void * const CExoArrayListTemplatedCNWSInvitationDetails____vc = reinterpret_cast<void*>(0x08113AE0);
void * const CExoArrayListTemplatedCNWSInvitationDetails__Add = reinterpret_cast<void*>(0x08113C00);
void * const CExoArrayListTemplatedCNWSInvitationDetails__Allocate = reinterpret_cast<void*>(0x08113D10);
void * const CExoArrayListTemplatedCNWSInvitationDetails__DelIndex = reinterpret_cast<void*>(0x08113AF4);

void * const CExoArrayListTemplatedCNWSItemPtr__CExoArrayListTemplatedCNWSItemPtrCtor__0 = reinterpret_cast<void*>(0x08086544);
void * const CExoArrayListTemplatedCNWSItemPtr__CExoArrayListTemplatedCNWSItemPtrCtor__1 = reinterpret_cast<void*>(0x08086510);
void * const CExoArrayListTemplatedCNWSItemPtr____vc = reinterpret_cast<void*>(0x0808657C);
void * const CExoArrayListTemplatedCNWSItemPtr__Add = reinterpret_cast<void*>(0x080865D8);
void * const CExoArrayListTemplatedCNWSItemPtr__Allocate = reinterpret_cast<void*>(0x08086704);
void * const CExoArrayListTemplatedCNWSItemPtr__Insert = reinterpret_cast<void*>(0x0808658C);

void * const CExoArrayListTemplatedCNWSPersonalReputation__CExoArrayListTemplatedCNWSPersonalReputationCtor__0 = reinterpret_cast<void*>(0x0805F0D4);
void * const CExoArrayListTemplatedCNWSPersonalReputation__CExoArrayListTemplatedCNWSPersonalReputationCtor__1 = reinterpret_cast<void*>(0x08060E68);
void * const CExoArrayListTemplatedCNWSPersonalReputation____vc = reinterpret_cast<void*>(0x08060F20);
void * const CExoArrayListTemplatedCNWSPersonalReputation__Add = reinterpret_cast<void*>(0x08060E9C);
void * const CExoArrayListTemplatedCNWSPersonalReputation__Allocate = reinterpret_cast<void*>(0x08060F34);
void * const CExoArrayListTemplatedCNWSPersonalReputation__DelIndex = reinterpret_cast<void*>(0x08113A54);

void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates__CExoArrayListTemplatedCNWSPlayerJournalQuestUpdatesCtor__0 = reinterpret_cast<void*>(0x0805EF84);
void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates__CExoArrayListTemplatedCNWSPlayerJournalQuestUpdatesCtor__1 = reinterpret_cast<void*>(0x0805EF50);
void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates____vc = reinterpret_cast<void*>(0x08083464);
void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates__Add = reinterpret_cast<void*>(0x081B2754);
void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates__Allocate = reinterpret_cast<void*>(0x0805F3A8);
void * const CExoArrayListTemplatedCNWSPlayerJournalQuestUpdates__SetSize = reinterpret_cast<void*>(0x08083478);

void * const CExoArrayListTemplatedCNWSPVPEntry__CExoArrayListTemplatedCNWSPVPEntryCtor__0 = reinterpret_cast<void*>(0x0813F040);
void * const CExoArrayListTemplatedCNWSPVPEntry__CExoArrayListTemplatedCNWSPVPEntryCtor__1 = reinterpret_cast<void*>(0x08113B98);
void * const CExoArrayListTemplatedCNWSPVPEntry____vc = reinterpret_cast<void*>(0x08113B84);
void * const CExoArrayListTemplatedCNWSPVPEntry__Add = reinterpret_cast<void*>(0x08113B34);
void * const CExoArrayListTemplatedCNWSPVPEntry__Allocate = reinterpret_cast<void*>(0x08113CA0);
void * const CExoArrayListTemplatedCNWSPVPEntry__DelIndex = reinterpret_cast<void*>(0x08113C50);

void * const CExoArrayListTemplatedCNWSScriptVar__CExoArrayListTemplatedCNWSScriptVarCtor__0 = reinterpret_cast<void*>(0x081F45E0);
void * const CExoArrayListTemplatedCNWSScriptVar__CExoArrayListTemplatedCNWSScriptVarCtor__1 = reinterpret_cast<void*>(0x080D5A58);
void * const CExoArrayListTemplatedCNWSScriptVar____vc = reinterpret_cast<void*>(0x0819BE30);
void * const CExoArrayListTemplatedCNWSScriptVar__Add = reinterpret_cast<void*>(0x081F44F0);
void * const CExoArrayListTemplatedCNWSScriptVar__Allocate = reinterpret_cast<void*>(0x080D5CA8);
void * const CExoArrayListTemplatedCNWSScriptVar__DelIndex = reinterpret_cast<void*>(0x081F4584);

void * const CExoArrayListTemplatedCNWSSpellScriptDataPtr__CExoArrayListTemplatedCNWSSpellScriptDataPtrCtor__0 = reinterpret_cast<void*>(0x080E5644);
void * const CExoArrayListTemplatedCNWSSpellScriptDataPtr__CExoArrayListTemplatedCNWSSpellScriptDataPtrCtor__1 = reinterpret_cast<void*>(0x080E5610);
void * const CExoArrayListTemplatedCNWSSpellScriptDataPtr____vc = reinterpret_cast<void*>(0x080F5CEC);
void * const CExoArrayListTemplatedCNWSSpellScriptDataPtr__Add = reinterpret_cast<void*>(0x080F5CFC);
void * const CExoArrayListTemplatedCNWSSpellScriptDataPtr__Allocate = reinterpret_cast<void*>(0x080E5880);

void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility__CExoArrayListTemplatedCNWSStats_SpellLikeAbilityCtor__0 = reinterpret_cast<void*>(0x08165A34);
void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility__CExoArrayListTemplatedCNWSStats_SpellLikeAbilityCtor__1 = reinterpret_cast<void*>(0x08082E48);
void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility____vc = reinterpret_cast<void*>(0x08165AB4);
void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility__Add = reinterpret_cast<void*>(0x08165C2C);
void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility__Allocate = reinterpret_cast<void*>(0x08083560);
void * const CExoArrayListTemplatedCNWSStats_SpellLikeAbility__SetSize = reinterpret_cast<void*>(0x08082E7C);

void * const CExoArrayListTemplatedCNWSStats_SpellPtr__CExoArrayListTemplatedCNWSStats_SpellPtrCtor__0 = reinterpret_cast<void*>(0x08165824);
void * const CExoArrayListTemplatedCNWSStats_SpellPtr__CExoArrayListTemplatedCNWSStats_SpellPtrCtor__1 = reinterpret_cast<void*>(0x081657F0);
void * const CExoArrayListTemplatedCNWSStats_SpellPtr____vc = reinterpret_cast<void*>(0x0816585C);
void * const CExoArrayListTemplatedCNWSStats_SpellPtr__Add = reinterpret_cast<void*>(0x0816586C);
void * const CExoArrayListTemplatedCNWSStats_SpellPtr__Allocate = reinterpret_cast<void*>(0x08165C7C);
void * const CExoArrayListTemplatedCNWSStats_SpellPtr__DelIndex = reinterpret_cast<void*>(0x081658AC);

void * const CExoArrayListTemplatedCNWSTagNode__CExoArrayListTemplatedCNWSTagNodeCtor__0 = reinterpret_cast<void*>(0x081C1B00);
void * const CExoArrayListTemplatedCNWSTagNode__CExoArrayListTemplatedCNWSTagNodeCtor__1 = reinterpret_cast<void*>(0x081C1ACC);
void * const CExoArrayListTemplatedCNWSTagNode____vc = reinterpret_cast<void*>(0x081C1DE8);
void * const CExoArrayListTemplatedCNWSTagNode__Add = reinterpret_cast<void*>(0x081C1FEC);
void * const CExoArrayListTemplatedCNWSTagNode__Allocate = reinterpret_cast<void*>(0x081C20CC);
void * const CExoArrayListTemplatedCNWSTagNode__DelIndex = reinterpret_cast<void*>(0x081C1E6C);
void * const CExoArrayListTemplatedCNWSTagNode__Insert = reinterpret_cast<void*>(0x081C1DFC);

void * const CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtr__CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtrCtor__0 = reinterpret_cast<void*>(0x08094404);
void * const CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtr__CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtrCtor__1 = reinterpret_cast<void*>(0x080943D0);
void * const CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtr__Add = reinterpret_cast<void*>(0x0809443C);
void * const CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtr__Allocate = reinterpret_cast<void*>(0x080944D8);
void * const CExoArrayListTemplatedCNWTileSurfaceMeshAABBNodePtr__DelIndex = reinterpret_cast<void*>(0x0809447C);

void * const CExoArrayListTemplatedCNWVisibilityNodePtr__CExoArrayListTemplatedCNWVisibilityNodePtrCtor__0 = reinterpret_cast<void*>(0x08083268);
void * const CExoArrayListTemplatedCNWVisibilityNodePtr__CExoArrayListTemplatedCNWVisibilityNodePtrCtor__1 = reinterpret_cast<void*>(0x08083234);
void * const CExoArrayListTemplatedCNWVisibilityNodePtr____vc = reinterpret_cast<void*>(0x08082D38);
void * const CExoArrayListTemplatedCNWVisibilityNodePtr__Add = reinterpret_cast<void*>(0x08082D78);
void * const CExoArrayListTemplatedCNWVisibilityNodePtr__Allocate = reinterpret_cast<void*>(0x08083774);
void * const CExoArrayListTemplatedCNWVisibilityNodePtr__DelIndex = reinterpret_cast<void*>(0x08082D48);

void * const CExoArrayListTemplatedCResRef__CExoArrayListTemplatedCResRefCtor__0 = reinterpret_cast<void*>(0x080B1564);
void * const CExoArrayListTemplatedCResRef__CExoArrayListTemplatedCResRefCtor__1 = reinterpret_cast<void*>(0x080B1530);
void * const CExoArrayListTemplatedCResRef__CExoArrayListTemplatedCResRefCtor__2 = reinterpret_cast<void*>(0x081E9DF0);
void * const CExoArrayListTemplatedCResRef____vc__0 = reinterpret_cast<void*>(0x081E9DE0);
void * const CExoArrayListTemplatedCResRef____vc__1 = reinterpret_cast<void*>(0x081E9EC0);
void * const CExoArrayListTemplatedCResRef__Add = reinterpret_cast<void*>(0x080B159C);
void * const CExoArrayListTemplatedCResRef__Allocate = reinterpret_cast<void*>(0x080B1704);
void * const CExoArrayListTemplatedCResRef__Contains = reinterpret_cast<void*>(0x080B15EC);

void * const CExoArrayListTemplatedCScriptLogPtr__CExoArrayListTemplatedCScriptLogPtrCtor__0 = reinterpret_cast<void*>(0x08264964);
void * const CExoArrayListTemplatedCScriptLogPtr__CExoArrayListTemplatedCScriptLogPtrCtor__1 = reinterpret_cast<void*>(0x08264930);
void * const CExoArrayListTemplatedCScriptLogPtr____vc = reinterpret_cast<void*>(0x0826499C);
void * const CExoArrayListTemplatedCScriptLogPtr__Add = reinterpret_cast<void*>(0x082649F4);
void * const CExoArrayListTemplatedCScriptLogPtr__Allocate = reinterpret_cast<void*>(0x08264AB4);
void * const CExoArrayListTemplatedCScriptLogPtr__SetSize = reinterpret_cast<void*>(0x082649AC);

void * const CExoArrayListTemplatedCSpell_AddPtr__CExoArrayListTemplatedCSpell_AddPtrCtor__0 = reinterpret_cast<void*>(0x081E49EC);
void * const CExoArrayListTemplatedCSpell_AddPtr__CExoArrayListTemplatedCSpell_AddPtrCtor__1 = reinterpret_cast<void*>(0x081E49B8);
void * const CExoArrayListTemplatedCSpell_AddPtr____vc = reinterpret_cast<void*>(0x080830A4);
void * const CExoArrayListTemplatedCSpell_AddPtr__Add = reinterpret_cast<void*>(0x08082E08);
void * const CExoArrayListTemplatedCSpell_AddPtr__Allocate = reinterpret_cast<void*>(0x0808381C);
void * const CExoArrayListTemplatedCSpell_AddPtr__DelIndex = reinterpret_cast<void*>(0x081E4A54);

void * const CExoArrayListTemplatedCSpell_DeletePtr__CExoArrayListTemplatedCSpell_DeletePtrCtor__0 = reinterpret_cast<void*>(0x081E4980);
void * const CExoArrayListTemplatedCSpell_DeletePtr__CExoArrayListTemplatedCSpell_DeletePtrCtor__1 = reinterpret_cast<void*>(0x081E494C);
void * const CExoArrayListTemplatedCSpell_DeletePtr____vc = reinterpret_cast<void*>(0x08083094);
void * const CExoArrayListTemplatedCSpell_DeletePtr__Add = reinterpret_cast<void*>(0x08082DC8);
void * const CExoArrayListTemplatedCSpell_DeletePtr__Allocate = reinterpret_cast<void*>(0x080837C8);
void * const CExoArrayListTemplatedCSpell_DeletePtr__DelIndex = reinterpret_cast<void*>(0x081E4A24);

void * const CExoArrayListTemplatedCStoreCustomerPtr__CExoArrayListTemplatedCStoreCustomerPtrCtor__0 = reinterpret_cast<void*>(0x080864C8);
void * const CExoArrayListTemplatedCStoreCustomerPtr__CExoArrayListTemplatedCStoreCustomerPtrCtor__1 = reinterpret_cast<void*>(0x08086494);
void * const CExoArrayListTemplatedCStoreCustomerPtr____vc = reinterpret_cast<void*>(0x08086500);
void * const CExoArrayListTemplatedCStoreCustomerPtr__Add = reinterpret_cast<void*>(0x08086640);
void * const CExoArrayListTemplatedCStoreCustomerPtr__Allocate = reinterpret_cast<void*>(0x080866B0);
void * const CExoArrayListTemplatedCStoreCustomerPtr__DelIndex = reinterpret_cast<void*>(0x08086680);

void * const CExoArrayListTemplatedCVirtualMachineFilePtr__CExoArrayListTemplatedCVirtualMachineFilePtrCtor__0 = reinterpret_cast<void*>(0x082647AC);
void * const CExoArrayListTemplatedCVirtualMachineFilePtr__CExoArrayListTemplatedCVirtualMachineFilePtrCtor__1 = reinterpret_cast<void*>(0x08264778);
void * const CExoArrayListTemplatedCVirtualMachineFilePtr____vc = reinterpret_cast<void*>(0x082648F0);
void * const CExoArrayListTemplatedCVirtualMachineFilePtr__Add = reinterpret_cast<void*>(0x082648B0);
void * const CExoArrayListTemplatedCVirtualMachineFilePtr__Allocate = reinterpret_cast<void*>(0x08264A60);
void * const CExoArrayListTemplatedCVirtualMachineFilePtr__DelIndex = reinterpret_cast<void*>(0x08264900);

void * const CExoArrayListTemplatedCWorldJournalEntry__CExoArrayListTemplatedCWorldJournalEntryCtor__0 = reinterpret_cast<void*>(0x081C1B6C);
void * const CExoArrayListTemplatedCWorldJournalEntry__CExoArrayListTemplatedCWorldJournalEntryCtor__1 = reinterpret_cast<void*>(0x081C1B38);
void * const CExoArrayListTemplatedCWorldJournalEntry____vc = reinterpret_cast<void*>(0x081C1EAC);
void * const CExoArrayListTemplatedCWorldJournalEntry__Add = reinterpret_cast<void*>(0x081C0D20);
void * const CExoArrayListTemplatedCWorldJournalEntry__Allocate = reinterpret_cast<void*>(0x081C0DF0);
void * const CExoArrayListTemplatedCWorldJournalEntry__DelIndex = reinterpret_cast<void*>(0x081C1EC0);
void * const CExoArrayListTemplatedCWorldJournalEntry__SetSize = reinterpret_cast<void*>(0x081C1F40);

void * const CExoArrayListTemplatedfloat__CExoArrayListTemplatedfloatCtor__0 = reinterpret_cast<void*>(0x08061BA0);
void * const CExoArrayListTemplatedfloat__CExoArrayListTemplatedfloatCtor__1 = reinterpret_cast<void*>(0x08061B6C);
void * const CExoArrayListTemplatedfloat____vc = reinterpret_cast<void*>(0x08061D24);
void * const CExoArrayListTemplatedfloat__Add = reinterpret_cast<void*>(0x08061D34);
void * const CExoArrayListTemplatedfloat__Allocate = reinterpret_cast<void*>(0x08061D74);
void * const CExoArrayListTemplatedfloat__Insert = reinterpret_cast<void*>(0x08236CB8);
void * const CExoArrayListTemplatedfloat__SetSize = reinterpret_cast<void*>(0x08061C20);

void * const CExoArrayListTemplatedint__CExoArrayListTemplatedintCtor__0 = reinterpret_cast<void*>(0x08050E7C);
void * const CExoArrayListTemplatedint__CExoArrayListTemplatedintCtor__1 = reinterpret_cast<void*>(0x08050E48);
void * const CExoArrayListTemplatedint____vc = reinterpret_cast<void*>(0x08050EF0);
void * const CExoArrayListTemplatedint__Add = reinterpret_cast<void*>(0x08050EB4);
void * const CExoArrayListTemplatedint__Allocate = reinterpret_cast<void*>(0x080511F4);
void * const CExoArrayListTemplatedint__Contains = reinterpret_cast<void*>(0x08086618);
void * const CExoArrayListTemplatedint__IndexOf = reinterpret_cast<void*>(0x08050F00);
void * const CExoArrayListTemplatedint__Pack = reinterpret_cast<void*>(0x080BAB8C);
void * const CExoArrayListTemplatedint__SetSize = reinterpret_cast<void*>(0x08061BD8);

void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__CExoArrayListTemplatedNWPlayerCharacterList_stPtrCtor__0 = reinterpret_cast<void*>(0x08082F24);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__CExoArrayListTemplatedNWPlayerCharacterList_stPtrCtor__1 = reinterpret_cast<void*>(0x08082EF0);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr____vc = reinterpret_cast<void*>(0x0808304C);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__Add = reinterpret_cast<void*>(0x080838EC);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__AddUnique = reinterpret_cast<void*>(0x08083010);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__Allocate = reinterpret_cast<void*>(0x08083870);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__Contains = reinterpret_cast<void*>(0x080838C4);
void * const CExoArrayListTemplatedNWPlayerCharacterList_stPtr__DerefContains = reinterpret_cast<void*>(0x08082FA8);

void * const CExoArrayListTemplatedNWPlayerCharacterListClass_st__CExoArrayListTemplatedNWPlayerCharacterListClass_stCtor__0 = reinterpret_cast<void*>(0x08082C7C);
void * const CExoArrayListTemplatedNWPlayerCharacterListClass_st__CExoArrayListTemplatedNWPlayerCharacterListClass_stCtor__1 = reinterpret_cast<void*>(0x08082C48);
void * const CExoArrayListTemplatedNWPlayerCharacterListClass_st____vc = reinterpret_cast<void*>(0x0808305C);
void * const CExoArrayListTemplatedNWPlayerCharacterListClass_st__Add = reinterpret_cast<void*>(0x08082F5C);
void * const CExoArrayListTemplatedNWPlayerCharacterListClass_st__Allocate = reinterpret_cast<void*>(0x08083620);

void * const CExoArrayListTemplatedSCodeBaseDataPtr__CExoArrayListTemplatedSCodeBaseDataPtrCtor__0 = reinterpret_cast<void*>(0x082DB1BC);
void * const CExoArrayListTemplatedSCodeBaseDataPtr__CExoArrayListTemplatedSCodeBaseDataPtrCtor__1 = reinterpret_cast<void*>(0x082DB188);
void * const CExoArrayListTemplatedSCodeBaseDataPtr____vc = reinterpret_cast<void*>(0x082DB108);
void * const CExoArrayListTemplatedSCodeBaseDataPtr__Add = reinterpret_cast<void*>(0x082DB118);
void * const CExoArrayListTemplatedSCodeBaseDataPtr__Allocate = reinterpret_cast<void*>(0x082DB1F4);
void * const CExoArrayListTemplatedSCodeBaseDataPtr__DelIndex = reinterpret_cast<void*>(0x082DB158);

void * const CExoArrayListTemplatedSGameSpyRoomEntry__CExoArrayListTemplatedSGameSpyRoomEntryCtor__0 = reinterpret_cast<void*>(0x08272D8C);
void * const CExoArrayListTemplatedSGameSpyRoomEntry__CExoArrayListTemplatedSGameSpyRoomEntryCtor__1 = reinterpret_cast<void*>(0x08272D58);
void * const CExoArrayListTemplatedSGameSpyRoomEntry____vc = reinterpret_cast<void*>(0x08272E10);
void * const CExoArrayListTemplatedSGameSpyRoomEntry__Add = reinterpret_cast<void*>(0x08272DC4);
void * const CExoArrayListTemplatedSGameSpyRoomEntry__Allocate = reinterpret_cast<void*>(0x08272E20);

void * const CExoArrayListTemplatedSMstBuddyEntryPtr__CExoArrayListTemplatedSMstBuddyEntryPtrCtor__0 = reinterpret_cast<void*>(0x08298A78);
void * const CExoArrayListTemplatedSMstBuddyEntryPtr__CExoArrayListTemplatedSMstBuddyEntryPtrCtor__1 = reinterpret_cast<void*>(0x08298A44);
void * const CExoArrayListTemplatedSMstBuddyEntryPtr____vc = reinterpret_cast<void*>(0x08298C6C);
void * const CExoArrayListTemplatedSMstBuddyEntryPtr__Add = reinterpret_cast<void*>(0x08298C2C);
void * const CExoArrayListTemplatedSMstBuddyEntryPtr__Allocate = reinterpret_cast<void*>(0x08298E30);
void * const CExoArrayListTemplatedSMstBuddyEntryPtr__DelIndex = reinterpret_cast<void*>(0x08298C7C);

void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__CExoArrayListTemplatedSMstDigiDistInfoPtrCtor__0 = reinterpret_cast<void*>(0x08298AE4);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__CExoArrayListTemplatedSMstDigiDistInfoPtrCtor__1 = reinterpret_cast<void*>(0x08298AB0);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr____vc = reinterpret_cast<void*>(0x08298B1C);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__Add = reinterpret_cast<void*>(0x08298B5C);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__Allocate = reinterpret_cast<void*>(0x08298E84);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__DelIndex = reinterpret_cast<void*>(0x08298B2C);
void * const CExoArrayListTemplatedSMstDigiDistInfoPtr__Remove = reinterpret_cast<void*>(0x08298CDC);

void * const CExoArrayListTemplatedunsignedchar__CExoArrayListTemplatedunsignedcharCtor__0 = reinterpret_cast<void*>(0x080831A8);
void * const CExoArrayListTemplatedunsignedchar__CExoArrayListTemplatedunsignedcharCtor__1 = reinterpret_cast<void*>(0x08083174);
void * const CExoArrayListTemplatedunsignedchar____vc = reinterpret_cast<void*>(0x08083224);
void * const CExoArrayListTemplatedunsignedchar__Add = reinterpret_cast<void*>(0x080831E0);
void * const CExoArrayListTemplatedunsignedchar__Allocate = reinterpret_cast<void*>(0x080839B4);
void * const CExoArrayListTemplatedunsignedchar__DelIndex = reinterpret_cast<void*>(0x08165C00);
void * const CExoArrayListTemplatedunsignedchar__SetSize = reinterpret_cast<void*>(0x08165BB8);

void * const CExoArrayListTemplatedunsignedlong__CExoArrayListTemplatedunsignedlongCtor__0 = reinterpret_cast<void*>(0x0805F2E4);
void * const CExoArrayListTemplatedunsignedlong__CExoArrayListTemplatedunsignedlongCtor__1 = reinterpret_cast<void*>(0x0805F2B0);
void * const CExoArrayListTemplatedunsignedlong__CExoArrayListTemplatedunsignedlongCtor__2 = reinterpret_cast<void*>(0x081E9E6C);
void * const CExoArrayListTemplatedunsignedlong____as = reinterpret_cast<void*>(0x081139E8);
void * const CExoArrayListTemplatedunsignedlong____vc__0 = reinterpret_cast<void*>(0x0805EFF0);
void * const CExoArrayListTemplatedunsignedlong____vc__1 = reinterpret_cast<void*>(0x08113C90);
void * const CExoArrayListTemplatedunsignedlong__Add = reinterpret_cast<void*>(0x0805EEE0);
void * const CExoArrayListTemplatedunsignedlong__AddUnique = reinterpret_cast<void*>(0x08098688);
void * const CExoArrayListTemplatedunsignedlong__Allocate = reinterpret_cast<void*>(0x0805F580);
void * const CExoArrayListTemplatedunsignedlong__Contains = reinterpret_cast<void*>(0x0805F34C);
void * const CExoArrayListTemplatedunsignedlong__DelIndex = reinterpret_cast<void*>(0x0805F550);
void * const CExoArrayListTemplatedunsignedlong__IndexOf = reinterpret_cast<void*>(0x080986C4);
void * const CExoArrayListTemplatedunsignedlong__Insert = reinterpret_cast<void*>(0x080D5BC4);
void * const CExoArrayListTemplatedunsignedlong__Remove = reinterpret_cast<void*>(0x0805EE88);
void * const CExoArrayListTemplatedunsignedlong__SetSize = reinterpret_cast<void*>(0x08061C68);

void * const CExoArrayListTemplatedunsignedlonglong__CExoArrayListTemplatedunsignedlonglongCtor__0 = reinterpret_cast<void*>(0x080833A0);
void * const CExoArrayListTemplatedunsignedlonglong__CExoArrayListTemplatedunsignedlonglongCtor__1 = reinterpret_cast<void*>(0x0808336C);
void * const CExoArrayListTemplatedunsignedlonglong____vc = reinterpret_cast<void*>(0x080833D8);
void * const CExoArrayListTemplatedunsignedlonglong__Add = reinterpret_cast<void*>(0x08083B0C);
void * const CExoArrayListTemplatedunsignedlonglong__AddUnique = reinterpret_cast<void*>(0x080833E8);
void * const CExoArrayListTemplatedunsignedlonglong__Allocate = reinterpret_cast<void*>(0x08083A58);
void * const CExoArrayListTemplatedunsignedlonglong__Contains = reinterpret_cast<void*>(0x08083AB8);

void * const CExoArrayListTemplatedunsignedshort__CExoArrayListTemplatedunsignedshortCtor__0 = reinterpret_cast<void*>(0x0805F278);
void * const CExoArrayListTemplatedunsignedshort__CExoArrayListTemplatedunsignedshortCtor__1 = reinterpret_cast<void*>(0x0805F244);
void * const CExoArrayListTemplatedunsignedshort____vc = reinterpret_cast<void*>(0x0805F000);
void * const CExoArrayListTemplatedunsignedshort__Add = reinterpret_cast<void*>(0x0805F038);
void * const CExoArrayListTemplatedunsignedshort__AddUnique = reinterpret_cast<void*>(0x08165AC8);
void * const CExoArrayListTemplatedunsignedshort__Allocate = reinterpret_cast<void*>(0x0805F5D4);
void * const CExoArrayListTemplatedunsignedshort__Contains = reinterpret_cast<void*>(0x0805F010);
void * const CExoArrayListTemplatedunsignedshort__DelIndex = reinterpret_cast<void*>(0x0805F31C);
void * const CExoArrayListTemplatedunsignedshort__Insert = reinterpret_cast<void*>(0x080E5804);
void * const CExoArrayListTemplatedunsignedshort__Remove = reinterpret_cast<void*>(0x0805F07C);
void * const CExoArrayListTemplatedunsignedshort__SetSize = reinterpret_cast<void*>(0x080BFAEC);

void * const CExoBase__CExoBaseCtor = reinterpret_cast<void*>(0x082C8AA8);
void * const CExoBase__CExoBaseDtor = reinterpret_cast<void*>(0x082C8C14);
void * const CExoBase__CheckForCD = reinterpret_cast<void*>(0x082C8E9C);
void * const CExoBase__GetAugmentedDirectoryList = reinterpret_cast<void*>(0x082C8D5C);
void * const CExoBase__GetDirectoryList = reinterpret_cast<void*>(0x082C8CE0);
void * const CExoBase__GetResourceExtension = reinterpret_cast<void*>(0x082C8DD4);
void * const CExoBase__GetResTypeFromExtension = reinterpret_cast<void*>(0x082C8DF0);
void * const CExoBase__LoadAliases = reinterpret_cast<void*>(0x082C8E08);
void * const CExoBase__ShutDown = reinterpret_cast<void*>(0x082C8E6C);
void * const CExoBase__SpawnExternalApplication = reinterpret_cast<void*>(0x082C8E84);

void * const CExoBaseInternal__CExoBaseInternalCtor = reinterpret_cast<void*>(0x082CE7D0);
void * const CExoBaseInternal__CExoBaseInternalDtor = reinterpret_cast<void*>(0x082CE7DC);
void * const CExoBaseInternal__AddAlias = reinterpret_cast<void*>(0x082CD1B0);
void * const CExoBaseInternal__CheckForCD = reinterpret_cast<void*>(0x082CE988);
void * const CExoBaseInternal__CreateResourceExtensionTable = reinterpret_cast<void*>(0x082CC7BC);
void * const CExoBaseInternal__GetAugmentedDirectoryList = reinterpret_cast<void*>(0x082CD8E8);
void * const CExoBaseInternal__GetDirectoryList = reinterpret_cast<void*>(0x082CD33C);
void * const CExoBaseInternal__GetResourceExtension = reinterpret_cast<void*>(0x082CE854);
void * const CExoBaseInternal__GetResTypeFromExtension = reinterpret_cast<void*>(0x082CE890);
void * const CExoBaseInternal__LoadAliases = reinterpret_cast<void*>(0x082CDE74);
void * const CExoBaseInternal__ShutDown = reinterpret_cast<void*>(0x082CE8E0);
void * const CExoBaseInternal__SpawnExternalApplication = reinterpret_cast<void*>(0x082CE8E8);

void * const CExoCriticalSection__CExoCriticalSectionCtor = reinterpret_cast<void*>(0x082C8EB4);
void * const CExoCriticalSection__CExoCriticalSectionDtor = reinterpret_cast<void*>(0x082C8EFC);
void * const CExoCriticalSection__EnterCriticalSection = reinterpret_cast<void*>(0x082C8F38);
void * const CExoCriticalSection__LeaveCriticalSection = reinterpret_cast<void*>(0x082C8F4C);

void * const CExoCriticalSectionInternal__CExoCriticalSectionInternalCtor = reinterpret_cast<void*>(0x082CEC40);
void * const CExoCriticalSectionInternal__CExoCriticalSectionInternalDtor = reinterpret_cast<void*>(0x082CEC70);
void * const CExoCriticalSectionInternal__EnterCriticalSection = reinterpret_cast<void*>(0x082CECA4);
void * const CExoCriticalSectionInternal__LeaveCriticalSection = reinterpret_cast<void*>(0x082CECB8);

void * const CExoDebug__CExoDebugCtor = reinterpret_cast<void*>(0x082C8F78);
void * const CExoDebug__CExoDebugDtor = reinterpret_cast<void*>(0x082C8FF0);
void * const CExoDebug__Assert = reinterpret_cast<void*>(0x082C904C);
void * const CExoDebug__CloseLogFiles = reinterpret_cast<void*>(0x082C9084);
void * const CExoDebug__FlushErrorFile = reinterpret_cast<void*>(0x082C90A4);
void * const CExoDebug__FlushLogFile = reinterpret_cast<void*>(0x082C90AC);
void * const CExoDebug__GetCurrentAllocatedMemory = reinterpret_cast<void*>(0x082C90CC);
void * const CExoDebug__GetCurrentMemoryAllocations = reinterpret_cast<void*>(0x082C90E4);
void * const CExoDebug__GetCurrentTimestamp = reinterpret_cast<void*>(0x082C9198);
void * const CExoDebug__GetMaxAllocatedMemory = reinterpret_cast<void*>(0x082C90D4);
void * const CExoDebug__GetTotalMemoryAllocations = reinterpret_cast<void*>(0x082C90DC);
void * const CExoDebug__NoLog = reinterpret_cast<void*>(0x08094078);
void * const CExoDebug__OpenLogFiles = reinterpret_cast<void*>(0x082C90EC);
void * const CExoDebug__SetRotateLogFile = reinterpret_cast<void*>(0x082C91BC);
void * const CExoDebug__Warning = reinterpret_cast<void*>(0x082C9164);
void * const CExoDebug__WriteToErrorFile = reinterpret_cast<void*>(0x082C916C);
void * const CExoDebug__WriteToLogFile = reinterpret_cast<void*>(0x082C9174);

void * const CExoDebugInternal__CExoDebugInternalCtor = reinterpret_cast<void*>(0x082CFB1C);
void * const CExoDebugInternal__CExoDebugInternalDtor = reinterpret_cast<void*>(0x082CFB78);
void * const CExoDebugInternal__Assert = reinterpret_cast<void*>(0x082CFBB8);
void * const CExoDebugInternal__CloseLogFiles = reinterpret_cast<void*>(0x082CFC44);
void * const CExoDebugInternal__CreateDirectory = reinterpret_cast<void*>(0x082CF9CC);
void * const CExoDebugInternal__FlushErrorFile = reinterpret_cast<void*>(0x082CFC9C);
void * const CExoDebugInternal__FlushLogFile = reinterpret_cast<void*>(0x082CFCBC);
void * const CExoDebugInternal__GetCurrentTimestamp = reinterpret_cast<void*>(0x082CFD78);
void * const CExoDebugInternal__OpenLogFiles = reinterpret_cast<void*>(0x082CECCC);
void * const CExoDebugInternal__Warning = reinterpret_cast<void*>(0x082CFCDC);
void * const CExoDebugInternal__WriteToErrorFile = reinterpret_cast<void*>(0x082CF4CC);
void * const CExoDebugInternal__WriteToLogFile = reinterpret_cast<void*>(0x082CF764);

void * const CExoEncapsulatedFile__CExoEncapsulatedFileCtor = reinterpret_cast<void*>(0x082C2F80);
void * const CExoEncapsulatedFile__CExoEncapsulatedFileDtor = reinterpret_cast<void*>(0x082C4A38);
void * const CExoEncapsulatedFile__AddAsyncRefCount = reinterpret_cast<void*>(0x082C4AC0);
void * const CExoEncapsulatedFile__AddRefCount = reinterpret_cast<void*>(0x082C4A90);
void * const CExoEncapsulatedFile__CloseAsyncFile = reinterpret_cast<void*>(0x082C4B30);
void * const CExoEncapsulatedFile__CloseFile = reinterpret_cast<void*>(0x082C4AF0);
void * const CExoEncapsulatedFile__DeleteAsyncRefCount = reinterpret_cast<void*>(0x082C4C04);
void * const CExoEncapsulatedFile__DeleteRefCount = reinterpret_cast<void*>(0x082C4BD4);
void * const CExoEncapsulatedFile__GetDescription = reinterpret_cast<void*>(0x082C5124);
void * const CExoEncapsulatedFile__GetResourceSize = reinterpret_cast<void*>(0x082C4C34);
void * const CExoEncapsulatedFile__Initialize = reinterpret_cast<void*>(0x082C4C4C);
void * const CExoEncapsulatedFile__LoadHeader = reinterpret_cast<void*>(0x082C3688);
void * const CExoEncapsulatedFile__OpenAsyncFile = reinterpret_cast<void*>(0x082C334C);
void * const CExoEncapsulatedFile__OpenFile__0 = reinterpret_cast<void*>(0x082C3010);
void * const CExoEncapsulatedFile__OpenFile__1 = reinterpret_cast<void*>(0x082C4CA4);
void * const CExoEncapsulatedFile__ReadResource = reinterpret_cast<void*>(0x082C4CBC);
void * const CExoEncapsulatedFile__ReadResourceAsync = reinterpret_cast<void*>(0x082C4D3C);
void * const CExoEncapsulatedFile__UnloadHeader = reinterpret_cast<void*>(0x082C4B70);

void * const CExoEncrypt__EncryptString = reinterpret_cast<void*>(0x082C91D4);
void * const CExoEncrypt__GenerateChallenge = reinterpret_cast<void*>(0x082C92B0);

void * const CExoFile__CExoFileCtor = reinterpret_cast<void*>(0x082C94C0);
void * const CExoFile__CExoFileDtor = reinterpret_cast<void*>(0x082C9518);
void * const CExoFile__Eof = reinterpret_cast<void*>(0x082C9558);
void * const CExoFile__FileOpened = reinterpret_cast<void*>(0x082C957C);
void * const CExoFile__Flush = reinterpret_cast<void*>(0x082C9590);
void * const CExoFile__GetOffset = reinterpret_cast<void*>(0x082C95BC);
void * const CExoFile__GetSize = reinterpret_cast<void*>(0x082C95D0);
void * const CExoFile__Read__0 = reinterpret_cast<void*>(0x082C95E4);
void * const CExoFile__Read__1 = reinterpret_cast<void*>(0x082C9614);
void * const CExoFile__ReadAsync = reinterpret_cast<void*>(0x082C9628);
void * const CExoFile__ReadAsyncBytesRead = reinterpret_cast<void*>(0x082C9654);
void * const CExoFile__ReadAsyncComplete = reinterpret_cast<void*>(0x082C9640);
void * const CExoFile__ReadStringLineFromBuffer = reinterpret_cast<void*>(0x082C9780);
void * const CExoFile__Seek = reinterpret_cast<void*>(0x082C96EC);
void * const CExoFile__SeekBeginning = reinterpret_cast<void*>(0x082C9720);
void * const CExoFile__SeekEnd = reinterpret_cast<void*>(0x082C9750);
void * const CExoFile__Write__0 = reinterpret_cast<void*>(0x082C9668);
void * const CExoFile__Write__1 = reinterpret_cast<void*>(0x082C9698);
void * const CExoFile__Write__2 = reinterpret_cast<void*>(0x082C96AC);

void * const CExoFileInternal__CExoFileInternalCtor = reinterpret_cast<void*>(0x082D0868);
void * const CExoFileInternal__CExoFileInternalDtor = reinterpret_cast<void*>(0x082D092C);
void * const CExoFileInternal__GetOffset = reinterpret_cast<void*>(0x082D096C);
void * const CExoFileInternal__GetSize = reinterpret_cast<void*>(0x082D0988);
void * const CExoFileInternal__Read = reinterpret_cast<void*>(0x082D09F0);
void * const CExoFileInternal__ReadAsync = reinterpret_cast<void*>(0x082D0A54);
void * const CExoFileInternal__ReadAsyncBytesRead = reinterpret_cast<void*>(0x082D0ADC);
void * const CExoFileInternal__ReadAsyncComplete = reinterpret_cast<void*>(0x082D0AD0);
void * const CExoFileInternal__Write = reinterpret_cast<void*>(0x082D0AE8);

void * const CExoFileThread__CExoFileThreadCtor = reinterpret_cast<void*>(0x082CFDBC);
void * const CExoFileThread__AsyncRead = reinterpret_cast<void*>(0x082D05E4);
void * const CExoFileThread__Read = reinterpret_cast<void*>(0x082D0654);

void * const CExoIni__CExoIniCtor = reinterpret_cast<void*>(0x082C97F8);
void * const CExoIni__CExoIniDtor = reinterpret_cast<void*>(0x082C9840);
void * const CExoIni__ReadIniEntry = reinterpret_cast<void*>(0x082C987C);
void * const CExoIni__WriteIniEntry = reinterpret_cast<void*>(0x082C9894);

void * const CExoIniInternal__CExoIniInternalCtor = reinterpret_cast<void*>(0x082D0B50);
void * const CExoIniInternal__CExoIniInternalDtor = reinterpret_cast<void*>(0x082D0B58);
void * const CExoIniInternal__ReadIniEntry = reinterpret_cast<void*>(0x082D0B74);
void * const CExoIniInternal__WriteIniEntry = reinterpret_cast<void*>(0x082D0BE4);

void * const CExoKeyTable__CExoKeyTableCtor = reinterpret_cast<void*>(0x082BF930);
void * const CExoKeyTable__CExoKeyTableDtor = reinterpret_cast<void*>(0x082BFA18);
void * const CExoKeyTable__AddDirectoryContents = reinterpret_cast<void*>(0x082BFB1C);
void * const CExoKeyTable__AddEncapsulatedContents = reinterpret_cast<void*>(0x082BFD04);
void * const CExoKeyTable__AddKey = reinterpret_cast<void*>(0x082C0AAC);
void * const CExoKeyTable__AddKeyTableContents = reinterpret_cast<void*>(0x082C0D5C);
void * const CExoKeyTable__AddResourceImageContents = reinterpret_cast<void*>(0x082C084C);
void * const CExoKeyTable__AllocateTable = reinterpret_cast<void*>(0x082C2038);
void * const CExoKeyTable__BuildNewTable = reinterpret_cast<void*>(0x082C42F8);
void * const CExoKeyTable__DeleteTableList = reinterpret_cast<void*>(0x082C4400);
void * const CExoKeyTable__DestroyTable = reinterpret_cast<void*>(0x082C21DC);
void * const CExoKeyTable__FindKey__0 = reinterpret_cast<void*>(0x082C23F4);
void * const CExoKeyTable__FindKey__1 = reinterpret_cast<void*>(0x082C4484);
void * const CExoKeyTable__GetEntryCount = reinterpret_cast<void*>(0x082C4288);
void * const CExoKeyTable__GetKeysOfType = reinterpret_cast<void*>(0x082C2500);
void * const CExoKeyTable__GetRes = reinterpret_cast<void*>(0x082C44B4);
void * const CExoKeyTable__GetResID = reinterpret_cast<void*>(0x082C44DC);
void * const CExoKeyTable__GetTableEntry = reinterpret_cast<void*>(0x082C4508);
void * const CExoKeyTable__GetTableIndex = reinterpret_cast<void*>(0x082C455C);
void * const CExoKeyTable__Hash = reinterpret_cast<void*>(0x082C45CC);
void * const CExoKeyTable__LocateBifFile = reinterpret_cast<void*>(0x082C20FC);
void * const CExoKeyTable__RebuildTable = reinterpret_cast<void*>(0x082C2640);

void * const CExoLinkedListInternal__CExoLinkedListInternalDtor = reinterpret_cast<void*>(0x082C98AC);
void * const CExoLinkedListInternal__AddAfter = reinterpret_cast<void*>(0x082C99A0);
void * const CExoLinkedListInternal__AddBefore = reinterpret_cast<void*>(0x082C9A30);
void * const CExoLinkedListInternal__AddHead = reinterpret_cast<void*>(0x082C98F8);
void * const CExoLinkedListInternal__AddTail = reinterpret_cast<void*>(0x082C994C);
void * const CExoLinkedListInternal__GetAtPos = reinterpret_cast<void*>(0x082C9AB4);
void * const CExoLinkedListInternal__GetNext = reinterpret_cast<void*>(0x082C9AEC);
void * const CExoLinkedListInternal__GetPrev = reinterpret_cast<void*>(0x082C9B3C);
void * const CExoLinkedListInternal__Remove = reinterpret_cast<void*>(0x082C9B88);
void * const CExoLinkedListInternal__RemoveHead = reinterpret_cast<void*>(0x082C9BFC);
void * const CExoLinkedListInternal__RemoveTail = reinterpret_cast<void*>(0x082C9C68);

void * const CExoLinkedListTemplatedC2DA__CExoLinkedListTemplatedC2DACtor = reinterpret_cast<void*>(0x080B9AE8);
void * const CExoLinkedListTemplatedC2DA__AddHead = reinterpret_cast<void*>(0x080B9B4C);
void * const CExoLinkedListTemplatedC2DA__Count = reinterpret_cast<void*>(0x080B9B9C);
void * const CExoLinkedListTemplatedC2DA__GetAtPos = reinterpret_cast<void*>(0x080B9B24);
void * const CExoLinkedListTemplatedC2DA__GetHeadPos = reinterpret_cast<void*>(0x080B9B18);
void * const CExoLinkedListTemplatedC2DA__GetNext = reinterpret_cast<void*>(0x080B9B60);
void * const CExoLinkedListTemplatedC2DA__IsEmpty = reinterpret_cast<void*>(0x080B9B74);
void * const CExoLinkedListTemplatedC2DA__Remove = reinterpret_cast<void*>(0x080B9B38);
void * const CExoLinkedListTemplatedC2DA__RemoveHead = reinterpret_cast<void*>(0x080B9B88);
void * const CExoLinkedListTemplatedC2DA__RemoveTail = reinterpret_cast<void*>(0x080B9BAC);

void * const CExoLinkedListTemplatedCERFKey__CExoLinkedListTemplatedCERFKeyCtor__0 = reinterpret_cast<void*>(0x082B8120);
void * const CExoLinkedListTemplatedCERFKey__CExoLinkedListTemplatedCERFKeyCtor__1 = reinterpret_cast<void*>(0x082B80F0);
void * const CExoLinkedListTemplatedCERFKey__AddTail = reinterpret_cast<void*>(0x082B8204);
void * const CExoLinkedListTemplatedCERFKey__Count = reinterpret_cast<void*>(0x082B8324);
void * const CExoLinkedListTemplatedCERFKey__GetAtPos = reinterpret_cast<void*>(0x082B8238);
void * const CExoLinkedListTemplatedCERFKey__GetHeadPos = reinterpret_cast<void*>(0x082B822C);
void * const CExoLinkedListTemplatedCERFKey__GetNext = reinterpret_cast<void*>(0x082B82F4);
void * const CExoLinkedListTemplatedCERFKey__IsEmpty = reinterpret_cast<void*>(0x082B81B4);
void * const CExoLinkedListTemplatedCERFKey__Remove = reinterpret_cast<void*>(0x082B8260);
void * const CExoLinkedListTemplatedCERFKey__RemoveHead = reinterpret_cast<void*>(0x082B81C8);

void * const CExoLinkedListTemplatedCERFRes__CExoLinkedListTemplatedCERFResCtor__0 = reinterpret_cast<void*>(0x082B8334);
void * const CExoLinkedListTemplatedCERFRes__CExoLinkedListTemplatedCERFResCtor__1 = reinterpret_cast<void*>(0x082B815C);
void * const CExoLinkedListTemplatedCERFRes__AddTail = reinterpret_cast<void*>(0x082B8218);
void * const CExoLinkedListTemplatedCERFRes__Count = reinterpret_cast<void*>(0x082B8308);
void * const CExoLinkedListTemplatedCERFRes__GetAtPos = reinterpret_cast<void*>(0x082B824C);
void * const CExoLinkedListTemplatedCERFRes__GetHeadPos = reinterpret_cast<void*>(0x082B8318);
void * const CExoLinkedListTemplatedCERFRes__GetNext = reinterpret_cast<void*>(0x082B8288);
void * const CExoLinkedListTemplatedCERFRes__IsEmpty = reinterpret_cast<void*>(0x082B81DC);
void * const CExoLinkedListTemplatedCERFRes__Remove = reinterpret_cast<void*>(0x082B8274);
void * const CExoLinkedListTemplatedCERFRes__RemoveHead = reinterpret_cast<void*>(0x082B81F0);

void * const CExoLinkedListTemplatedCERFString__CExoLinkedListTemplatedCERFStringCtor__0 = reinterpret_cast<void*>(0x082B80B4);
void * const CExoLinkedListTemplatedCERFString__CExoLinkedListTemplatedCERFStringCtor__1 = reinterpret_cast<void*>(0x082B8084);
void * const CExoLinkedListTemplatedCERFString__AddTail = reinterpret_cast<void*>(0x082B829C);
void * const CExoLinkedListTemplatedCERFString__Count = reinterpret_cast<void*>(0x082B82B0);
void * const CExoLinkedListTemplatedCERFString__GetAtPos = reinterpret_cast<void*>(0x082B82CC);
void * const CExoLinkedListTemplatedCERFString__GetHeadPos = reinterpret_cast<void*>(0x082B82C0);
void * const CExoLinkedListTemplatedCERFString__GetNext = reinterpret_cast<void*>(0x082B82E0);
void * const CExoLinkedListTemplatedCERFString__IsEmpty = reinterpret_cast<void*>(0x082B818C);
void * const CExoLinkedListTemplatedCERFString__RemoveHead = reinterpret_cast<void*>(0x082B81A0);

void * const CExoLinkedListTemplatedCExoKeyTable__CExoLinkedListTemplatedCExoKeyTableCtor__0 = reinterpret_cast<void*>(0x082B4048);
void * const CExoLinkedListTemplatedCExoKeyTable__CExoLinkedListTemplatedCExoKeyTableCtor__1 = reinterpret_cast<void*>(0x082B4018);
void * const CExoLinkedListTemplatedCExoKeyTable__AddHead = reinterpret_cast<void*>(0x082B4190);
void * const CExoLinkedListTemplatedCExoKeyTable__GetAtPos = reinterpret_cast<void*>(0x082B4130);
void * const CExoLinkedListTemplatedCExoKeyTable__GetHeadPos = reinterpret_cast<void*>(0x082B4124);
void * const CExoLinkedListTemplatedCExoKeyTable__GetNext = reinterpret_cast<void*>(0x082B4144);
void * const CExoLinkedListTemplatedCExoKeyTable__GetPrev = reinterpret_cast<void*>(0x082B417C);
void * const CExoLinkedListTemplatedCExoKeyTable__GetTailPos = reinterpret_cast<void*>(0x082B4158);
void * const CExoLinkedListTemplatedCExoKeyTable__Remove = reinterpret_cast<void*>(0x082B4168);

void * const CExoLinkedListTemplatedCExoString__CExoLinkedListTemplatedCExoStringCtor__0 = reinterpret_cast<void*>(0x081F5C4C);
void * const CExoLinkedListTemplatedCExoString__CExoLinkedListTemplatedCExoStringCtor__1 = reinterpret_cast<void*>(0x081F5C1C);
void * const CExoLinkedListTemplatedCExoString__AddTail = reinterpret_cast<void*>(0x081F5CB0);
void * const CExoLinkedListTemplatedCExoString__GetAtPos = reinterpret_cast<void*>(0x082ACF78);
void * const CExoLinkedListTemplatedCExoString__GetHeadPos = reinterpret_cast<void*>(0x082ACF6C);
void * const CExoLinkedListTemplatedCExoString__GetNext = reinterpret_cast<void*>(0x082ACF8C);
void * const CExoLinkedListTemplatedCExoString__IsEmpty = reinterpret_cast<void*>(0x081F5C88);
void * const CExoLinkedListTemplatedCExoString__Remove = reinterpret_cast<void*>(0x082ACFA0);
void * const CExoLinkedListTemplatedCExoString__RemoveHead = reinterpret_cast<void*>(0x081F5C9C);

void * const CExoLinkedListTemplatedCKeyTableInfo__CExoLinkedListTemplatedCKeyTableInfoCtor__0 = reinterpret_cast<void*>(0x082C51B0);
void * const CExoLinkedListTemplatedCKeyTableInfo__CExoLinkedListTemplatedCKeyTableInfoCtor__1 = reinterpret_cast<void*>(0x082C5180);
void * const CExoLinkedListTemplatedCKeyTableInfo__AddTail = reinterpret_cast<void*>(0x082C51EC);
void * const CExoLinkedListTemplatedCKeyTableInfo__GetAtPos = reinterpret_cast<void*>(0x082C520C);
void * const CExoLinkedListTemplatedCKeyTableInfo__GetHeadPos = reinterpret_cast<void*>(0x082C5200);
void * const CExoLinkedListTemplatedCKeyTableInfo__RemoveHead = reinterpret_cast<void*>(0x082C5220);

void * const CExoLinkedListTemplatedCLastUpdateObject__CExoLinkedListTemplatedCLastUpdateObjectCtor__0 = reinterpret_cast<void*>(0x0805F1D0);
void * const CExoLinkedListTemplatedCLastUpdateObject__CExoLinkedListTemplatedCLastUpdateObjectCtor__1 = reinterpret_cast<void*>(0x0805F10C);
void * const CExoLinkedListTemplatedCLastUpdateObject__AddHead = reinterpret_cast<void*>(0x0808306C);
void * const CExoLinkedListTemplatedCLastUpdateObject__GetAtPos = reinterpret_cast<void*>(0x0805F528);
void * const CExoLinkedListTemplatedCLastUpdateObject__GetHeadPos = reinterpret_cast<void*>(0x0805F51C);
void * const CExoLinkedListTemplatedCLastUpdateObject__GetNext = reinterpret_cast<void*>(0x0805F53C);
void * const CExoLinkedListTemplatedCLastUpdateObject__IsEmpty = reinterpret_cast<void*>(0x0805F1A8);
void * const CExoLinkedListTemplatedCLastUpdateObject__Remove = reinterpret_cast<void*>(0x08083080);
void * const CExoLinkedListTemplatedCLastUpdateObject__RemoveHead = reinterpret_cast<void*>(0x0805F1BC);

void * const CExoLinkedListTemplatedCLastUpdatePartyObject__CExoLinkedListTemplatedCLastUpdatePartyObjectCtor__0 = reinterpret_cast<void*>(0x0805F16C);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__CExoLinkedListTemplatedCLastUpdatePartyObjectCtor__1 = reinterpret_cast<void*>(0x0805F13C);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__AddHead = reinterpret_cast<void*>(0x08083330);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__GetAtPos = reinterpret_cast<void*>(0x0808331C);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__GetHeadPos = reinterpret_cast<void*>(0x08083310);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__GetNext = reinterpret_cast<void*>(0x08083344);
void * const CExoLinkedListTemplatedCLastUpdatePartyObject__Remove = reinterpret_cast<void*>(0x08083358);

void * const CExoLinkedListTemplatedCLinuxFileKey__CExoLinkedListTemplatedCLinuxFileKeyCtor__0 = reinterpret_cast<void*>(0x082D31CC);
void * const CExoLinkedListTemplatedCLinuxFileKey__CExoLinkedListTemplatedCLinuxFileKeyCtor__1 = reinterpret_cast<void*>(0x082D319C);
void * const CExoLinkedListTemplatedCLinuxFileKey__AddHead = reinterpret_cast<void*>(0x082D32A0);
void * const CExoLinkedListTemplatedCLinuxFileKey__AddTail = reinterpret_cast<void*>(0x082D321C);
void * const CExoLinkedListTemplatedCLinuxFileKey__GetHead = reinterpret_cast<void*>(0x082D3268);
void * const CExoLinkedListTemplatedCLinuxFileKey__GetHeadPos = reinterpret_cast<void*>(0x082D3280);
void * const CExoLinkedListTemplatedCLinuxFileKey__GetNext = reinterpret_cast<void*>(0x082D328C);
void * const CExoLinkedListTemplatedCLinuxFileKey__IsEmpty = reinterpret_cast<void*>(0x082D32C8);
void * const CExoLinkedListTemplatedCLinuxFileKey__Remove = reinterpret_cast<void*>(0x082D32B4);
void * const CExoLinkedListTemplatedCLinuxFileKey__RemoveHead = reinterpret_cast<void*>(0x082D32DC);

void * const CExoLinkedListTemplatedCLinuxFileSection__CExoLinkedListTemplatedCLinuxFileSectionCtor__0 = reinterpret_cast<void*>(0x082D335C);
void * const CExoLinkedListTemplatedCLinuxFileSection__CExoLinkedListTemplatedCLinuxFileSectionCtor__1 = reinterpret_cast<void*>(0x082D332C);
void * const CExoLinkedListTemplatedCLinuxFileSection__AddTail = reinterpret_cast<void*>(0x082D3208);
void * const CExoLinkedListTemplatedCLinuxFileSection__GetHead = reinterpret_cast<void*>(0x082D3230);
void * const CExoLinkedListTemplatedCLinuxFileSection__GetHeadPos = reinterpret_cast<void*>(0x082D3248);
void * const CExoLinkedListTemplatedCLinuxFileSection__GetNext = reinterpret_cast<void*>(0x082D3254);
void * const CExoLinkedListTemplatedCLinuxFileSection__IsEmpty = reinterpret_cast<void*>(0x082D3304);
void * const CExoLinkedListTemplatedCLinuxFileSection__Remove = reinterpret_cast<void*>(0x082D32F0);
void * const CExoLinkedListTemplatedCLinuxFileSection__RemoveHead = reinterpret_cast<void*>(0x082D3318);

void * const CExoLinkedListTemplatedCNWSClient__CExoLinkedListTemplatedCNWSClientCtor__0 = reinterpret_cast<void*>(0x080B14B8);
void * const CExoLinkedListTemplatedCNWSClient__CExoLinkedListTemplatedCNWSClientCtor__1 = reinterpret_cast<void*>(0x080B1430);
void * const CExoLinkedListTemplatedCNWSClient__AddHead = reinterpret_cast<void*>(0x080B1648);
void * const CExoLinkedListTemplatedCNWSClient__Count = reinterpret_cast<void*>(0x080B1638);
void * const CExoLinkedListTemplatedCNWSClient__GetAtPos = reinterpret_cast<void*>(0x0805F380);
void * const CExoLinkedListTemplatedCNWSClient__GetHead = reinterpret_cast<void*>(0x08082ED8);
void * const CExoLinkedListTemplatedCNWSClient__GetHeadPos = reinterpret_cast<void*>(0x0805F374);
void * const CExoLinkedListTemplatedCNWSClient__GetNext = reinterpret_cast<void*>(0x0805F394);
void * const CExoLinkedListTemplatedCNWSClient__IsEmpty = reinterpret_cast<void*>(0x080B1490);
void * const CExoLinkedListTemplatedCNWSClient__Remove = reinterpret_cast<void*>(0x080B165C);
void * const CExoLinkedListTemplatedCNWSClient__RemoveHead = reinterpret_cast<void*>(0x080B14A4);

void * const CExoLinkedListTemplatedCNWSCombatRoundAction__CExoLinkedListTemplatedCNWSCombatRoundActionCtor__0 = reinterpret_cast<void*>(0x080E5740);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__CExoLinkedListTemplatedCNWSCombatRoundActionCtor__1 = reinterpret_cast<void*>(0x080E56E8);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__AddBefore = reinterpret_cast<void*>(0x080E57DC);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__AddTail = reinterpret_cast<void*>(0x080E57F0);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetAtPos = reinterpret_cast<void*>(0x080E57C8);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetHead = reinterpret_cast<void*>(0x080E5788);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetHeadPos = reinterpret_cast<void*>(0x080E577C);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetNext = reinterpret_cast<void*>(0x080E57A0);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetPrev = reinterpret_cast<void*>(0x0813F144);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__GetTailPos = reinterpret_cast<void*>(0x0813F134);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__IsEmpty = reinterpret_cast<void*>(0x080E5718);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__Remove = reinterpret_cast<void*>(0x080E57B4);
void * const CExoLinkedListTemplatedCNWSCombatRoundAction__RemoveHead = reinterpret_cast<void*>(0x080E572C);

void * const CExoLinkedListTemplatedCNWSDialogPlayer__CExoLinkedListTemplatedCNWSDialogPlayerCtor__0 = reinterpret_cast<void*>(0x081D6328);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__CExoLinkedListTemplatedCNWSDialogPlayerCtor__1 = reinterpret_cast<void*>(0x0823E6A4);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__AddTail = reinterpret_cast<void*>(0x081D6364);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__Count = reinterpret_cast<void*>(0x0823E70C);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__GetHead = reinterpret_cast<void*>(0x0823E6F4);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__GetHeadPos = reinterpret_cast<void*>(0x0823E6E8);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__GetNext = reinterpret_cast<void*>(0x0823E730);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__IsEmpty = reinterpret_cast<void*>(0x081C86C0);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__Remove = reinterpret_cast<void*>(0x0823E71C);
void * const CExoLinkedListTemplatedCNWSDialogPlayer__RemoveHead = reinterpret_cast<void*>(0x0823E6D4);

void * const CExoLinkedListTemplatedCNWSObjectActionNode__CExoLinkedListTemplatedCNWSObjectActionNodeCtor__0 = reinterpret_cast<void*>(0x081D63A8);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__CExoLinkedListTemplatedCNWSObjectActionNodeCtor__1 = reinterpret_cast<void*>(0x081D6378);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__AddBefore = reinterpret_cast<void*>(0x081D65C4);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__AddHead = reinterpret_cast<void*>(0x081C86D4);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__AddTail = reinterpret_cast<void*>(0x081D65B0);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__Count = reinterpret_cast<void*>(0x081C86E8);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__GetAtPos = reinterpret_cast<void*>(0x0813F078);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__GetHead = reinterpret_cast<void*>(0x081139B0);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__GetHeadPos = reinterpret_cast<void*>(0x081139C8);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__GetNext = reinterpret_cast<void*>(0x081139D4);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__IsEmpty = reinterpret_cast<void*>(0x0805F20C);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__Remove = reinterpret_cast<void*>(0x0813F08C);
void * const CExoLinkedListTemplatedCNWSObjectActionNode__RemoveHead = reinterpret_cast<void*>(0x0805F220);

void * const CExoLinkedListTemplatedCNWSPlayer__GetAtPos = reinterpret_cast<void*>(0x08050FE0);
void * const CExoLinkedListTemplatedCNWSPlayer__GetHeadPos = reinterpret_cast<void*>(0x08050FD4);
void * const CExoLinkedListTemplatedCNWSPlayer__GetNext = reinterpret_cast<void*>(0x0805109C);

void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__CExoLinkedListTemplatedCNWSPlayerLUOInventoryItemCtor__0 = reinterpret_cast<void*>(0x081E48E8);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__CExoLinkedListTemplatedCNWSPlayerLUOInventoryItemCtor__1 = reinterpret_cast<void*>(0x081E48B8);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__AddHead = reinterpret_cast<void*>(0x081E4B00);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__Count = reinterpret_cast<void*>(0x081E4AF0);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__GetAtPos = reinterpret_cast<void*>(0x081E4924);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__GetHeadPos = reinterpret_cast<void*>(0x081E4AAC);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__GetNext = reinterpret_cast<void*>(0x081E4AC8);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__GetPrev = reinterpret_cast<void*>(0x081E4ADC);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__GetTailPos = reinterpret_cast<void*>(0x081E4AB8);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__IsEmpty = reinterpret_cast<void*>(0x081E4A84);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__Remove = reinterpret_cast<void*>(0x081E4938);
void * const CExoLinkedListTemplatedCNWSPlayerLUOInventoryItem__RemoveHead = reinterpret_cast<void*>(0x081E4A98);

void * const CExoLinkedListTemplatedCNWSPlayerPtr__GetAtPos = reinterpret_cast<void*>(0x0813F164);
void * const CExoLinkedListTemplatedCNWSPlayerPtr__GetHeadPos = reinterpret_cast<void*>(0x0813F158);
void * const CExoLinkedListTemplatedCNWSPlayerPtr__GetNext = reinterpret_cast<void*>(0x0813F178);

void * const CExoLinkedListTemplatedCNWSPlayerTURD__CExoLinkedListTemplatedCNWSPlayerTURDCtor__0 = reinterpret_cast<void*>(0x081C1A90);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__CExoLinkedListTemplatedCNWSPlayerTURDCtor__1 = reinterpret_cast<void*>(0x081C1A60);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__AddHead = reinterpret_cast<void*>(0x081C1FD8);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__GetAtPos = reinterpret_cast<void*>(0x081C1D14);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__GetHeadPos = reinterpret_cast<void*>(0x081C1D08);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__GetNext = reinterpret_cast<void*>(0x081C1D28);
void * const CExoLinkedListTemplatedCNWSPlayerTURD__Remove = reinterpret_cast<void*>(0x081C1FC4);

void * const CExoLinkedListTemplatedCRes__CExoLinkedListTemplatedCResCtor__0 = reinterpret_cast<void*>(0x082B40B4);
void * const CExoLinkedListTemplatedCRes__CExoLinkedListTemplatedCResCtor__1 = reinterpret_cast<void*>(0x082B4084);
void * const CExoLinkedListTemplatedCRes__AddHead = reinterpret_cast<void*>(0x082B41E4);
void * const CExoLinkedListTemplatedCRes__AddTail = reinterpret_cast<void*>(0x082B420C);
void * const CExoLinkedListTemplatedCRes__GetAtPos = reinterpret_cast<void*>(0x082B40FC);
void * const CExoLinkedListTemplatedCRes__GetHead = reinterpret_cast<void*>(0x082B41A4);
void * const CExoLinkedListTemplatedCRes__GetHeadPos = reinterpret_cast<void*>(0x082B40F0);
void * const CExoLinkedListTemplatedCRes__GetNext = reinterpret_cast<void*>(0x082B41BC);
void * const CExoLinkedListTemplatedCRes__IsEmpty = reinterpret_cast<void*>(0x082B41D0);
void * const CExoLinkedListTemplatedCRes__Remove = reinterpret_cast<void*>(0x082B4110);
void * const CExoLinkedListTemplatedCRes__RemoveHead = reinterpret_cast<void*>(0x082B41F8);

void * const CExoLinkedListTemplatedCResRef__CExoLinkedListTemplatedCResRefCtor__0 = reinterpret_cast<void*>(0x081C19B8);
void * const CExoLinkedListTemplatedCResRef__CExoLinkedListTemplatedCResRefCtor__1 = reinterpret_cast<void*>(0x081C1988);
void * const CExoLinkedListTemplatedCResRef__AddTail = reinterpret_cast<void*>(0x081C1C80);
void * const CExoLinkedListTemplatedCResRef__GetHead = reinterpret_cast<void*>(0x081C1CB4);
void * const CExoLinkedListTemplatedCResRef__GetHeadPos = reinterpret_cast<void*>(0x081C1CA8);
void * const CExoLinkedListTemplatedCResRef__GetNext = reinterpret_cast<void*>(0x081C1CCC);
void * const CExoLinkedListTemplatedCResRef__IsEmpty = reinterpret_cast<void*>(0x081C1CE0);
void * const CExoLinkedListTemplatedCResRef__RemoveHead = reinterpret_cast<void*>(0x081C1CF4);

void * const CExoLinkedListTemplatedCServerAIEventNode__CExoLinkedListTemplatedCServerAIEventNodeCtor__0 = reinterpret_cast<void*>(0x08098720);
void * const CExoLinkedListTemplatedCServerAIEventNode__CExoLinkedListTemplatedCServerAIEventNodeCtor__1 = reinterpret_cast<void*>(0x080986F0);
void * const CExoLinkedListTemplatedCServerAIEventNode__AddAfter = reinterpret_cast<void*>(0x080987F0);
void * const CExoLinkedListTemplatedCServerAIEventNode__AddBefore = reinterpret_cast<void*>(0x080987A4);
void * const CExoLinkedListTemplatedCServerAIEventNode__AddHead = reinterpret_cast<void*>(0x08098818);
void * const CExoLinkedListTemplatedCServerAIEventNode__AddTail = reinterpret_cast<void*>(0x080987CC);
void * const CExoLinkedListTemplatedCServerAIEventNode__Count = reinterpret_cast<void*>(0x08098844);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetAtPos = reinterpret_cast<void*>(0x08098790);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetHead = reinterpret_cast<void*>(0x0809882C);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetHeadPos = reinterpret_cast<void*>(0x08098784);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetNext = reinterpret_cast<void*>(0x080987B8);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetPrev = reinterpret_cast<void*>(0x08098804);
void * const CExoLinkedListTemplatedCServerAIEventNode__GetTailPos = reinterpret_cast<void*>(0x080987E0);
void * const CExoLinkedListTemplatedCServerAIEventNode__IsEmpty = reinterpret_cast<void*>(0x0809875C);
void * const CExoLinkedListTemplatedCServerAIEventNode__RemoveHead = reinterpret_cast<void*>(0x08098770);

void * const CExoLinkedListTemplatedExoLocString_st__CExoLinkedListTemplatedExoLocString_stCtor__0 = reinterpret_cast<void*>(0x082D129C);
void * const CExoLinkedListTemplatedExoLocString_st__CExoLinkedListTemplatedExoLocString_stCtor__1 = reinterpret_cast<void*>(0x082D126C);
void * const CExoLinkedListTemplatedExoLocString_st__AddTail = reinterpret_cast<void*>(0x082D1258);
void * const CExoLinkedListTemplatedExoLocString_st__GetHead = reinterpret_cast<void*>(0x082D122C);
void * const CExoLinkedListTemplatedExoLocString_st__GetHeadPos = reinterpret_cast<void*>(0x082D1220);
void * const CExoLinkedListTemplatedExoLocString_st__GetNext = reinterpret_cast<void*>(0x082D1244);
void * const CExoLinkedListTemplatedExoLocString_st__IsEmpty = reinterpret_cast<void*>(0x082D12D8);
void * const CExoLinkedListTemplatedExoLocString_st__Remove = reinterpret_cast<void*>(0x082D1300);
void * const CExoLinkedListTemplatedExoLocString_st__RemoveHead = reinterpret_cast<void*>(0x082D12EC);

void * const CExoLinkedListTemplatedNWAreaExpansion_st__CExoLinkedListTemplatedNWAreaExpansion_stCtor__0 = reinterpret_cast<void*>(0x080D5B88);
void * const CExoLinkedListTemplatedNWAreaExpansion_st__CExoLinkedListTemplatedNWAreaExpansion_stCtor__1 = reinterpret_cast<void*>(0x080D5B58);
void * const CExoLinkedListTemplatedNWAreaExpansion_st__AddTail = reinterpret_cast<void*>(0x080D5C2C);
void * const CExoLinkedListTemplatedNWAreaExpansion_st__IsEmpty = reinterpret_cast<void*>(0x080D5C40);
void * const CExoLinkedListTemplatedNWAreaExpansion_st__RemoveHead = reinterpret_cast<void*>(0x080D5C54);

void * const CExoLinkedListTemplatedNWModuleCutScene_st__CExoLinkedListTemplatedNWModuleCutScene_stCtor__0 = reinterpret_cast<void*>(0x081C194C);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__CExoLinkedListTemplatedNWModuleCutScene_stCtor__1 = reinterpret_cast<void*>(0x081C191C);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__AddTail = reinterpret_cast<void*>(0x081C1C6C);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__GetAtPos = reinterpret_cast<void*>(0x081C1D7C);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__GetHeadPos = reinterpret_cast<void*>(0x081C1D70);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__GetNext = reinterpret_cast<void*>(0x081C1D90);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__IsEmpty = reinterpret_cast<void*>(0x081C1C08);
void * const CExoLinkedListTemplatedNWModuleCutScene_st__RemoveHead = reinterpret_cast<void*>(0x081C1C1C);

void * const CExoLinkedListTemplatedNWModuleExpansion_st__CExoLinkedListTemplatedNWModuleExpansion_stCtor__0 = reinterpret_cast<void*>(0x081C18E0);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__CExoLinkedListTemplatedNWModuleExpansion_stCtor__1 = reinterpret_cast<void*>(0x081C18B0);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__AddTail = reinterpret_cast<void*>(0x081C1C58);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__GetAtPos = reinterpret_cast<void*>(0x081C1D48);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__GetHeadPos = reinterpret_cast<void*>(0x081C1D3C);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__GetNext = reinterpret_cast<void*>(0x081C1D5C);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__IsEmpty = reinterpret_cast<void*>(0x081C1C30);
void * const CExoLinkedListTemplatedNWModuleExpansion_st__RemoveHead = reinterpret_cast<void*>(0x081C1C44);

void * const CExoLinkedListTemplatedNWPlayerListItem_st__CExoLinkedListTemplatedNWPlayerListItem_stCtor__0 = reinterpret_cast<void*>(0x081C1A24);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__CExoLinkedListTemplatedNWPlayerListItem_stCtor__1 = reinterpret_cast<void*>(0x081C19F4);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__AddTail = reinterpret_cast<void*>(0x081C1C94);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__Count = reinterpret_cast<void*>(0x081C1DA4);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__GetAtPos = reinterpret_cast<void*>(0x081C1DC0);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__GetHeadPos = reinterpret_cast<void*>(0x081C1DB4);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__GetNext = reinterpret_cast<void*>(0x081C1DD4);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__IsEmpty = reinterpret_cast<void*>(0x081C1BE0);
void * const CExoLinkedListTemplatedNWPlayerListItem_st__RemoveHead = reinterpret_cast<void*>(0x081C1BF4);

void * const CExoLinkedListTemplatedunsignedlong__CExoLinkedListTemplatedunsignedlongCtor__0 = reinterpret_cast<void*>(0x080B14F4);
void * const CExoLinkedListTemplatedunsignedlong__CExoLinkedListTemplatedunsignedlongCtor__1 = reinterpret_cast<void*>(0x080B1460);
void * const CExoLinkedListTemplatedunsignedlong__AddHead = reinterpret_cast<void*>(0x081A73BC);
void * const CExoLinkedListTemplatedunsignedlong__AddTail = reinterpret_cast<void*>(0x080B1670);
void * const CExoLinkedListTemplatedunsignedlong__Count = reinterpret_cast<void*>(0x0805EF40);
void * const CExoLinkedListTemplatedunsignedlong__GetAtPos = reinterpret_cast<void*>(0x08082EC4);
void * const CExoLinkedListTemplatedunsignedlong__GetHeadPos = reinterpret_cast<void*>(0x0805EF20);
void * const CExoLinkedListTemplatedunsignedlong__GetNext = reinterpret_cast<void*>(0x0805EF2C);
void * const CExoLinkedListTemplatedunsignedlong__GetPrev = reinterpret_cast<void*>(0x08082C34);
void * const CExoLinkedListTemplatedunsignedlong__GetTailPos = reinterpret_cast<void*>(0x08082C24);
void * const CExoLinkedListTemplatedunsignedlong__IsEmpty = reinterpret_cast<void*>(0x081A74D0);
void * const CExoLinkedListTemplatedunsignedlong__Remove = reinterpret_cast<void*>(0x08086480);
void * const CExoLinkedListTemplatedunsignedlong__RemoveHead = reinterpret_cast<void*>(0x081A74E4);

void * const CExoLinkedListTemplatedunsignedshort__CExoLinkedListTemplatedunsignedshortCtor__0 = reinterpret_cast<void*>(0x082ACD80);
void * const CExoLinkedListTemplatedunsignedshort__CExoLinkedListTemplatedunsignedshortCtor__1 = reinterpret_cast<void*>(0x082ACD50);
void * const CExoLinkedListTemplatedunsignedshort__AddTail = reinterpret_cast<void*>(0x082ACDE4);
void * const CExoLinkedListTemplatedunsignedshort__GetHead = reinterpret_cast<void*>(0x082ACDF8);
void * const CExoLinkedListTemplatedunsignedshort__GetHeadPos = reinterpret_cast<void*>(0x082ACE10);
void * const CExoLinkedListTemplatedunsignedshort__GetNext = reinterpret_cast<void*>(0x082ACE1C);
void * const CExoLinkedListTemplatedunsignedshort__IsEmpty = reinterpret_cast<void*>(0x082ACDBC);
void * const CExoLinkedListTemplatedunsignedshort__RemoveHead = reinterpret_cast<void*>(0x082ACDD0);

void * const CExoLocString__CExoLocStringCtor__0 = reinterpret_cast<void*>(0x082C9EB8);
void * const CExoLocString__CExoLocStringCtor__1 = reinterpret_cast<void*>(0x082C9F08);
void * const CExoLocString__CExoLocStringDtor = reinterpret_cast<void*>(0x082C9F60);
void * const CExoLocString____as = reinterpret_cast<void*>(0x082CA010);
void * const CExoLocString____eq = reinterpret_cast<void*>(0x082C9F9C);
void * const CExoLocString____ne = reinterpret_cast<void*>(0x082C9FD4);
void * const CExoLocString__AddString = reinterpret_cast<void*>(0x082CA040);
void * const CExoLocString__ClearLocString = reinterpret_cast<void*>(0x082CA0C0);
void * const CExoLocString__GetString__0 = reinterpret_cast<void*>(0x082C9CD0);
void * const CExoLocString__GetString__1 = reinterpret_cast<void*>(0x082CA0D4);
void * const CExoLocString__GetStringCount = reinterpret_cast<void*>(0x082CA148);
void * const CExoLocString__GetStringInternal = reinterpret_cast<void*>(0x082CA170);
void * const CExoLocString__GetStringLength = reinterpret_cast<void*>(0x082CA15C);
void * const CExoLocString__GetStringLoc = reinterpret_cast<void*>(0x082CA118);
void * const CExoLocString__RemoveString__0 = reinterpret_cast<void*>(0x082CA184);
void * const CExoLocString__RemoveString__1 = reinterpret_cast<void*>(0x082CA1B0);

void * const CExoLocStringInternal__CExoLocStringInternalCtor = reinterpret_cast<void*>(0x082D0F98);
void * const CExoLocStringInternal__CExoLocStringInternalDtor = reinterpret_cast<void*>(0x082D0FB8);
void * const CExoLocStringInternal__AddString = reinterpret_cast<void*>(0x082D0C34);
void * const CExoLocStringInternal__Assign = reinterpret_cast<void*>(0x082D0D70);
void * const CExoLocStringInternal__ClearLocString = reinterpret_cast<void*>(0x082D0FF4);
void * const CExoLocStringInternal__Compare = reinterpret_cast<void*>(0x082D0E20);
void * const CExoLocStringInternal__GetString__0 = reinterpret_cast<void*>(0x082D104C);
void * const CExoLocStringInternal__GetString__1 = reinterpret_cast<void*>(0x082D10CC);
void * const CExoLocStringInternal__GetStringCount = reinterpret_cast<void*>(0x082D1130);
void * const CExoLocStringInternal__GetStringLength = reinterpret_cast<void*>(0x082D113C);
void * const CExoLocStringInternal__RemoveString = reinterpret_cast<void*>(0x082D11AC);

void * const CExoMemman__AddFreeRecord = reinterpret_cast<void*>(0x082AE884);
void * const CExoMemman__Alloc = reinterpret_cast<void*>(0x082ADEA8);
void * const CExoMemman__CheckHeaps = reinterpret_cast<void*>(0x082AE660);
void * const CExoMemman__Clear = reinterpret_cast<void*>(0x082ADBF4);
void * const CExoMemman__Destroy = reinterpret_cast<void*>(0x082AE64C);
void * const CExoMemman__DoHeapWalk = reinterpret_cast<void*>(0x082ADCD4);
void * const CExoMemman__FillRecordPtrArray = reinterpret_cast<void*>(0x082AE928);
void * const CExoMemman__FinalReport = reinterpret_cast<void*>(0x082AE1C8);
void * const CExoMemman__Free = reinterpret_cast<void*>(0x082AE668);
void * const CExoMemman__GetFreeRecord = reinterpret_cast<void*>(0x082AE868);
void * const CExoMemman__GetHeaps = reinterpret_cast<void*>(0x082AE658);
void * const CExoMemman__OutputTypeTrackingReport = reinterpret_cast<void*>(0x082AE298);
void * const CExoMemman__PopType = reinterpret_cast<void*>(0x082AE788);
void * const CExoMemman__PushType = reinterpret_cast<void*>(0x082AE750);
void * const CExoMemman__ReportEntry = reinterpret_cast<void*>(0x082ADFE4);
void * const CExoMemman__ReportRemoval = reinterpret_cast<void*>(0x082AE0CC);
void * const CExoMemman__SnapShotReportPrint = reinterpret_cast<void*>(0x082AE368);
void * const CExoMemman__SnapShotReportWithSort = reinterpret_cast<void*>(0x082AE8F0);
void * const CExoMemman__StartReport = reinterpret_cast<void*>(0x082AE7B8);

void * const CExoNet__CExoNetCtor = reinterpret_cast<void*>(0x082C6090);
void * const CExoNet__CExoNetDtor = reinterpret_cast<void*>(0x082C60D8);
void * const CExoNet__AddressTranslationAvailable = reinterpret_cast<void*>(0x082C63AC);
void * const CExoNet__ClearNetworkAddressProtect = reinterpret_cast<void*>(0x082C62B4);
void * const CExoNet__ClearUnusedNetworkAddresses = reinterpret_cast<void*>(0x082C6318);
void * const CExoNet__CloseTCPConnection = reinterpret_cast<void*>(0x082C6524);
void * const CExoNet__CompareToLocalAddress = reinterpret_cast<void*>(0x082C629C);
void * const CExoNet__CompareToSpecificInternetAddress = reinterpret_cast<void*>(0x082C6434);
void * const CExoNet__EndAddressTranslation = reinterpret_cast<void*>(0x082C63D4);
void * const CExoNet__EndIncomingMessageProcessing = reinterpret_cast<void*>(0x082C61E0);
void * const CExoNet__FetchIncomingMessage = reinterpret_cast<void*>(0x082C61F4);
void * const CExoNet__GetAddressTranslation = reinterpret_cast<void*>(0x082C63C0);
void * const CExoNet__GetLocalAdapterString = reinterpret_cast<void*>(0x082C62F0);
void * const CExoNet__GetNetworkAddressData = reinterpret_cast<void*>(0x082C6264);
void * const CExoNet__GetNetworkAddressString = reinterpret_cast<void*>(0x082C6220);
void * const CExoNet__GetNumberLocalAdapters = reinterpret_cast<void*>(0x082C62DC);
void * const CExoNet__GetProtocolInitialized = reinterpret_cast<void*>(0x082C612C);
void * const CExoNet__GetProtocolReceivePort = reinterpret_cast<void*>(0x082C6140);
void * const CExoNet__GetProtocolSendPort = reinterpret_cast<void*>(0x082C6154);
void * const CExoNet__GetSendUDPSocket = reinterpret_cast<void*>(0x082C6474);
void * const CExoNet__GetSpecificInternetAddress = reinterpret_cast<void*>(0x082C640C);
void * const CExoNet__GetTCPMessage = reinterpret_cast<void*>(0x082C64F4);
void * const CExoNet__InitializeProtocol = reinterpret_cast<void*>(0x082C6114);
void * const CExoNet__MessageArrived = reinterpret_cast<void*>(0x082C619C);
void * const CExoNet__OpenTCPConnection = reinterpret_cast<void*>(0x082C6488);
void * const CExoNet__RemoveIncomingMessage = reinterpret_cast<void*>(0x082C620C);
void * const CExoNet__SendDirectMessage = reinterpret_cast<void*>(0x082C617C);
void * const CExoNet__SendTCPMessage = reinterpret_cast<void*>(0x082C650C);
void * const CExoNet__SetMasterServerInternetAddress = reinterpret_cast<void*>(0x082C6460);
void * const CExoNet__SetNetworkAddressData = reinterpret_cast<void*>(0x082C6284);
void * const CExoNet__SetNetworkAddressProtect = reinterpret_cast<void*>(0x082C62C8);
void * const CExoNet__SetSpecificInternetAddress = reinterpret_cast<void*>(0x082C63E8);
void * const CExoNet__ShutDownProtocol = reinterpret_cast<void*>(0x082C6168);
void * const CExoNet__StartAddressTranslation = reinterpret_cast<void*>(0x082C6344);
void * const CExoNet__StartIncomingMessageProcessing = reinterpret_cast<void*>(0x082C61CC);
void * const CExoNet__StoreMessage = reinterpret_cast<void*>(0x082C61B4);
void * const CExoNet__TranslateAddressFromString = reinterpret_cast<void*>(0x082C6244);

void * const CExoNetExtendableBuffer__CExoNetExtendableBufferCtor = reinterpret_cast<void*>(0x082C541C);
void * const CExoNetExtendableBuffer__CExoNetExtendableBufferDtor = reinterpret_cast<void*>(0x082C5A6C);
void * const CExoNetExtendableBuffer__ChangeFrameReference = reinterpret_cast<void*>(0x082C57C4);
void * const CExoNetExtendableBuffer__GetCurrentUsage = reinterpret_cast<void*>(0x082C5D78);
void * const CExoNetExtendableBuffer__GetFirstUsedFrame = reinterpret_cast<void*>(0x082C5BAC);
void * const CExoNetExtendableBuffer__GetFrameConnectionId = reinterpret_cast<void*>(0x082C5CF8);
void * const CExoNetExtendableBuffer__GetFrameData = reinterpret_cast<void*>(0x082C56A8);
void * const CExoNetExtendableBuffer__GetFramePointer = reinterpret_cast<void*>(0x082C5C00);
void * const CExoNetExtendableBuffer__GetFrameSize = reinterpret_cast<void*>(0x082C5C7C);
void * const CExoNetExtendableBuffer__GetMaximumUsage = reinterpret_cast<void*>(0x082C5D94);
void * const CExoNetExtendableBuffer__GetUnusedFrame = reinterpret_cast<void*>(0x082C54E8);
void * const CExoNetExtendableBuffer__LockExtBufferInstance = reinterpret_cast<void*>(0x082C5AD8);
void * const CExoNetExtendableBuffer__SetFrameData = reinterpret_cast<void*>(0x082C5B18);
void * const CExoNetExtendableBuffer__UnlockExtBufferInstance = reinterpret_cast<void*>(0x082C5AF8);

void * const CExoNetFrameBuffer__CExoNetFrameBufferCtor = reinterpret_cast<void*>(0x082C5DB0);
void * const CExoNetFrameBuffer__CExoNetFrameBufferDtor = reinterpret_cast<void*>(0x082C5E10);
void * const CExoNetFrameBuffer__ChangeRefCount = reinterpret_cast<void*>(0x082C5EA8);
void * const CExoNetFrameBuffer__GetFrameConnectionId = reinterpret_cast<void*>(0x082C5F60);
void * const CExoNetFrameBuffer__GetFrameData = reinterpret_cast<void*>(0x082C5FA4);
void * const CExoNetFrameBuffer__GetFramePointer = reinterpret_cast<void*>(0x082C5F80);
void * const CExoNetFrameBuffer__GetFrameSize = reinterpret_cast<void*>(0x082C5F40);
void * const CExoNetFrameBuffer__GetRefCount = reinterpret_cast<void*>(0x082C5E88);
void * const CExoNetFrameBuffer__GetUnusedFrame = reinterpret_cast<void*>(0x082C5E4C);
void * const CExoNetFrameBuffer__GetUsedFrame = reinterpret_cast<void*>(0x082C5E5C);
void * const CExoNetFrameBuffer__SetFrameData = reinterpret_cast<void*>(0x082C602C);

void * const CExoNetInternal__CExoNetInternalCtor = reinterpret_cast<void*>(0x082C7264);
void * const CExoNetInternal__CExoNetInternalDtor = reinterpret_cast<void*>(0x082C7444);
void * const CExoNetInternal__AddressTranslationAvailable = reinterpret_cast<void*>(0x082C88CC);
void * const CExoNetInternal__ClearNetworkAddressProtect = reinterpret_cast<void*>(0x082C8774);
void * const CExoNetInternal__ClearUnusedNetworkAddresses = reinterpret_cast<void*>(0x082C87EC);
void * const CExoNetInternal__CloseTCPConnection = reinterpret_cast<void*>(0x082C8A50);
void * const CExoNetInternal__CompareToLocalAddress = reinterpret_cast<void*>(0x082C8598);
void * const CExoNetInternal__EndAddressTranslation = reinterpret_cast<void*>(0x082C8974);
void * const CExoNetInternal__EndIncomingMessageProcessing = reinterpret_cast<void*>(0x082C83C0);
void * const CExoNetInternal__EnumerateLocalAddresses = reinterpret_cast<void*>(0x082C7C64);
void * const CExoNetInternal__ExoWarningOnError = reinterpret_cast<void*>(0x082C89F4);
void * const CExoNetInternal__FetchIncomingMessage = reinterpret_cast<void*>(0x082C831C);
void * const CExoNetInternal__GetAddressTranslation = reinterpret_cast<void*>(0x082C8928);
void * const CExoNetInternal__GetLocalAdapterString = reinterpret_cast<void*>(0x082C8658);
void * const CExoNetInternal__GetNetworkAddressData = reinterpret_cast<void*>(0x082C853C);
void * const CExoNetInternal__GetNetworkAddressString = reinterpret_cast<void*>(0x082C8400);
void * const CExoNetInternal__GetNumberLocalAdapters = reinterpret_cast<void*>(0x082C861C);
void * const CExoNetInternal__GetProtocolInitialized = reinterpret_cast<void*>(0x082C814C);
void * const CExoNetInternal__GetProtocolReceivePort = reinterpret_cast<void*>(0x082C8170);
void * const CExoNetInternal__GetProtocolSendPort = reinterpret_cast<void*>(0x082C8194);
void * const CExoNetInternal__GetSendUDPSocket = reinterpret_cast<void*>(0x082C89E8);
void * const CExoNetInternal__GetTCPMessage = reinterpret_cast<void*>(0x082C8078);
void * const CExoNetInternal__InitializeProtocol = reinterpret_cast<void*>(0x082C755C);
void * const CExoNetInternal__MessageArrived = reinterpret_cast<void*>(0x082C7734);
void * const CExoNetInternal__OpenTCPConnection = reinterpret_cast<void*>(0x082C7EDC);
void * const CExoNetInternal__RemoveIncomingMessage = reinterpret_cast<void*>(0x082C8374);
void * const CExoNetInternal__SendMessage = reinterpret_cast<void*>(0x082C789C);
void * const CExoNetInternal__SendTCPMessage = reinterpret_cast<void*>(0x082C89FC);
void * const CExoNetInternal__SetConnectionIdTimer = reinterpret_cast<void*>(0x082C872C);
void * const CExoNetInternal__SetMasterServerInternetAddress = reinterpret_cast<void*>(0x082C89BC);
void * const CExoNetInternal__SetNetworkAddressData = reinterpret_cast<void*>(0x082C79A4);
void * const CExoNetInternal__SetNetworkAddressProtect = reinterpret_cast<void*>(0x082C8798);
void * const CExoNetInternal__ShutDownProtocol = reinterpret_cast<void*>(0x082C81B8);
void * const CExoNetInternal__StartAddressTranslation = reinterpret_cast<void*>(0x082C7CFC);
void * const CExoNetInternal__StartIncomingMessageProcessing = reinterpret_cast<void*>(0x082C82CC);
void * const CExoNetInternal__StoreMessage = reinterpret_cast<void*>(0x082C823C);
void * const CExoNetInternal__TranslateAddressFromString = reinterpret_cast<void*>(0x082C84BC);
void * const CExoNetInternal__WinSockInitialize = reinterpret_cast<void*>(0x082C822C);

void * const CExoPackedFile__CExoPackedFileCtor = reinterpret_cast<void*>(0x082C4654);
void * const CExoPackedFile__CExoPackedFileDtor = reinterpret_cast<void*>(0x082C4684);
void * const CExoPackedFile__GetAsyncFile = reinterpret_cast<void*>(0x082C46CC);
void * const CExoPackedFile__GetFile = reinterpret_cast<void*>(0x082C46C0);

void * const CExoRand__CExoRandCtor = reinterpret_cast<void*>(0x082CA1DC);
void * const CExoRand__CExoRandDtor = reinterpret_cast<void*>(0x082CA224);
void * const CExoRand__GetString = reinterpret_cast<void*>(0x082CA278);
void * const CExoRand__Rand = reinterpret_cast<void*>(0x082CA264);
void * const CExoRand__SignalEvent__0 = reinterpret_cast<void*>(0x082CA2A0);
void * const CExoRand__SignalEvent__1 = reinterpret_cast<void*>(0x082CA2B4);

void * const CExoRandInternal__CExoRandInternalCtor = reinterpret_cast<void*>(0x082D1314);
void * const CExoRandInternal__CExoRandInternalDtor = reinterpret_cast<void*>(0x082D1B24);
void * const CExoRandInternal__Add = reinterpret_cast<void*>(0x082D1C80);
void * const CExoRandInternal__GenSeed = reinterpret_cast<void*>(0x082D1C58);
void * const CExoRandInternal__GetString = reinterpret_cast<void*>(0x082D15E0);
void * const CExoRandInternal__Rand = reinterpret_cast<void*>(0x082D1B64);
void * const CExoRandInternal__ReSeed = reinterpret_cast<void*>(0x082D19F0);
void * const CExoRandInternal__SignalEvent__0 = reinterpret_cast<void*>(0x082D1850);
void * const CExoRandInternal__SignalEvent__1 = reinterpret_cast<void*>(0x082D1C18);

void * const CExoResFile__CExoResFileCtor = reinterpret_cast<void*>(0x082C2B10);
void * const CExoResFile__CExoResFileDtor = reinterpret_cast<void*>(0x082C46D8);
void * const CExoResFile__AddAsyncRefCount = reinterpret_cast<void*>(0x082C4754);
void * const CExoResFile__AddRefCount = reinterpret_cast<void*>(0x082C4724);
void * const CExoResFile__CloseAsyncFile = reinterpret_cast<void*>(0x082C47C4);
void * const CExoResFile__CloseFile = reinterpret_cast<void*>(0x082C4784);
void * const CExoResFile__DeleteAsyncRefCount = reinterpret_cast<void*>(0x082C4888);
void * const CExoResFile__DeleteRefCount = reinterpret_cast<void*>(0x082C4858);
void * const CExoResFile__GetResourceSize = reinterpret_cast<void*>(0x082C48B8);
void * const CExoResFile__Initialize = reinterpret_cast<void*>(0x082C48D4);
void * const CExoResFile__LoadHeader = reinterpret_cast<void*>(0x082C2D84);
void * const CExoResFile__OpenAsyncFile = reinterpret_cast<void*>(0x082C2C80);
void * const CExoResFile__OpenFile__0 = reinterpret_cast<void*>(0x082C2B7C);
void * const CExoResFile__OpenFile__1 = reinterpret_cast<void*>(0x082C4928);
void * const CExoResFile__ReadResource = reinterpret_cast<void*>(0x082C4940);
void * const CExoResFile__ReadResourceAsync = reinterpret_cast<void*>(0x082C49C4);
void * const CExoResFile__UnloadHeader = reinterpret_cast<void*>(0x082C4804);

void * const CExoResMan__CExoResManCtor = reinterpret_cast<void*>(0x082AECA0);
void * const CExoResMan__CExoResManDtor = reinterpret_cast<void*>(0x082AEEB4);
void * const CExoResMan__AddEncapsulatedResourceFile = reinterpret_cast<void*>(0x082B37E4);
void * const CExoResMan__AddFixedKeyTableFile = reinterpret_cast<void*>(0x082B381C);
void * const CExoResMan__AddKeyTable = reinterpret_cast<void*>(0x082AEFAC);
void * const CExoResMan__AddResourceDirectory = reinterpret_cast<void*>(0x082B3838);
void * const CExoResMan__AddResourceImageFile = reinterpret_cast<void*>(0x082B3800);
void * const CExoResMan__CancelRequest = reinterpret_cast<void*>(0x082AF2E4);
void * const CExoResMan__CleanDirectory = reinterpret_cast<void*>(0x082B3ED0);
void * const CExoResMan__CreateDirectory = reinterpret_cast<void*>(0x082B2410);
void * const CExoResMan__Demand = reinterpret_cast<void*>(0x082AF408);
void * const CExoResMan__Dump = reinterpret_cast<void*>(0x082B38FC);
void * const CExoResMan__DumpAll = reinterpret_cast<void*>(0x082AF600);
void * const CExoResMan__Exists = reinterpret_cast<void*>(0x082B393C);
void * const CExoResMan__Free = reinterpret_cast<void*>(0x082AFBB8);
void * const CExoResMan__FreeChunk = reinterpret_cast<void*>(0x082AFC7C);
void * const CExoResMan__FreeResourceData = reinterpret_cast<void*>(0x082B3990);
void * const CExoResMan__GetEncapsulatedFileDescription = reinterpret_cast<void*>(0x082AFDDC);
void * const CExoResMan__GetFreeDiskSpace = reinterpret_cast<void*>(0x082B2278);
void * const CExoResMan__GetIsStaticType = reinterpret_cast<void*>(0x082B3C90);
void * const CExoResMan__GetKeyEntry = reinterpret_cast<void*>(0x082AFF20);
void * const CExoResMan__GetNewResRef = reinterpret_cast<void*>(0x082AF8E0);
void * const CExoResMan__GetResID = reinterpret_cast<void*>(0x082B3AE4);
void * const CExoResMan__GetResObject = reinterpret_cast<void*>(0x082B3A30);
void * const CExoResMan__GetResOfType__0 = reinterpret_cast<void*>(0x082B0124);
void * const CExoResMan__GetResOfType__1 = reinterpret_cast<void*>(0x082B39F4);
void * const CExoResMan__GetResRefFromFile = reinterpret_cast<void*>(0x082B0450);
void * const CExoResMan__GetResTypeFromFile = reinterpret_cast<void*>(0x082B056C);
void * const CExoResMan__GetTable = reinterpret_cast<void*>(0x082B3B30);
void * const CExoResMan__GetTableCount = reinterpret_cast<void*>(0x082B0684);
void * const CExoResMan__GetTotalPhysicalMemory = reinterpret_cast<void*>(0x082B3CB4);
void * const CExoResMan__Malloc = reinterpret_cast<void*>(0x082B3CC0);
void * const CExoResMan__NukeDirectory = reinterpret_cast<void*>(0x082B3F40);
void * const CExoResMan__ReadRaw = reinterpret_cast<void*>(0x082B3E60);
void * const CExoResMan__Release = reinterpret_cast<void*>(0x082B075C);
void * const CExoResMan__ReleaseResObject = reinterpret_cast<void*>(0x082B3D48);
void * const CExoResMan__RemoveEncapsulatedResourceFile = reinterpret_cast<void*>(0x082B3854);
void * const CExoResMan__RemoveFile = reinterpret_cast<void*>(0x082B2F1C);
void * const CExoResMan__RemoveFixedKeyTableFile = reinterpret_cast<void*>(0x082B3884);
void * const CExoResMan__RemoveFromToBeFreedList = reinterpret_cast<void*>(0x082B3BEC);
void * const CExoResMan__RemoveKeyTable = reinterpret_cast<void*>(0x082B0888);
void * const CExoResMan__RemoveResourceDirectory = reinterpret_cast<void*>(0x082B389C);
void * const CExoResMan__RemoveResourceImageFile = reinterpret_cast<void*>(0x082B386C);
void * const CExoResMan__Request = reinterpret_cast<void*>(0x082B3DB0);
void * const CExoResMan__ResumeServicing = reinterpret_cast<void*>(0x082B3E00);
void * const CExoResMan__ServiceCurrentAsyncRes = reinterpret_cast<void*>(0x082B30A0);
void * const CExoResMan__ServiceFromDirectory = reinterpret_cast<void*>(0x082B0970);
void * const CExoResMan__ServiceFromDirectoryRaw = reinterpret_cast<void*>(0x082B19B0);
void * const CExoResMan__ServiceFromEncapsulated = reinterpret_cast<void*>(0x082B1020);
void * const CExoResMan__ServiceFromEncapsulatedRaw = reinterpret_cast<void*>(0x082B1E38);
void * const CExoResMan__ServiceFromImage = reinterpret_cast<void*>(0x082B1670);
void * const CExoResMan__ServiceFromImageRaw = reinterpret_cast<void*>(0x082B20F8);
void * const CExoResMan__ServiceFromResFile = reinterpret_cast<void*>(0x082B1330);
void * const CExoResMan__ServiceFromResFileRaw = reinterpret_cast<void*>(0x082B1FC0);
void * const CExoResMan__SetResObject = reinterpret_cast<void*>(0x082B3A80);
void * const CExoResMan__SetTotalResourceMemory = reinterpret_cast<void*>(0x082B3E10);
void * const CExoResMan__SuspendServicing = reinterpret_cast<void*>(0x082B3E50);
void * const CExoResMan__Update = reinterpret_cast<void*>(0x082B1750);
void * const CExoResMan__UpdateEncapsulatedResourceFile = reinterpret_cast<void*>(0x082B38B4);
void * const CExoResMan__UpdateFixedKeyTableFile = reinterpret_cast<void*>(0x082B38CC);
void * const CExoResMan__UpdateKeyTable = reinterpret_cast<void*>(0x082B1858);
void * const CExoResMan__UpdateResourceDirectory = reinterpret_cast<void*>(0x082B38E4);
void * const CExoResMan__WipeDirectory = reinterpret_cast<void*>(0x082B2560);

void * const CExoResourceImageFile__CExoResourceImageFileCtor = reinterpret_cast<void*>(0x082C3F30);
void * const CExoResourceImageFile__CExoResourceImageFileDtor = reinterpret_cast<void*>(0x082C4DA8);
void * const CExoResourceImageFile__AddAsyncRefCount = reinterpret_cast<void*>(0x082C5028);
void * const CExoResourceImageFile__AddRefCount = reinterpret_cast<void*>(0x082C4DF4);
void * const CExoResourceImageFile__CloseAsyncFile = reinterpret_cast<void*>(0x082C5030);
void * const CExoResourceImageFile__CloseFile = reinterpret_cast<void*>(0x082C4E24);
void * const CExoResourceImageFile__DeleteAsyncRefCount = reinterpret_cast<void*>(0x082C503C);
void * const CExoResourceImageFile__DeleteRefCount = reinterpret_cast<void*>(0x082C4E6C);
void * const CExoResourceImageFile__GetHeader = reinterpret_cast<void*>(0x082C4F18);
void * const CExoResourceImageFile__GetKeyList = reinterpret_cast<void*>(0x082C4E8C);
void * const CExoResourceImageFile__GetKeyListEntry = reinterpret_cast<void*>(0x082C4EAC);
void * const CExoResourceImageFile__GetResource = reinterpret_cast<void*>(0x082C4F40);
void * const CExoResourceImageFile__GetResourceListEntry = reinterpret_cast<void*>(0x082C4EE8);
void * const CExoResourceImageFile__GetResourceSize = reinterpret_cast<void*>(0x082C4F24);
void * const CExoResourceImageFile__Initialize = reinterpret_cast<void*>(0x082C4F5C);
void * const CExoResourceImageFile__LoadHeader = reinterpret_cast<void*>(0x082C5050);
void * const CExoResourceImageFile__OpenAsyncFile = reinterpret_cast<void*>(0x082C5044);
void * const CExoResourceImageFile__OpenFile__0 = reinterpret_cast<void*>(0x082C3F9C);
void * const CExoResourceImageFile__OpenFile__1 = reinterpret_cast<void*>(0x082C4F94);
void * const CExoResourceImageFile__ReadResource = reinterpret_cast<void*>(0x082C4FAC);
void * const CExoResourceImageFile__ReadResourceAsync = reinterpret_cast<void*>(0x082C5004);
void * const CExoResourceImageFile__UnloadHeader = reinterpret_cast<void*>(0x082C4E60);

void * const CExoString__CExoStringCtor__0 = reinterpret_cast<void*>(0x082CBFB4);
void * const CExoString__CExoStringCtor__1 = reinterpret_cast<void*>(0x082CBFCC);
void * const CExoString__CExoStringCtor__2 = reinterpret_cast<void*>(0x082CC030);
void * const CExoString__CExoStringCtor__3 = reinterpret_cast<void*>(0x082CC09C);
void * const CExoString__CExoStringCtor__4 = reinterpret_cast<void*>(0x082CC0EC);
void * const CExoString__CExoStringDtor = reinterpret_cast<void*>(0x082CC138);
void * const CExoString____as__0 = reinterpret_cast<void*>(0x082CAD34);
void * const CExoString____as__1 = reinterpret_cast<void*>(0x082CAE0C);
void * const CExoString____eq__0 = reinterpret_cast<void*>(0x082CC180);
void * const CExoString____eq__1 = reinterpret_cast<void*>(0x082CC1DC);
void * const CExoString____ge__0 = reinterpret_cast<void*>(0x082CC480);
void * const CExoString____ge__1 = reinterpret_cast<void*>(0x082CC4D0);
void * const CExoString____gt__0 = reinterpret_cast<void*>(0x082CC34C);
void * const CExoString____gt__1 = reinterpret_cast<void*>(0x082CC394);
void * const CExoString____le__0 = reinterpret_cast<void*>(0x082CC3D8);
void * const CExoString____le__1 = reinterpret_cast<void*>(0x082CC430);
void * const CExoString____lt__0 = reinterpret_cast<void*>(0x082CC2CC);
void * const CExoString____lt__1 = reinterpret_cast<void*>(0x082CC30C);
void * const CExoString____ne__0 = reinterpret_cast<void*>(0x082CC230);
void * const CExoString____ne__1 = reinterpret_cast<void*>(0x082CC280);
void * const CExoString____pl = reinterpret_cast<void*>(0x082CAEC0);
void * const CExoString____vc = reinterpret_cast<void*>(0x082CC51C);
void * const CExoString__AsFLOAT = reinterpret_cast<void*>(0x082CB150);
void * const CExoString__AsINT = reinterpret_cast<void*>(0x082CB12C);
void * const CExoString__AsTAG = reinterpret_cast<void*>(0x082CBE58);
void * const CExoString__CompareNoCase = reinterpret_cast<void*>(0x082CBB84);
void * const CExoString__ComparePrefixNoCase = reinterpret_cast<void*>(0x082CC6BC);
void * const CExoString__CStr = reinterpret_cast<void*>(0x082CC550);
void * const CExoString__Find__0 = reinterpret_cast<void*>(0x082CC564);
void * const CExoString__Find__1 = reinterpret_cast<void*>(0x082CB17C);
void * const CExoString__FindNot = reinterpret_cast<void*>(0x082CC5F0);
void * const CExoString__Format = reinterpret_cast<void*>(0x082CB258);
void * const CExoString__GetLength = reinterpret_cast<void*>(0x082CC678);
void * const CExoString__Insert = reinterpret_cast<void*>(0x082CB330);
void * const CExoString__IsEmpty = reinterpret_cast<void*>(0x082CC6A0);
void * const CExoString__Left = reinterpret_cast<void*>(0x082CB3E4);
void * const CExoString__LowerCase = reinterpret_cast<void*>(0x082CB548);
void * const CExoString__Right = reinterpret_cast<void*>(0x082CB6E0);
void * const CExoString__StripNonAlphaNumeric = reinterpret_cast<void*>(0x082CBCFC);
void * const CExoString__SubString = reinterpret_cast<void*>(0x082CB85C);
void * const CExoString__UpperCase = reinterpret_cast<void*>(0x082CB9EC);

void * const CExoStringList__CExoStringListCtor__0 = reinterpret_cast<void*>(0x082CAB78);
void * const CExoStringList__CExoStringListCtor__1 = reinterpret_cast<void*>(0x082CABA4);
void * const CExoStringList__CExoStringListCtor__2 = reinterpret_cast<void*>(0x082CA4EC);
void * const CExoStringList__CExoStringListDtor = reinterpret_cast<void*>(0x082CABE0);
void * const CExoStringList____as = reinterpret_cast<void*>(0x082CA9E4);
void * const CExoStringList____vc = reinterpret_cast<void*>(0x082CAD24);
void * const CExoStringList__Add = reinterpret_cast<void*>(0x082CA5D4);
void * const CExoStringList__AddSorted = reinterpret_cast<void*>(0x082CA2C8);
void * const CExoStringList__Clear = reinterpret_cast<void*>(0x082CAC4C);
void * const CExoStringList__Delete = reinterpret_cast<void*>(0x082CA714);
void * const CExoStringList__GetCount = reinterpret_cast<void*>(0x082CAC98);
void * const CExoStringList__GetDuplicate = reinterpret_cast<void*>(0x082CACA4);
void * const CExoStringList__GetSize = reinterpret_cast<void*>(0x082CACB0);
void * const CExoStringList__GetSorted = reinterpret_cast<void*>(0x082CACBC);
void * const CExoStringList__GetString = reinterpret_cast<void*>(0x082CACC8);
void * const CExoStringList__Insert = reinterpret_cast<void*>(0x082CA7F0);
void * const CExoStringList__Introduce = reinterpret_cast<void*>(0x082CAAD0);
void * const CExoStringList__Merge = reinterpret_cast<void*>(0x082CA8A0);
void * const CExoStringList__Remove = reinterpret_cast<void*>(0x082CACD8);

void * const CExoTimers__CExoTimersCtor = reinterpret_cast<void*>(0x082CC710);
void * const CExoTimers__CExoTimersDtor = reinterpret_cast<void*>(0x082CC758);
void * const CExoTimers__GetHighResolutionTimer = reinterpret_cast<void*>(0x082CC7A8);
void * const CExoTimers__GetLowResolutionTimer = reinterpret_cast<void*>(0x082CC794);

void * const CExoTimersInternal__CExoTimersInternalCtor = reinterpret_cast<void*>(0x082D1CFC);
void * const CExoTimersInternal__CExoTimersInternalDtor = reinterpret_cast<void*>(0x082D1D28);
void * const CExoTimersInternal__GetHighResolutionTimer = reinterpret_cast<void*>(0x082D1D50);
void * const CExoTimersInternal__GetLowResolutionTimer = reinterpret_cast<void*>(0x082D1D44);

void * const CExtendedServerInfo____as = reinterpret_cast<void*>(0x0829F8B0);

void * const CFactionManager__CFactionManagerCtor = reinterpret_cast<void*>(0x080BA898);
void * const CFactionManager__CFactionManagerDtor = reinterpret_cast<void*>(0x080BA914);
void * const CFactionManager__CreateDefaultFactions = reinterpret_cast<void*>(0x080BA230);
void * const CFactionManager__DeleteFaction = reinterpret_cast<void*>(0x080BAB0C);
void * const CFactionManager__GetDefaultPCReputation = reinterpret_cast<void*>(0x080B9C68);
void * const CFactionManager__GetFaction = reinterpret_cast<void*>(0x080BA9A0);
void * const CFactionManager__GetFactionIdByName = reinterpret_cast<void*>(0x080BA3D8);
void * const CFactionManager__GetIsNPCFaction = reinterpret_cast<void*>(0x080BAA40);
void * const CFactionManager__GetNPCFactionReputation = reinterpret_cast<void*>(0x080B9BC0);
void * const CFactionManager__LoadFactions = reinterpret_cast<void*>(0x080B9CFC);
void * const CFactionManager__LoadReputations = reinterpret_cast<void*>(0x080B9F68);
void * const CFactionManager__SaveFactions = reinterpret_cast<void*>(0x080BA130);
void * const CFactionManager__SaveReputations = reinterpret_cast<void*>(0x080BAA60);
void * const CFactionManager__SetNPCFactionReputation = reinterpret_cast<void*>(0x080BA9D0);

void * const CGameEffect__CGameEffectCtor__0 = reinterpret_cast<void*>(0x0817DC70);
void * const CGameEffect__CGameEffectCtor__1 = reinterpret_cast<void*>(0x0817DE10);
void * const CGameEffect__CGameEffectDtor = reinterpret_cast<void*>(0x0817DFDC);
void * const CGameEffect____as = reinterpret_cast<void*>(0x0817E294);
void * const CGameEffect____eq = reinterpret_cast<void*>(0x0817E47C);
void * const CGameEffect____ne = reinterpret_cast<void*>(0x0817F730);
void * const CGameEffect__CopyEffect = reinterpret_cast<void*>(0x0817E08C);
void * const CGameEffect__GetExpiryTime = reinterpret_cast<void*>(0x0817F714);
void * const CGameEffect__GetFloat = reinterpret_cast<void*>(0x0817F620);
void * const CGameEffect__GetInteger = reinterpret_cast<void*>(0x0817F5F8);
void * const CGameEffect__GetObjectID = reinterpret_cast<void*>(0x0817F64C);
void * const CGameEffect__GetScriptEffectType = reinterpret_cast<void*>(0x0817EFB8);
void * const CGameEffect__GetString = reinterpret_cast<void*>(0x0817F678);
void * const CGameEffect__LoadGameEffect = reinterpret_cast<void*>(0x0817E6F0);
void * const CGameEffect__SaveGameEffect = reinterpret_cast<void*>(0x0817EBC4);
void * const CGameEffect__SetCreator = reinterpret_cast<void*>(0x0817EECC);
void * const CGameEffect__SetExpiryTime = reinterpret_cast<void*>(0x0817F700);
void * const CGameEffect__SetFloat = reinterpret_cast<void*>(0x0817F634);
void * const CGameEffect__SetInteger = reinterpret_cast<void*>(0x0817F60C);
void * const CGameEffect__SetLinked = reinterpret_cast<void*>(0x0817F750);
void * const CGameEffect__SetNumIntegers = reinterpret_cast<void*>(0x0817F54C);
void * const CGameEffect__SetNumIntegersInitializeToNegativeOne = reinterpret_cast<void*>(0x0817F5A0);
void * const CGameEffect__SetObjectID = reinterpret_cast<void*>(0x0817F660);
void * const CGameEffect__SetString = reinterpret_cast<void*>(0x0817F6A4);
void * const CGameEffect__UpdateLinked = reinterpret_cast<void*>(0x0817E57C);

void * const CGameEffectApplierRemover__CGameEffectApplierRemoverDtor = reinterpret_cast<void*>(0x0817DC4C);

void * const CGameObject__CGameObjectCtor = reinterpret_cast<void*>(0x080BB160);
void * const CGameObject__CGameObjectDtor = reinterpret_cast<void*>(0x080BB388);
void * const CGameObject__AsNWCArea = reinterpret_cast<void*>(0x08060C18);
void * const CGameObject__AsNWCAreaOfEffectObject = reinterpret_cast<void*>(0x08060C78);
void * const CGameObject__AsNWCCreature = reinterpret_cast<void*>(0x08060C28);
void * const CGameObject__AsNWCDoor = reinterpret_cast<void*>(0x08060BF8);
void * const CGameObject__AsNWCItem = reinterpret_cast<void*>(0x08060C38);
void * const CGameObject__AsNWCModule = reinterpret_cast<void*>(0x08060C08);
void * const CGameObject__AsNWCObject = reinterpret_cast<void*>(0x08060BF0);
void * const CGameObject__AsNWCPlaceable = reinterpret_cast<void*>(0x08060C68);
void * const CGameObject__AsNWCProjectile = reinterpret_cast<void*>(0x08060C58);
void * const CGameObject__AsNWCSoundObject = reinterpret_cast<void*>(0x08060CA8);
void * const CGameObject__AsNWCStore = reinterpret_cast<void*>(0x08060C90);
void * const CGameObject__AsNWCTrigger = reinterpret_cast<void*>(0x08060C48);
void * const CGameObject__AsNWSArea = reinterpret_cast<void*>(0x08060C20);
void * const CGameObject__AsNWSAreaOfEffectObject = reinterpret_cast<void*>(0x08060C70);
void * const CGameObject__AsNWSCreature = reinterpret_cast<void*>(0x08060C30);
void * const CGameObject__AsNWSDoor = reinterpret_cast<void*>(0x08060C00);
void * const CGameObject__AsNWSEncounter = reinterpret_cast<void*>(0x08060C88);
void * const CGameObject__AsNWSItem = reinterpret_cast<void*>(0x08060C40);
void * const CGameObject__AsNWSModule = reinterpret_cast<void*>(0x08060C10);
void * const CGameObject__AsNWSObject = reinterpret_cast<void*>(0x080BB3AC);
void * const CGameObject__AsNWSPlaceable = reinterpret_cast<void*>(0x08060C60);
void * const CGameObject__AsNWSPlayerTURD = reinterpret_cast<void*>(0x08086108);
void * const CGameObject__AsNWSSoundObject = reinterpret_cast<void*>(0x08060CA0);
void * const CGameObject__AsNWSStore = reinterpret_cast<void*>(0x08060C98);
void * const CGameObject__AsNWSTrigger = reinterpret_cast<void*>(0x08060C50);
void * const CGameObject__AsNWSWaypoint = reinterpret_cast<void*>(0x08060C80);
void * const CGameObject__ResetUpdateTimes = reinterpret_cast<void*>(0x08060BE8);
void * const CGameObject__SetId = reinterpret_cast<void*>(0x08060BE0);

void * const CGameObjectArray__CGameObjectArrayCtor = reinterpret_cast<void*>(0x080BB17C);
void * const CGameObjectArray__CGameObjectArrayDtor = reinterpret_cast<void*>(0x080BAC64);
void * const CGameObjectArray__AddCharacterObjectAtPos = reinterpret_cast<void*>(0x080BAE78);
void * const CGameObjectArray__AddExternalObject = reinterpret_cast<void*>(0x080BAF5C);
void * const CGameObjectArray__AddInternalObject = reinterpret_cast<void*>(0x080BB04C);
void * const CGameObjectArray__AddObjectAtPos = reinterpret_cast<void*>(0x080BAD30);
void * const CGameObjectArray__Clean = reinterpret_cast<void*>(0x080BB2C4);
void * const CGameObjectArray__Delete__0 = reinterpret_cast<void*>(0x080BB200);
void * const CGameObjectArray__Delete__1 = reinterpret_cast<void*>(0x080BB21C);
void * const CGameObjectArray__GetGameObject = reinterpret_cast<void*>(0x080BB2CC);

void * const CGameSpyClient__CGameSpyClientCtor = reinterpret_cast<void*>(0x082730C4);
void * const CGameSpyClient__CGameSpyClientDtor = reinterpret_cast<void*>(0x08274508);
void * const CGameSpyClient__ChatNameMangle = reinterpret_cast<void*>(0x082740F0);
void * const CGameSpyClient__ConnectCallback = reinterpret_cast<void*>(0x0827456C);
void * const CGameSpyClient__DisconnectedCallback = reinterpret_cast<void*>(0x08274600);
void * const CGameSpyClient__EnumPlayersCallback = reinterpret_cast<void*>(0x082747C4);
void * const CGameSpyClient__JoinGroupRoom = reinterpret_cast<void*>(0x082746F8);
void * const CGameSpyClient__JoinGroupRoomCallback = reinterpret_cast<void*>(0x0827367C);
void * const CGameSpyClient__ListGroupRoomsCallback = reinterpret_cast<void*>(0x0827461C);
void * const CGameSpyClient__ListingGamesCallback = reinterpret_cast<void*>(0x082737B0);
void * const CGameSpyClient__NickErrorCallback = reinterpret_cast<void*>(0x08273418);
void * const CGameSpyClient__PlayerChangedNickCallback = reinterpret_cast<void*>(0x0827499C);
void * const CGameSpyClient__PlayerJoinedCallback = reinterpret_cast<void*>(0x08274874);
void * const CGameSpyClient__PlayerLeftCallback = reinterpret_cast<void*>(0x08274908);
void * const CGameSpyClient__PlayerMessageCallback = reinterpret_cast<void*>(0x08274AC4);
void * const CGameSpyClient__RoomMessageCallback = reinterpret_cast<void*>(0x08274A30);
void * const CGameSpyClient__SendMessageToNick = reinterpret_cast<void*>(0x08274B90);
void * const CGameSpyClient__SendMessageToRoom = reinterpret_cast<void*>(0x08274B74);
void * const CGameSpyClient__SetGameBuildFilter = reinterpret_cast<void*>(0x08274C44);
void * const CGameSpyClient__SetGameFilters = reinterpret_cast<void*>(0x08274BB0);
void * const CGameSpyClient__Update = reinterpret_cast<void*>(0x08274558);

void * const CGameSpyServer__CGameSpyServerCtor = reinterpret_cast<void*>(0x0827428C);
void * const CGameSpyServer__CGameSpyServerDtor = reinterpret_cast<void*>(0x08274338);
void * const CGameSpyServer__AddErrorCallback = reinterpret_cast<void*>(0x082744A4);
void * const CGameSpyServer__CountCallback = reinterpret_cast<void*>(0x0827449C);
void * const CGameSpyServer__HandleGameSpyMessage = reinterpret_cast<void*>(0x08272FBC);
void * const CGameSpyServer__KeyListCallback = reinterpret_cast<void*>(0x08272E80);
void * const CGameSpyServer__PlayerTeamKeyCallback = reinterpret_cast<void*>(0x0827447C);
void * const CGameSpyServer__RegisterAllKeys = reinterpret_cast<void*>(0x08274374);
void * const CGameSpyServer__ServerKeyCallback = reinterpret_cast<void*>(0x08274460);
void * const CGameSpyServer__Update = reinterpret_cast<void*>(0x082744E8);

void * const CItemPropertyApplierRemover__CItemPropertyApplierRemoverDtor = reinterpret_cast<void*>(0x081B0C30);

void * const CItemRepository__CItemRepositoryCtor = reinterpret_cast<void*>(0x081A6928);
void * const CItemRepository__CItemRepositoryDtor = reinterpret_cast<void*>(0x081A699C);
void * const CItemRepository__AddItem = reinterpret_cast<void*>(0x081A32D0);
void * const CItemRepository__AddPanel = reinterpret_cast<void*>(0x081A6B48);
void * const CItemRepository__CalculateContentsWeight = reinterpret_cast<void*>(0x081A4A54);
void * const CItemRepository__CalculatePage = reinterpret_cast<void*>(0x081A6A38);
void * const CItemRepository__CheckFit = reinterpret_cast<void*>(0x081A3BB4);
void * const CItemRepository__CheckItemOverlaps = reinterpret_cast<void*>(0x081A3DD8);
void * const CItemRepository__FindItemWithBaseItemId = reinterpret_cast<void*>(0x081A3EE4);
void * const CItemRepository__FindItemWithTag = reinterpret_cast<void*>(0x081A3F9C);
void * const CItemRepository__FindPosition = reinterpret_cast<void*>(0x081A4114);
void * const CItemRepository__GetItemInRepository__0 = reinterpret_cast<void*>(0x081A4744);
void * const CItemRepository__GetItemInRepository__1 = reinterpret_cast<void*>(0x081A6AB8);
void * const CItemRepository__ItemListGetItem = reinterpret_cast<void*>(0x081A6A58);
void * const CItemRepository__ItemListGetItemObjectID = reinterpret_cast<void*>(0x081A6A90);
void * const CItemRepository__MoveItem = reinterpret_cast<void*>(0x081A497C);
void * const CItemRepository__RemoveItem = reinterpret_cast<void*>(0x081A4844);

void * const CLastUpdateObject__CLastUpdateObjectCtor = reinterpret_cast<void*>(0x081E2C24);
void * const CLastUpdateObject__CLastUpdateObjectDtor = reinterpret_cast<void*>(0x081E2FDC);
void * const CLastUpdateObject__InitializeQuickbar = reinterpret_cast<void*>(0x081E42A0);

void * const CLoopingVisualEffect__GetIsBeam = reinterpret_cast<void*>(0x081C8800);

void * const CMemRecord__Clear = reinterpret_cast<void*>(0x082AE60C);

void * const CMstNetLayer__CMstNetLayerCtor = reinterpret_cast<void*>(0x082940B4);
void * const CMstNetLayer__CMstNetLayerDtor = reinterpret_cast<void*>(0x08297F54);
void * const CMstNetLayer__GenerateCommunityNameResponse = reinterpret_cast<void*>(0x082943D8);
void * const CMstNetLayer__GetCommunityNameStatus = reinterpret_cast<void*>(0x082987FC);
void * const CMstNetLayer__GetDigiDistInfo = reinterpret_cast<void*>(0x082988C8);
void * const CMstNetLayer__GetDigiDistModuleCipher = reinterpret_cast<void*>(0x08297D60);
void * const CMstNetLayer__GetKeyAuthDemand = reinterpret_cast<void*>(0x08297990);
void * const CMstNetLayer__GetKeyCollision = reinterpret_cast<void*>(0x08297B0C);
void * const CMstNetLayer__GetKeyRejectionReason = reinterpret_cast<void*>(0x082987AC);
void * const CMstNetLayer__GetKeyStatus = reinterpret_cast<void*>(0x08297C78);
void * const CMstNetLayer__GetMasterServerInternetName = reinterpret_cast<void*>(0x08297FDC);
void * const CMstNetLayer__GetMasterServerPort = reinterpret_cast<void*>(0x08298000);
void * const CMstNetLayer__GetNextBuddyEntry = reinterpret_cast<void*>(0x0829888C);
void * const CMstNetLayer__HandleAddBuddyResponse = reinterpret_cast<void*>(0x08297560);
void * const CMstNetLayer__HandleAuthorizationResponse = reinterpret_cast<void*>(0x08296F08);
void * const CMstNetLayer__HandleCommunityNameAuthResponse = reinterpret_cast<void*>(0x08297280);
void * const CMstNetLayer__HandleCreateAccountPartOne = reinterpret_cast<void*>(0x082973C4);
void * const CMstNetLayer__HandleCreateAccountPartTwo = reinterpret_cast<void*>(0x082974A8);
void * const CMstNetLayer__HandleDemandAuthorization = reinterpret_cast<void*>(0x0829688C);
void * const CMstNetLayer__HandleDemandHeartbeat = reinterpret_cast<void*>(0x08298544);
void * const CMstNetLayer__HandleDigiDistAuthResponse = reinterpret_cast<void*>(0x0829789C);
void * const CMstNetLayer__HandleGetAvailabilityResponse = reinterpret_cast<void*>(0x08298768);
void * const CMstNetLayer__HandleGetBuddyListResponse = reinterpret_cast<void*>(0x08297700);
void * const CMstNetLayer__HandleMasterServerToGameMessage = reinterpret_cast<void*>(0x082965A4);
void * const CMstNetLayer__HandleMOTDResponse = reinterpret_cast<void*>(0x0829866C);
void * const CMstNetLayer__HandleNotifyCollision = reinterpret_cast<void*>(0x08296C40);
void * const CMstNetLayer__HandleRemoveBuddyResponse = reinterpret_cast<void*>(0x08297630);
void * const CMstNetLayer__HandleSetAvailabilityResponse = reinterpret_cast<void*>(0x0829872C);
void * const CMstNetLayer__HandleStatusResponse = reinterpret_cast<void*>(0x082985C8);
void * const CMstNetLayer__HandleVersionResponse = reinterpret_cast<void*>(0x082986CC);
void * const CMstNetLayer__SendAddBuddyRequest = reinterpret_cast<void*>(0x08295AB8);
void * const CMstNetLayer__SendClientToMasterCreateAccountPartOne = reinterpret_cast<void*>(0x08295414);
void * const CMstNetLayer__SendClientToMasterCreateAccountPartTwo = reinterpret_cast<void*>(0x08295508);
void * const CMstNetLayer__SendClientToMasterMOTDRequest = reinterpret_cast<void*>(0x08298438);
void * const CMstNetLayer__SendClientToMasterVersionRequest = reinterpret_cast<void*>(0x082984BC);
void * const CMstNetLayer__SendDigiDistAuthRequest = reinterpret_cast<void*>(0x08295F54);
void * const CMstNetLayer__SendGameToMasterAuthorizationRequest__0 = reinterpret_cast<void*>(0x08294530);
void * const CMstNetLayer__SendGameToMasterAuthorizationRequest__1 = reinterpret_cast<void*>(0x08294E64);
void * const CMstNetLayer__SendGameToMasterCommunityNameAuth = reinterpret_cast<void*>(0x0829521C);
void * const CMstNetLayer__SendGameToMasterDisconnect__0 = reinterpret_cast<void*>(0x08294FD0);
void * const CMstNetLayer__SendGameToMasterDisconnect__1 = reinterpret_cast<void*>(0x0829515C);
void * const CMstNetLayer__SendGameToMasterHeartbeat = reinterpret_cast<void*>(0x08294F10);
void * const CMstNetLayer__SendGameToMasterModule = reinterpret_cast<void*>(0x08298394);
void * const CMstNetLayer__SendGameToMasterShutDown = reinterpret_cast<void*>(0x08298328);
void * const CMstNetLayer__SendGameToMasterStartup = reinterpret_cast<void*>(0x082982B0);
void * const CMstNetLayer__SendGameToMasterStatusRequest = reinterpret_cast<void*>(0x0829824C);
void * const CMstNetLayer__SendGetAvailabilityRequest = reinterpret_cast<void*>(0x08295E90);
void * const CMstNetLayer__SendGetBuddyListRequest = reinterpret_cast<void*>(0x08295CE8);
void * const CMstNetLayer__SendRemoveBuddyRequest = reinterpret_cast<void*>(0x08295BD0);
void * const CMstNetLayer__SendSetAvailabilityRequest = reinterpret_cast<void*>(0x08295DAC);
void * const CMstNetLayer__SetLanguage = reinterpret_cast<void*>(0x08294290);
void * const CMstNetLayer__StartHeartbeatTimer = reinterpret_cast<void*>(0x0829800C);
void * const CMstNetLayer__StartSystemUpdateTimer = reinterpret_cast<void*>(0x082980CC);
void * const CMstNetLayer__StartTimeOutTimer = reinterpret_cast<void*>(0x0829818C);
void * const CMstNetLayer__UpdateHeartbeatTimer = reinterpret_cast<void*>(0x08298030);
void * const CMstNetLayer__UpdateSystemUpdateTimer = reinterpret_cast<void*>(0x082980F0);
void * const CMstNetLayer__UpdateTimeOutTimer = reinterpret_cast<void*>(0x082981B0);

void * const CNetLayer__CNetLayerCtor = reinterpret_cast<void*>(0x082ACFF0);
void * const CNetLayer__CNetLayerDtor = reinterpret_cast<void*>(0x082AD038);
void * const CNetLayer__CleanUpEnumerateSpecific = reinterpret_cast<void*>(0x082AD3E0);
void * const CNetLayer__ClearSessionInfoChanged = reinterpret_cast<void*>(0x082AD5E0);
void * const CNetLayer__CloseStandardConnection = reinterpret_cast<void*>(0x082ADB5C);
void * const CNetLayer__DisconnectFromSession = reinterpret_cast<void*>(0x082AD43C);
void * const CNetLayer__DisconnectPlayer = reinterpret_cast<void*>(0x082AD478);
void * const CNetLayer__DropConnectionToServer = reinterpret_cast<void*>(0x082AD450);
void * const CNetLayer__EndConnectToSession = reinterpret_cast<void*>(0x082AD414);
void * const CNetLayer__EndEnumerateSessions = reinterpret_cast<void*>(0x082AD3CC);
void * const CNetLayer__EndInternetAddressTranslation = reinterpret_cast<void*>(0x082AD774);
void * const CNetLayer__EndPing = reinterpret_cast<void*>(0x082AD538);
void * const CNetLayer__EndProtocol = reinterpret_cast<void*>(0x082AD130);
void * const CNetLayer__EndServerMode = reinterpret_cast<void*>(0x082AD37C);
void * const CNetLayer__EnumerateSessionsList = reinterpret_cast<void*>(0x082AD7DC);
void * const CNetLayer__GetAnySessionsEnumerated = reinterpret_cast<void*>(0x082AD7F8);
void * const CNetLayer__GetAnyWindowBehind = reinterpret_cast<void*>(0x082ADA64);
void * const CNetLayer__GetClientConnected = reinterpret_cast<void*>(0x082AD79C);
void * const CNetLayer__GetConnectionError = reinterpret_cast<void*>(0x082AD428);
void * const CNetLayer__GetConnectionsMustBeValidated = reinterpret_cast<void*>(0x082ADBAC);
void * const CNetLayer__GetDisconnectStrref = reinterpret_cast<void*>(0x082AD498);
void * const CNetLayer__GetExoApp = reinterpret_cast<void*>(0x082AD094);
void * const CNetLayer__GetExoNet = reinterpret_cast<void*>(0x082AD8B4);
void * const CNetLayer__GetExpansionPackReqd = reinterpret_cast<void*>(0x082ADA2C);
void * const CNetLayer__GetGameMasterPassword = reinterpret_cast<void*>(0x082AD264);
void * const CNetLayer__GetGameMasterPermision = reinterpret_cast<void*>(0x082AD87C);
void * const CNetLayer__GetInternetAddressTranslationStatus = reinterpret_cast<void*>(0x082AD760);
void * const CNetLayer__GetIPBySessionId = reinterpret_cast<void*>(0x082ADB78);
void * const CNetLayer__GetLocalAdapterString = reinterpret_cast<void*>(0x082AD4D0);
void * const CNetLayer__GetLocalPrivileges = reinterpret_cast<void*>(0x082AD820);
void * const CNetLayer__GetMessageFromStandardConnection = reinterpret_cast<void*>(0x082ADB14);
void * const CNetLayer__GetNumberLocalAdapters = reinterpret_cast<void*>(0x082AD4BC);
void * const CNetLayer__GetPasswordRequired = reinterpret_cast<void*>(0x082AD1C4);
void * const CNetLayer__GetPlayerAddress = reinterpret_cast<void*>(0x082AD858);
void * const CNetLayer__GetPlayerAddressData = reinterpret_cast<void*>(0x082AD54C);
void * const CNetLayer__GetPlayerInfo = reinterpret_cast<void*>(0x082AD834);
void * const CNetLayer__GetPlayerPassword = reinterpret_cast<void*>(0x082AD1D8);
void * const CNetLayer__GetPortBySessionId = reinterpret_cast<void*>(0x082AD6B8);
void * const CNetLayer__GetSendUDPSocket = reinterpret_cast<void*>(0x082AD92C);
void * const CNetLayer__GetServerAdminPassword = reinterpret_cast<void*>(0x082AD2F0);
void * const CNetLayer__GetServerConnected = reinterpret_cast<void*>(0x082AD7C8);
void * const CNetLayer__GetServerNetworkAddress = reinterpret_cast<void*>(0x082AD8CC);
void * const CNetLayer__GetSessionInfo = reinterpret_cast<void*>(0x082AD6CC);
void * const CNetLayer__GetSessionInfoChanged = reinterpret_cast<void*>(0x082AD5C8);
void * const CNetLayer__GetSessionMaxPlayers = reinterpret_cast<void*>(0x082AD5F4);
void * const CNetLayer__GetSessionName = reinterpret_cast<void*>(0x082AD61C);
void * const CNetLayer__GetUDPRecievePort = reinterpret_cast<void*>(0x082AD6A4);
void * const CNetLayer__Initialize = reinterpret_cast<void*>(0x082AD080);
void * const CNetLayer__IsConnectedToLocalhost = reinterpret_cast<void*>(0x082AD464);
void * const CNetLayer__MessageArrived = reinterpret_cast<void*>(0x082AD0D0);
void * const CNetLayer__OpenStandardConnection = reinterpret_cast<void*>(0x082ADA7C);
void * const CNetLayer__PlayerIdToConnectionId = reinterpret_cast<void*>(0x082ADA48);
void * const CNetLayer__ProcessReceivedFrames = reinterpret_cast<void*>(0x082AD0A8);
void * const CNetLayer__RequestExtendedServerInfo = reinterpret_cast<void*>(0x082AD4F8);
void * const CNetLayer__RequestServerDetails = reinterpret_cast<void*>(0x082AD510);
void * const CNetLayer__SendMessageToAddress = reinterpret_cast<void*>(0x082AD100);
void * const CNetLayer__SendMessageToPlayer = reinterpret_cast<void*>(0x082AD0E8);
void * const CNetLayer__SendMessageToStandardConnection = reinterpret_cast<void*>(0x082ADB38);
void * const CNetLayer__SetConnectionsDisallowed = reinterpret_cast<void*>(0x082ADB94);
void * const CNetLayer__SetConnectionsMustBeValidated = reinterpret_cast<void*>(0x082ADBC4);
void * const CNetLayer__SetDisconnectStrref = reinterpret_cast<void*>(0x082AD4A8);
void * const CNetLayer__SetExpansionPackReqd = reinterpret_cast<void*>(0x082ADA14);
void * const CNetLayer__SetGameMasterPassword = reinterpret_cast<void*>(0x082AD288);
void * const CNetLayer__SetMasterServerInternetAddress = reinterpret_cast<void*>(0x082AD908);
void * const CNetLayer__SetMstServerPassword = reinterpret_cast<void*>(0x082AD970);
void * const CNetLayer__SetPlayerPassword = reinterpret_cast<void*>(0x082AD1FC);
void * const CNetLayer__SetServerAdminPassword = reinterpret_cast<void*>(0x082AD314);
void * const CNetLayer__SetServerLanguage = reinterpret_cast<void*>(0x082AD144);
void * const CNetLayer__SetSessionInfoChanged = reinterpret_cast<void*>(0x082AD580);
void * const CNetLayer__SetSessionMaxPlayers = reinterpret_cast<void*>(0x082AD608);
void * const CNetLayer__SetSessionName = reinterpret_cast<void*>(0x082AD640);
void * const CNetLayer__SetUpPlayBackConnection = reinterpret_cast<void*>(0x082AD6E0);
void * const CNetLayer__ShutDown = reinterpret_cast<void*>(0x082AD0BC);
void * const CNetLayer__ShutDownClientInterfaceWithReason = reinterpret_cast<void*>(0x082AD94C);
void * const CNetLayer__StartConnectToSession = reinterpret_cast<void*>(0x082AD3F4);
void * const CNetLayer__StartEnumerateSessions = reinterpret_cast<void*>(0x082AD390);
void * const CNetLayer__StartInternetAddressTranslation = reinterpret_cast<void*>(0x082AD6F4);
void * const CNetLayer__StartPing = reinterpret_cast<void*>(0x082AD524);
void * const CNetLayer__StartProtocol = reinterpret_cast<void*>(0x082AD118);
void * const CNetLayer__StartServerMode = reinterpret_cast<void*>(0x082AD158);
void * const CNetLayer__StoreMessage = reinterpret_cast<void*>(0x082AD56C);
void * const CNetLayer__TranslateAddressFromString = reinterpret_cast<void*>(0x082AD894);
void * const CNetLayer__UpdateStatusLoop = reinterpret_cast<void*>(0x082AD788);

void * const CNetLayerInternal__CNetLayerInternalCtor = reinterpret_cast<void*>(0x0829FC80);
void * const CNetLayerInternal__CNetLayerInternalDtor = reinterpret_cast<void*>(0x082A00AC);
void * const CNetLayerInternal__BroadcastMessageToAddress = reinterpret_cast<void*>(0x082AB924);
void * const CNetLayerInternal__CheckMasterServerTimeouts = reinterpret_cast<void*>(0x082AAB20);
void * const CNetLayerInternal__CleanUpEnumerateSpecific = reinterpret_cast<void*>(0x082ABFFC);
void * const CNetLayerInternal__ClearSessionInfoChanged = reinterpret_cast<void*>(0x082AC070);
void * const CNetLayerInternal__CloseStandardConnection = reinterpret_cast<void*>(0x082ACA44);
void * const CNetLayerInternal__ConnectionIdToSlidingWindow = reinterpret_cast<void*>(0x082AB95C);
void * const CNetLayerInternal__ConnectToSessionLoop = reinterpret_cast<void*>(0x082AC3A0);
void * const CNetLayerInternal__CRCBlock = reinterpret_cast<void*>(0x082AC810);
void * const CNetLayerInternal__CRCBuildTable = reinterpret_cast<void*>(0x082AC7D0);
void * const CNetLayerInternal__CRCEncodeFrame = reinterpret_cast<void*>(0x082AC848);
void * const CNetLayerInternal__CRCVerifyFrame = reinterpret_cast<void*>(0x082AC8A8);
void * const CNetLayerInternal__DisconnectFromSession = reinterpret_cast<void*>(0x082AC418);
void * const CNetLayerInternal__DisconnectPlayer = reinterpret_cast<void*>(0x082A9F68);
void * const CNetLayerInternal__DropConnectionToServer = reinterpret_cast<void*>(0x082AC468);
void * const CNetLayerInternal__EndConnectToSession = reinterpret_cast<void*>(0x082AC300);
void * const CNetLayerInternal__EndEnumerateSessions = reinterpret_cast<void*>(0x082ABF74);
void * const CNetLayerInternal__EndInternetAddressTranslation = reinterpret_cast<void*>(0x082AC678);
void * const CNetLayerInternal__EndPing = reinterpret_cast<void*>(0x082A968C);
void * const CNetLayerInternal__EndProtocol = reinterpret_cast<void*>(0x082ABB1C);
void * const CNetLayerInternal__EndServerMode = reinterpret_cast<void*>(0x082ABF04);
void * const CNetLayerInternal__EnumerateSessionsList = reinterpret_cast<void*>(0x082A7780);
void * const CNetLayerInternal__EnumerateSessionsLoop = reinterpret_cast<void*>(0x082A75F4);
void * const CNetLayerInternal__FindPlayerName = reinterpret_cast<void*>(0x082AA80C);
void * const CNetLayerInternal__GetConnectionError = reinterpret_cast<void*>(0x082AC360);
void * const CNetLayerInternal__GetExoApp = reinterpret_cast<void*>(0x082AB800);
void * const CNetLayerInternal__GetGameMasterPassword = reinterpret_cast<void*>(0x082ABD6C);
void * const CNetLayerInternal__GetInternetAddressTranslationStatus = reinterpret_cast<void*>(0x082AC5BC);
void * const CNetLayerInternal__GetIPBySessionId = reinterpret_cast<void*>(0x082ACA5C);
void * const CNetLayerInternal__GetLocalAdapterString = reinterpret_cast<void*>(0x082ABB60);
void * const CNetLayerInternal__GetLocalPrivileges = reinterpret_cast<void*>(0x082ABF2C);
void * const CNetLayerInternal__GetMessageFromStandardConnection = reinterpret_cast<void*>(0x082ACA14);
void * const CNetLayerInternal__GetNumberLocalAdapters = reinterpret_cast<void*>(0x082ABB48);
void * const CNetLayerInternal__GetPasswordRequired = reinterpret_cast<void*>(0x082ABC78);
void * const CNetLayerInternal__GetPlayerAddress = reinterpret_cast<void*>(0x082AC4D4);
void * const CNetLayerInternal__GetPlayerAddressData = reinterpret_cast<void*>(0x082AC0CC);
void * const CNetLayerInternal__GetPlayerPassword = reinterpret_cast<void*>(0x082ABCA0);
void * const CNetLayerInternal__GetPortBySessionId = reinterpret_cast<void*>(0x082A98E8);
void * const CNetLayerInternal__GetSendUDPSocket = reinterpret_cast<void*>(0x082AC798);
void * const CNetLayerInternal__GetServerAdminPassword = reinterpret_cast<void*>(0x082ABE38);
void * const CNetLayerInternal__GetServerConnected = reinterpret_cast<void*>(0x082AC6D0);
void * const CNetLayerInternal__GetServerNetworkAddress = reinterpret_cast<void*>(0x082AA620);
void * const CNetLayerInternal__GetServerPlayerCount = reinterpret_cast<void*>(0x082AC704);
void * const CNetLayerInternal__GetSessionInfo = reinterpret_cast<void*>(0x082AC2CC);
void * const CNetLayerInternal__GetSessionMaxPlayers = reinterpret_cast<void*>(0x082AC204);
void * const CNetLayerInternal__GetSessionName = reinterpret_cast<void*>(0x082AC230);
void * const CNetLayerInternal__GetUDPRecievePort = reinterpret_cast<void*>(0x082AC2B0);
void * const CNetLayerInternal__GetWindowSendIdByReceiveId = reinterpret_cast<void*>(0x082AC738);
void * const CNetLayerInternal__HandleBNCRMessage = reinterpret_cast<void*>(0x082A36F4);
void * const CNetLayerInternal__HandleBNCSMessage = reinterpret_cast<void*>(0x082A1E38);
void * const CNetLayerInternal__HandleBNDMMessage = reinterpret_cast<void*>(0x082ABA30);
void * const CNetLayerInternal__HandleBNDPMessage = reinterpret_cast<void*>(0x082A6FA0);
void * const CNetLayerInternal__HandleBNDRMessage = reinterpret_cast<void*>(0x082A8A70);
void * const CNetLayerInternal__HandleBNDSMessage = reinterpret_cast<void*>(0x082A85B4);
void * const CNetLayerInternal__HandleBNERMessage = reinterpret_cast<void*>(0x082A696C);
void * const CNetLayerInternal__HandleBNESMessage = reinterpret_cast<void*>(0x082A18F4);
void * const CNetLayerInternal__HandleBNLMMessage = reinterpret_cast<void*>(0x082A936C);
void * const CNetLayerInternal__HandleBNLRMessage = reinterpret_cast<void*>(0x082A94C4);
void * const CNetLayerInternal__HandleBNVRMessage = reinterpret_cast<void*>(0x082A67DC);
void * const CNetLayerInternal__HandleBNVSMessage = reinterpret_cast<void*>(0x082A4A54);
void * const CNetLayerInternal__HandleBNXIMessage = reinterpret_cast<void*>(0x082A7B38);
void * const CNetLayerInternal__HandleBNXRMessage = reinterpret_cast<void*>(0x082A7F44);
void * const CNetLayerInternal__Initialize = reinterpret_cast<void*>(0x082A0258);
void * const CNetLayerInternal__IsConnectedToLocalhost = reinterpret_cast<void*>(0x082A9C48);
void * const CNetLayerInternal__IsPlayerIpSameAsConnection = reinterpret_cast<void*>(0x082AA920);
void * const CNetLayerInternal__MessageArrived = reinterpret_cast<void*>(0x082AB8D0);
void * const CNetLayerInternal__NonWindowMessages = reinterpret_cast<void*>(0x082A7098);
void * const CNetLayerInternal__OpenStandardConnection = reinterpret_cast<void*>(0x082AC9A4);
void * const CNetLayerInternal__PacketizeSendMessageToPlayer = reinterpret_cast<void*>(0x082A0D94);
void * const CNetLayerInternal__PacketizeSmallMessageToPlayer = reinterpret_cast<void*>(0x082A1338);
void * const CNetLayerInternal__PlacePacketInSendQueues = reinterpret_cast<void*>(0x082A112C);
void * const CNetLayerInternal__PlayerIdToConnectionId = reinterpret_cast<void*>(0x082AB9E4);
void * const CNetLayerInternal__PlayerIdToSlidingWindow = reinterpret_cast<void*>(0x082AB9A0);
void * const CNetLayerInternal__ProcessReceivedFrames = reinterpret_cast<void*>(0x082A0640);
void * const CNetLayerInternal__PurgeConnections = reinterpret_cast<void*>(0x082A1700);
void * const CNetLayerInternal__RequestExtendedServerInfo = reinterpret_cast<void*>(0x082A9020);
void * const CNetLayerInternal__SendBNCRMessage = reinterpret_cast<void*>(0x082A3208);
void * const CNetLayerInternal__SendBNCSMessage = reinterpret_cast<void*>(0x082A1BD8);
void * const CNetLayerInternal__SendBNDMMessage = reinterpret_cast<void*>(0x082AC540);
void * const CNetLayerInternal__SendBNDPMessage = reinterpret_cast<void*>(0x082AA1F4);
void * const CNetLayerInternal__SendBNDSMessage = reinterpret_cast<void*>(0x082A981C);
void * const CNetLayerInternal__SendBNLMMessage = reinterpret_cast<void*>(0x082A925C);
void * const CNetLayerInternal__SendBNVRMessage = reinterpret_cast<void*>(0x082A673C);
void * const CNetLayerInternal__SendBNVSMessage = reinterpret_cast<void*>(0x082A4818);
void * const CNetLayerInternal__SendDirectMessage = reinterpret_cast<void*>(0x082AC924);
void * const CNetLayerInternal__SendMessageToAddress = reinterpret_cast<void*>(0x082AB8F4);
void * const CNetLayerInternal__SendMessageToPlayer = reinterpret_cast<void*>(0x082A0B04);
void * const CNetLayerInternal__SendMessageToStandardConnection = reinterpret_cast<void*>(0x082ACA2C);
void * const CNetLayerInternal__SetGameMasterPassword = reinterpret_cast<void*>(0x082ABDAC);
void * const CNetLayerInternal__SetMasterServerInternetAddress = reinterpret_cast<void*>(0x082AC780);
void * const CNetLayerInternal__SetNetworkAddressData = reinterpret_cast<void*>(0x082AC178);
void * const CNetLayerInternal__SetPlayerConnected = reinterpret_cast<void*>(0x082A9D88);
void * const CNetLayerInternal__SetPlayerPassword = reinterpret_cast<void*>(0x082ABCE0);
void * const CNetLayerInternal__SetServerAdminPassword = reinterpret_cast<void*>(0x082ABE78);
void * const CNetLayerInternal__SetServerLanguage = reinterpret_cast<void*>(0x082ABB34);
void * const CNetLayerInternal__SetSessionMaxPlayers = reinterpret_cast<void*>(0x082AC214);
void * const CNetLayerInternal__SetSessionName = reinterpret_cast<void*>(0x082AC258);
void * const CNetLayerInternal__SetSlidingWindow = reinterpret_cast<void*>(0x082A177C);
void * const CNetLayerInternal__SetUpPlayBackConnection = reinterpret_cast<void*>(0x082AB80C);
void * const CNetLayerInternal__ShutDown = reinterpret_cast<void*>(0x082AB82C);
void * const CNetLayerInternal__ShutDownClientInterfaceWithReason = reinterpret_cast<void*>(0x082AC7B0);
void * const CNetLayerInternal__StartConnectToSession = reinterpret_cast<void*>(0x082A99E0);
void * const CNetLayerInternal__StartEnumerateSessions = reinterpret_cast<void*>(0x082A7314);
void * const CNetLayerInternal__StartInternetAddressTranslation = reinterpret_cast<void*>(0x082AA27C);
void * const CNetLayerInternal__StartPing = reinterpret_cast<void*>(0x082A912C);
void * const CNetLayerInternal__StartProtocol = reinterpret_cast<void*>(0x082ABAAC);
void * const CNetLayerInternal__StartServerMode = reinterpret_cast<void*>(0x082ABB88);
void * const CNetLayerInternal__StoreMessage = reinterpret_cast<void*>(0x082AC1E4);
void * const CNetLayerInternal__UncompressMessage = reinterpret_cast<void*>(0x082A0844);
void * const CNetLayerInternal__UpdateStatusLoop = reinterpret_cast<void*>(0x082AA398);
void * const CNetLayerInternal__ValidatePlayerAgainstLastSuccessfulLogin = reinterpret_cast<void*>(0x082AAF0C);

void * const CNetLayerPlayerInfo__CNetLayerPlayerInfoCtor = reinterpret_cast<void*>(0x0829FA54);
void * const CNetLayerPlayerInfo__AddCDKey = reinterpret_cast<void*>(0x0829FB8C);
void * const CNetLayerPlayerInfo__AllKeysAuthed = reinterpret_cast<void*>(0x082AB744);
void * const CNetLayerPlayerInfo__Initialize = reinterpret_cast<void*>(0x082AB5B0);
void * const CNetLayerPlayerInfo__SetCDKey = reinterpret_cast<void*>(0x082AB7AC);
void * const CNetLayerPlayerInfo__StartMstTimer = reinterpret_cast<void*>(0x082AB684);
void * const CNetLayerPlayerInfo__UpdateMstTimer = reinterpret_cast<void*>(0x082AB6A8);

void * const CNetLayerSessionInfo__CNetLayerSessionInfoCtor = reinterpret_cast<void*>(0x0829F608);
void * const CNetLayerSessionInfo__CNetLayerSessionInfoDtor = reinterpret_cast<void*>(0x0829F818);

void * const CNetLayerWindow__CNetLayerWindowCtor = reinterpret_cast<void*>(0x0829E29C);
void * const CNetLayerWindow__CNetLayerWindowDtor = reinterpret_cast<void*>(0x082AB140);
void * const CNetLayerWindow__AddToHighOutgoingQueue = reinterpret_cast<void*>(0x082AB1B8);
void * const CNetLayerWindow__AddToLowOutgoingQueue = reinterpret_cast<void*>(0x082AB228);
void * const CNetLayerWindow__CutOutgoingBufferSize = reinterpret_cast<void*>(0x0829F4CC);
void * const CNetLayerWindow__DoubleOutgoingBufferSize = reinterpret_cast<void*>(0x082AB594);
void * const CNetLayerWindow__FauxNagle = reinterpret_cast<void*>(0x0829F068);
void * const CNetLayerWindow__FrameNumberBetween = reinterpret_cast<void*>(0x082AB308);
void * const CNetLayerWindow__FrameReceive = reinterpret_cast<void*>(0x0829EA4C);
void * const CNetLayerWindow__FrameSend = reinterpret_cast<void*>(0x0829E8BC);
void * const CNetLayerWindow__FrameTimeout = reinterpret_cast<void*>(0x0829EE40);
void * const CNetLayerWindow__Initialize = reinterpret_cast<void*>(0x0829E390);
void * const CNetLayerWindow__InitializeCompressionBuffers = reinterpret_cast<void*>(0x0829E6AC);
void * const CNetLayerWindow__LoadWindowWithFrames = reinterpret_cast<void*>(0x0829E7B0);
void * const CNetLayerWindow__PlaceFrameInOutgoingBuffers = reinterpret_cast<void*>(0x082AB2B4);
void * const CNetLayerWindow__SetAckTimer = reinterpret_cast<void*>(0x082AB3D4);
void * const CNetLayerWindow__SetFauxNagleTimer = reinterpret_cast<void*>(0x082AB430);
void * const CNetLayerWindow__SetInFrameTimer = reinterpret_cast<void*>(0x082AB338);
void * const CNetLayerWindow__SetOutFrameTimer = reinterpret_cast<void*>(0x082AB4F4);
void * const CNetLayerWindow__ShutDown = reinterpret_cast<void*>(0x0829E4CC);
void * const CNetLayerWindow__TestAckTimer = reinterpret_cast<void*>(0x082AB410);
void * const CNetLayerWindow__TestFauxNagleTimer = reinterpret_cast<void*>(0x082AB46C);
void * const CNetLayerWindow__TestInFrameTimer = reinterpret_cast<void*>(0x082AB394);
void * const CNetLayerWindow__TestOutFrameTimer = reinterpret_cast<void*>(0x082AB550);
void * const CNetLayerWindow__UnpacketizeFullMessages = reinterpret_cast<void*>(0x0829F0F0);

void * const CNetworkProfiler__CNetworkProfilerCtor = reinterpret_cast<void*>(0x082C6FF8);
void * const CNetworkProfiler__CNetworkProfilerDtor = reinterpret_cast<void*>(0x082C70E8);
void * const CNetworkProfiler__AddMessageToFrameProfile = reinterpret_cast<void*>(0x082C6C3C);
void * const CNetworkProfiler__AddMessageToProfile = reinterpret_cast<void*>(0x082C6A54);
void * const CNetworkProfiler__GetFrameLastTime = reinterpret_cast<void*>(0x082C7210);
void * const CNetworkProfiler__GetFrameStartTime = reinterpret_cast<void*>(0x082C71C8);
void * const CNetworkProfiler__GetLastTime = reinterpret_cast<void*>(0x082C71EC);
void * const CNetworkProfiler__GetStartTime = reinterpret_cast<void*>(0x082C71A4);
void * const CNetworkProfiler__OutputReport = reinterpret_cast<void*>(0x082C6748);
void * const CNetworkProfiler__SetOutputFilename = reinterpret_cast<void*>(0x082C715C);
void * const CNetworkProfiler__SetState = reinterpret_cast<void*>(0x082C6538);

void * const CNWArea__CNWAreaCtor = reinterpret_cast<void*>(0x080BB3B4);
void * const CNWArea__CNWAreaDtor = reinterpret_cast<void*>(0x080BB4F8);
void * const CNWArea__AddStaticBoundingBox = reinterpret_cast<void*>(0x080BCB98);
void * const CNWArea__AddStaticObject = reinterpret_cast<void*>(0x080BB5D4);
void * const CNWArea__GetFlags = reinterpret_cast<void*>(0x080BD088);
void * const CNWArea__GetFog = reinterpret_cast<void*>(0x080BCF20);
void * const CNWArea__GetFogClipDistance = reinterpret_cast<void*>(0x080BD0DC);
void * const CNWArea__GetHeight = reinterpret_cast<void*>(0x080BD0A0);
void * const CNWArea__GetIsIDInExcludeList = reinterpret_cast<void*>(0x080BD0B4);
void * const CNWArea__GetIsNight = reinterpret_cast<void*>(0x080BCF44);
void * const CNWArea__GetMoonFogAmount = reinterpret_cast<void*>(0x080BD16C);
void * const CNWArea__GetMoonFogColor = reinterpret_cast<void*>(0x080BD154);
void * const CNWArea__GetNoRestingAllowed = reinterpret_cast<void*>(0x080BD0BC);
void * const CNWArea__GetShadowOpacity = reinterpret_cast<void*>(0x080BD0CC);
void * const CNWArea__GetSkyBox = reinterpret_cast<void*>(0x080BD110);
void * const CNWArea__GetSunFogAmount = reinterpret_cast<void*>(0x080BD188);
void * const CNWArea__GetSunFogColor = reinterpret_cast<void*>(0x080BD160);
void * const CNWArea__GetUseDayNightCycle = reinterpret_cast<void*>(0x080BD0EC);
void * const CNWArea__GetWidth = reinterpret_cast<void*>(0x080BD094);
void * const CNWArea__GrowStaticObjectArray = reinterpret_cast<void*>(0x080BB768);
void * const CNWArea__GrowStaticObjectTriangles = reinterpret_cast<void*>(0x080BCDE0);
void * const CNWArea__GrowStaticObjectVertices = reinterpret_cast<void*>(0x080BB8AC);
void * const CNWArea__HandleTransparentDoors = reinterpret_cast<void*>(0x080BD0AC);
void * const CNWArea__InitializeStaticObjects = reinterpret_cast<void*>(0x080BCE68);
void * const CNWArea__IntersectLineSegments = reinterpret_cast<void*>(0x080BB970);
void * const CNWArea__NoCreaturesOnLine = reinterpret_cast<void*>(0x080BD07C);
void * const CNWArea__NoNonWalkPolys = reinterpret_cast<void*>(0x080BCEE8);
void * const CNWArea__NoNonWalkPolysDetailed = reinterpret_cast<void*>(0x080BBE60);
void * const CNWArea__NoNonWalkPolysInDoors = reinterpret_cast<void*>(0x080BC6A8);
void * const CNWArea__RemoveStaticBoundingBox = reinterpret_cast<void*>(0x080BCFAC);
void * const CNWArea__RemoveStaticObject = reinterpret_cast<void*>(0x080BCA58);
void * const CNWArea__ReplaceStaticObject = reinterpret_cast<void*>(0x080BCCE0);
void * const CNWArea__SetFog = reinterpret_cast<void*>(0x080BCF54);
void * const CNWArea__SetIsNight = reinterpret_cast<void*>(0x080BCF7C);
void * const CNWArea__SetMoonFogAmount = reinterpret_cast<void*>(0x080BD178);
void * const CNWArea__SetMoonFogColor = reinterpret_cast<void*>(0x080BD134);
void * const CNWArea__SetSkyBox = reinterpret_cast<void*>(0x080BD120);
void * const CNWArea__SetSunFogAmount = reinterpret_cast<void*>(0x080BD198);
void * const CNWArea__SetSunFogColor = reinterpret_cast<void*>(0x080BD144);
void * const CNWArea__SetUseDayNightCycle = reinterpret_cast<void*>(0x080BD0FC);
void * const CNWArea__SetWind = reinterpret_cast<void*>(0x080BCF94);

void * const CNWBaseItem__CNWBaseItemCtor = reinterpret_cast<void*>(0x080C175C);
void * const CNWBaseItem__CNWBaseItemDtor = reinterpret_cast<void*>(0x080C17D8);
void * const CNWBaseItem__GetIconResRef = reinterpret_cast<void*>(0x080C1814);
void * const CNWBaseItem__GetModelResRef = reinterpret_cast<void*>(0x080C1954);
void * const CNWBaseItem__GetNameText = reinterpret_cast<void*>(0x080BFB34);
void * const CNWBaseItem__GetRequiredFeat = reinterpret_cast<void*>(0x080C192C);
void * const CNWBaseItem__SetRequiredFeat = reinterpret_cast<void*>(0x080C1904);
void * const CNWBaseItem__SetRequiredFeatCount = reinterpret_cast<void*>(0x080C18A8);

void * const CNWBaseItemArray__CNWBaseItemArrayCtor = reinterpret_cast<void*>(0x080C19E8);
void * const CNWBaseItemArray__CNWBaseItemArrayDtor = reinterpret_cast<void*>(0x080C1A00);
void * const CNWBaseItemArray__GetBaseItem = reinterpret_cast<void*>(0x080C1A80);
void * const CNWBaseItemArray__Load = reinterpret_cast<void*>(0x080BFBE4);

void * const CNWCCMessageData__CNWCCMessageDataCtor = reinterpret_cast<void*>(0x080C1B6C);
void * const CNWCCMessageData__CNWCCMessageDataDtor = reinterpret_cast<void*>(0x080C2F88);
void * const CNWCCMessageData__ClearData = reinterpret_cast<void*>(0x080C31FC);
void * const CNWCCMessageData__CopyTo = reinterpret_cast<void*>(0x080C212C);
void * const CNWCCMessageData__GetFloat = reinterpret_cast<void*>(0x080C3054);
void * const CNWCCMessageData__GetInteger = reinterpret_cast<void*>(0x080C2FE8);
void * const CNWCCMessageData__GetObjectID = reinterpret_cast<void*>(0x080C30C0);
void * const CNWCCMessageData__GetString = reinterpret_cast<void*>(0x080C3130);
void * const CNWCCMessageData__LoadData = reinterpret_cast<void*>(0x080C1DD8);
void * const CNWCCMessageData__SaveData = reinterpret_cast<void*>(0x080C1C14);
void * const CNWCCMessageData__SetFloat = reinterpret_cast<void*>(0x080C3080);
void * const CNWCCMessageData__SetInteger = reinterpret_cast<void*>(0x080C3014);
void * const CNWCCMessageData__SetObjectID = reinterpret_cast<void*>(0x080C30F0);
void * const CNWCCMessageData__SetString = reinterpret_cast<void*>(0x080C3178);

void * const CNWClass__CNWClassCtor = reinterpret_cast<void*>(0x080BD26C);
void * const CNWClass__CNWClassDtor = reinterpret_cast<void*>(0x080BD3FC);
void * const CNWClass__GetAttackBonus = reinterpret_cast<void*>(0x080BF260);
void * const CNWClass__GetBonusFeats = reinterpret_cast<void*>(0x080BF280);
void * const CNWClass__GetClassFeat = reinterpret_cast<void*>(0x080BF4B0);
void * const CNWClass__GetDescriptionText = reinterpret_cast<void*>(0x080BEE98);
void * const CNWClass__GetFortSaveBonus = reinterpret_cast<void*>(0x080BF2A4);
void * const CNWClass__GetIsAlignmentAllowed = reinterpret_cast<void*>(0x080BF164);
void * const CNWClass__GetLevelFeatGranted = reinterpret_cast<void*>(0x080BF4D4);
void * const CNWClass__GetLevelGranted = reinterpret_cast<void*>(0x080BF640);
void * const CNWClass__GetNameLowerText = reinterpret_cast<void*>(0x080BEFFC);
void * const CNWClass__GetNamePluralText = reinterpret_cast<void*>(0x080BF0B0);
void * const CNWClass__GetNameText = reinterpret_cast<void*>(0x080BEF4C);
void * const CNWClass__GetRefSaveBonus = reinterpret_cast<void*>(0x080BF2C4);
void * const CNWClass__GetSpellGain = reinterpret_cast<void*>(0x080BF30C);
void * const CNWClass__GetSpellsKnownPerLevel = reinterpret_cast<void*>(0x080BF344);
void * const CNWClass__GetWillSaveBonus = reinterpret_cast<void*>(0x080BF2E8);
void * const CNWClass__IsBonusFeat = reinterpret_cast<void*>(0x080BF524);
void * const CNWClass__IsFeatUseable = reinterpret_cast<void*>(0x080BF688);
void * const CNWClass__IsGrantedFeat = reinterpret_cast<void*>(0x080BF5E0);
void * const CNWClass__IsNormalFeat = reinterpret_cast<void*>(0x080BF570);
void * const CNWClass__IsSkillClassSkill = reinterpret_cast<void*>(0x080BF3E4);
void * const CNWClass__IsSkillUseable = reinterpret_cast<void*>(0x080BF440);
void * const CNWClass__LoadAttackBonusTable = reinterpret_cast<void*>(0x080BD504);
void * const CNWClass__LoadBonusFeatsTable = reinterpret_cast<void*>(0x080BE4C0);
void * const CNWClass__LoadFeatsTable = reinterpret_cast<void*>(0x080BD7EC);
void * const CNWClass__LoadSavingThrowTable = reinterpret_cast<void*>(0x080BDDEC);
void * const CNWClass__LoadSkillsTable = reinterpret_cast<void*>(0x080BE158);
void * const CNWClass__LoadSpellGainTable = reinterpret_cast<void*>(0x080BE73C);
void * const CNWClass__LoadSpellKnownTable = reinterpret_cast<void*>(0x080BEB1C);

void * const CNWCreatureStatsUpdate__CNWCreatureStatsUpdateCtor = reinterpret_cast<void*>(0x0809452C);
void * const CNWCreatureStatsUpdate__CNWCreatureStatsUpdateDtor = reinterpret_cast<void*>(0x080946D0);
void * const CNWCreatureStatsUpdate__ClearEffectIcons = reinterpret_cast<void*>(0x08094764);
void * const CNWCreatureStatsUpdate__SetCombatInformation = reinterpret_cast<void*>(0x080947C8);

void * const CNWDomain__CNWDomainCtor = reinterpret_cast<void*>(0x08236F1C);
void * const CNWDomain__CNWDomainDtor = reinterpret_cast<void*>(0x08236F70);
void * const CNWDomain__GetDescriptionText = reinterpret_cast<void*>(0x08236DB8);
void * const CNWDomain__GetNameText = reinterpret_cast<void*>(0x08236E6C);

void * const CNWDoorSurfaceMesh__CNWDoorSurfaceMeshCtor = reinterpret_cast<void*>(0x08236F8C);
void * const CNWDoorSurfaceMesh__CNWDoorSurfaceMeshDtor = reinterpret_cast<void*>(0x08238A28);
void * const CNWDoorSurfaceMesh__GetMeshBoundingBox = reinterpret_cast<void*>(0x08238854);
void * const CNWDoorSurfaceMesh__GetOpenLocation = reinterpret_cast<void*>(0x08238CC8);
void * const CNWDoorSurfaceMesh__IntersectLineSegments = reinterpret_cast<void*>(0x08238390);
void * const CNWDoorSurfaceMesh__LoadWalkMesh = reinterpret_cast<void*>(0x0823701C);
void * const CNWDoorSurfaceMesh__LoadWalkMeshString = reinterpret_cast<void*>(0x08238ACC);
void * const CNWDoorSurfaceMesh__NoNonWalkPolysOnSurfaceMesh = reinterpret_cast<void*>(0x08237AA4);

void * const CNWFeat__CNWFeatCtor = reinterpret_cast<void*>(0x08238DF8);
void * const CNWFeat__CNWFeatDtor = reinterpret_cast<void*>(0x08239028);
void * const CNWFeat__GetDescriptionText = reinterpret_cast<void*>(0x08238EC4);
void * const CNWFeat__GetNameText = reinterpret_cast<void*>(0x08238F78);

void * const CNWItem__CNWItemCtor = reinterpret_cast<void*>(0x080C1AA8);
void * const CNWItem__CNWItemDtor = reinterpret_cast<void*>(0x080C1ACC);
void * const CNWItem__GetBaseItemID = reinterpret_cast<void*>(0x080C1B1C);
void * const CNWItem__GetLayeredTextureColor = reinterpret_cast<void*>(0x080C1B28);
void * const CNWItem__SetBaseItemID = reinterpret_cast<void*>(0x080C1B44);
void * const CNWItem__SetLayeredTextureColor = reinterpret_cast<void*>(0x080C1B54);

void * const CNWLevelStats__CNWLevelStatsCtor = reinterpret_cast<void*>(0x080BF6F0);
void * const CNWLevelStats__CNWLevelStatsDtor = reinterpret_cast<void*>(0x080BF8D8);
void * const CNWLevelStats__AddFeat = reinterpret_cast<void*>(0x080BFA84);
void * const CNWLevelStats__ClearFeats = reinterpret_cast<void*>(0x080BFA14);
void * const CNWLevelStats__GetSkillRankChange = reinterpret_cast<void*>(0x080BFA30);
void * const CNWLevelStats__SetSkillRankChange = reinterpret_cast<void*>(0x080BFA5C);

void * const CNWMessage__CNWMessageCtor = reinterpret_cast<void*>(0x080C3224);
void * const CNWMessage__CNWMessageDtor = reinterpret_cast<void*>(0x080C32C8);
void * const CNWMessage__ClearReadMessage = reinterpret_cast<void*>(0x080C33A8);
void * const CNWMessage__CreateWriteMessage = reinterpret_cast<void*>(0x080C3AEC);
void * const CNWMessage__ExtendWriteBuffer = reinterpret_cast<void*>(0x080C3B50);
void * const CNWMessage__ExtendWriteFragmentsBuffer = reinterpret_cast<void*>(0x080C3BA0);
void * const CNWMessage__GetObjectLookupTable = reinterpret_cast<void*>(0x080C4344);
void * const CNWMessage__GetWriteMessage = reinterpret_cast<void*>(0x080C2E54);
void * const CNWMessage__MessageMoreDataToRead = reinterpret_cast<void*>(0x080C3ABC);
void * const CNWMessage__MessageReadOverflow = reinterpret_cast<void*>(0x080C3A64);
void * const CNWMessage__MessageReadUnderflow = reinterpret_cast<void*>(0x080C3A8C);
void * const CNWMessage__PeekAtWriteMessageSize = reinterpret_cast<void*>(0x080C42D8);
void * const CNWMessage__ReadBit = reinterpret_cast<void*>(0x080C33C4);
void * const CNWMessage__ReadBits = reinterpret_cast<void*>(0x080C33F0);
void * const CNWMessage__ReadBOOL = reinterpret_cast<void*>(0x080C3570);
void * const CNWMessage__ReadBYTE = reinterpret_cast<void*>(0x080C3588);
void * const CNWMessage__ReadCExoString = reinterpret_cast<void*>(0x080C2954);
void * const CNWMessage__ReadCHAR = reinterpret_cast<void*>(0x080C35D4);
void * const CNWMessage__ReadCResRef = reinterpret_cast<void*>(0x080C39D4);
void * const CNWMessage__ReadDOUBLE__0 = reinterpret_cast<void*>(0x080C38EC);
void * const CNWMessage__ReadDOUBLE__1 = reinterpret_cast<void*>(0x080C395C);
void * const CNWMessage__ReadDWORD = reinterpret_cast<void*>(0x080C36CC);
void * const CNWMessage__ReadDWORD64 = reinterpret_cast<void*>(0x080C376C);
void * const CNWMessage__ReadFLOAT__0 = reinterpret_cast<void*>(0x080C37FC);
void * const CNWMessage__ReadFLOAT__1 = reinterpret_cast<void*>(0x080C3874);
void * const CNWMessage__ReadINT = reinterpret_cast<void*>(0x080C3710);
void * const CNWMessage__ReadINT64 = reinterpret_cast<void*>(0x080C37B4);
void * const CNWMessage__ReadSHORT = reinterpret_cast<void*>(0x080C3670);
void * const CNWMessage__ReadSigned = reinterpret_cast<void*>(0x080C2888);
void * const CNWMessage__ReadUnsigned = reinterpret_cast<void*>(0x080C2640);
void * const CNWMessage__ReadVOIDPtr = reinterpret_cast<void*>(0x080C3A40);
void * const CNWMessage__ReadWORD = reinterpret_cast<void*>(0x080C362C);
void * const CNWMessage__SetReadMessage = reinterpret_cast<void*>(0x080C3328);
void * const CNWMessage__WriteBit = reinterpret_cast<void*>(0x080C3484);
void * const CNWMessage__WriteBits = reinterpret_cast<void*>(0x080C34D0);
void * const CNWMessage__WriteBOOL = reinterpret_cast<void*>(0x080C3C08);
void * const CNWMessage__WriteBYTE = reinterpret_cast<void*>(0x080C3C24);
void * const CNWMessage__WriteCExoString = reinterpret_cast<void*>(0x080C2D04);
void * const CNWMessage__WriteCHAR = reinterpret_cast<void*>(0x080C3CB4);
void * const CNWMessage__WriteCResRef = reinterpret_cast<void*>(0x080C2C74);
void * const CNWMessage__WriteDOUBLE__0 = reinterpret_cast<void*>(0x080C2B48);
void * const CNWMessage__WriteDOUBLE__1 = reinterpret_cast<void*>(0x080C4188);
void * const CNWMessage__WriteDWORD = reinterpret_cast<void*>(0x080C3E74);
void * const CNWMessage__WriteDWORD64 = reinterpret_cast<void*>(0x080C3F90);
void * const CNWMessage__WriteFLOAT__0 = reinterpret_cast<void*>(0x080C2A44);
void * const CNWMessage__WriteFLOAT__1 = reinterpret_cast<void*>(0x080C40C8);
void * const CNWMessage__WriteINT = reinterpret_cast<void*>(0x080C3F00);
void * const CNWMessage__WriteINT64 = reinterpret_cast<void*>(0x080C402C);
void * const CNWMessage__WriteSHORT = reinterpret_cast<void*>(0x080C3DDC);
void * const CNWMessage__WriteSigned = reinterpret_cast<void*>(0x080C24F0);
void * const CNWMessage__WriteUnsigned = reinterpret_cast<void*>(0x080C231C);
void * const CNWMessage__WriteVOIDPtr = reinterpret_cast<void*>(0x080C4258);
void * const CNWMessage__WriteWORD = reinterpret_cast<void*>(0x080C3D44);

void * const CNWNameGen__CNWNameGenCtor = reinterpret_cast<void*>(0x08270FBC);
void * const CNWNameGen__CNWNameGenDtor = reinterpret_cast<void*>(0x08270FEC);
void * const CNWNameGen__GetRandomName__0 = reinterpret_cast<void*>(0x08270380);
void * const CNWNameGen__GetRandomName__1 = reinterpret_cast<void*>(0x08270B0C);
void * const CNWNameGen__LoadNameTable = reinterpret_cast<void*>(0x08271030);
void * const CNWNameGen__UnloadNameTable = reinterpret_cast<void*>(0x082710D4);

void * const CNWPlaceableSurfaceMesh__CNWPlaceableSurfaceMeshCtor = reinterpret_cast<void*>(0x08239D5C);
void * const CNWPlaceableSurfaceMesh__CNWPlaceableSurfaceMeshDtor = reinterpret_cast<void*>(0x08239DC8);
void * const CNWPlaceableSurfaceMesh__LoadWalkMesh = reinterpret_cast<void*>(0x08239044);
void * const CNWPlaceableSurfaceMesh__LoadWalkMeshString = reinterpret_cast<void*>(0x08239E3C);

void * const CNWPlaceMeshManager__CNWPlaceMeshManagerCtor = reinterpret_cast<void*>(0x080C4570);
void * const CNWPlaceMeshManager__CNWPlaceMeshManagerDtor = reinterpret_cast<void*>(0x080C4588);
void * const CNWPlaceMeshManager__ClearWalkMeshes = reinterpret_cast<void*>(0x080C460C);
void * const CNWPlaceMeshManager__GetWalkMesh = reinterpret_cast<void*>(0x080C434C);
void * const CNWPlaceMeshManager__InitializeWalkMeshes = reinterpret_cast<void*>(0x080C45BC);

void * const CNWRace__CNWRaceCtor = reinterpret_cast<void*>(0x080C4DB0);
void * const CNWRace__CNWRaceDtor = reinterpret_cast<void*>(0x080C4E04);
void * const CNWRace__GetConverNameLowerText = reinterpret_cast<void*>(0x080C4970);
void * const CNWRace__GetConverNameText = reinterpret_cast<void*>(0x080C48BC);
void * const CNWRace__GetDefaultBiographyText = reinterpret_cast<void*>(0x080C4758);
void * const CNWRace__GetDescriptionText = reinterpret_cast<void*>(0x080C46A4);
void * const CNWRace__GetNamePluralText = reinterpret_cast<void*>(0x080C4A24);
void * const CNWRace__GetNameText = reinterpret_cast<void*>(0x080C480C);
void * const CNWRace__IsFirstLevelGrantedFeat = reinterpret_cast<void*>(0x080C4E44);
void * const CNWRace__LoadFeatsTable = reinterpret_cast<void*>(0x080C4AD8);

void * const CNWRules__CNWRulesCtor = reinterpret_cast<void*>(0x080C6188);
void * const CNWRules__CNWRulesDtor = reinterpret_cast<void*>(0x080C6544);
void * const CNWRules__CompareFeatName = reinterpret_cast<void*>(0x080C85EC);
void * const CNWRules__Get2DArrays = reinterpret_cast<void*>(0x080CBBA8);
void * const CNWRules__GetBaseItem = reinterpret_cast<void*>(0x080CBA5C);
void * const CNWRules__GetClass = reinterpret_cast<void*>(0x080CBAC8);
void * const CNWRules__GetClassExpansionLevel = reinterpret_cast<void*>(0x080CB9A8);
void * const CNWRules__GetDamageIndexFromFlags = reinterpret_cast<void*>(0x080CB894);
void * const CNWRules__GetDifficultyOption = reinterpret_cast<void*>(0x080CB780);
void * const CNWRules__GetDomain = reinterpret_cast<void*>(0x080CB750);
void * const CNWRules__GetExperienceLevel = reinterpret_cast<void*>(0x080CBA74);
void * const CNWRules__GetFamiliarExpansionLevel = reinterpret_cast<void*>(0x080CB9D8);
void * const CNWRules__GetFeat = reinterpret_cast<void*>(0x080CB718);
void * const CNWRules__GetFeatExpansionLevel = reinterpret_cast<void*>(0x080CB8B4);
void * const CNWRules__GetIsClassValid = reinterpret_cast<void*>(0x080CBAB0);
void * const CNWRules__GetMasterFeatDescriptionText = reinterpret_cast<void*>(0x080C8518);
void * const CNWRules__GetMasterFeatIcon = reinterpret_cast<void*>(0x080CB62C);
void * const CNWRules__GetMasterFeatNameText = reinterpret_cast<void*>(0x080C8444);
void * const CNWRules__GetMetaMagicLevelCost = reinterpret_cast<void*>(0x080CB6F0);
void * const CNWRules__GetNumClasses = reinterpret_cast<void*>(0x080CBAE8);
void * const CNWRules__GetNumDomains = reinterpret_cast<void*>(0x080CBB50);
void * const CNWRules__GetNumFeats = reinterpret_cast<void*>(0x080CBB78);
void * const CNWRules__GetNumRaces = reinterpret_cast<void*>(0x080CBB14);
void * const CNWRules__GetNumSkills = reinterpret_cast<void*>(0x080CBB40);
void * const CNWRules__GetNumSortedFeats = reinterpret_cast<void*>(0x080CBB88);
void * const CNWRules__GetNumSpells = reinterpret_cast<void*>(0x080CBAA0);
void * const CNWRules__GetRace = reinterpret_cast<void*>(0x080CBAF8);
void * const CNWRules__GetSkill = reinterpret_cast<void*>(0x080CBB24);
void * const CNWRules__GetSkillExpansionLevel = reinterpret_cast<void*>(0x080CB91C);
void * const CNWRules__GetSortedFeatID = reinterpret_cast<void*>(0x080CBB60);
void * const CNWRules__GetSpell = reinterpret_cast<void*>(0x080CBA88);
void * const CNWRules__GetSpellExpansionLevel = reinterpret_cast<void*>(0x080CB944);
void * const CNWRules__GetSpellRange = reinterpret_cast<void*>(0x080CBB98);
void * const CNWRules__GetWeightedDamageAmount = reinterpret_cast<void*>(0x080CB7A4);
void * const CNWRules__IsArcaneClass = reinterpret_cast<void*>(0x080CBA08);
void * const CNWRules__IsFeatUseable = reinterpret_cast<void*>(0x080CB600);
void * const CNWRules__LoadClassInfo = reinterpret_cast<void*>(0x080C8918);
void * const CNWRules__LoadDifficultyInfo = reinterpret_cast<void*>(0x080CB440);
void * const CNWRules__LoadDomainInfo = reinterpret_cast<void*>(0x080CAEF0);
void * const CNWRules__LoadFeatInfo = reinterpret_cast<void*>(0x080C6DD8);
void * const CNWRules__LoadRaceInfo = reinterpret_cast<void*>(0x080C9D58);
void * const CNWRules__LoadSkillInfo = reinterpret_cast<void*>(0x080CA75C);
void * const CNWRules__ReloadAll = reinterpret_cast<void*>(0x080C6AA0);
void * const CNWRules__RollDice = reinterpret_cast<void*>(0x080CB6B0);
void * const CNWRules__SortFeats = reinterpret_cast<void*>(0x080CB688);
void * const CNWRules__UnloadAll = reinterpret_cast<void*>(0x080C680C);

void * const CNWSAmbientSound__CNWSAmbientSoundCtor = reinterpret_cast<void*>(0x0823AAA8);
void * const CNWSAmbientSound__CNWSAmbientSoundDtor = reinterpret_cast<void*>(0x0823ACBC);
void * const CNWSAmbientSound__GetPlayersInArea = reinterpret_cast<void*>(0x0823A884);
void * const CNWSAmbientSound__Load = reinterpret_cast<void*>(0x0823A970);
void * const CNWSAmbientSound__PackIntoMessage = reinterpret_cast<void*>(0x0823ABAC);
void * const CNWSAmbientSound__PlayAmbientSound = reinterpret_cast<void*>(0x0823A530);
void * const CNWSAmbientSound__PlayBattleMusic = reinterpret_cast<void*>(0x0823A3E8);
void * const CNWSAmbientSound__PlayMusic = reinterpret_cast<void*>(0x0823A160);
void * const CNWSAmbientSound__Save = reinterpret_cast<void*>(0x0823AB08);
void * const CNWSAmbientSound__SetAmbientDayTrack = reinterpret_cast<void*>(0x0823A5CC);
void * const CNWSAmbientSound__SetAmbientDayVolume = reinterpret_cast<void*>(0x0823A71C);
void * const CNWSAmbientSound__SetAmbientNightTrack = reinterpret_cast<void*>(0x0823A674);
void * const CNWSAmbientSound__SetAmbientNightVolume = reinterpret_cast<void*>(0x0823A7D0);
void * const CNWSAmbientSound__SetBattleMusicTrack = reinterpret_cast<void*>(0x0823A48C);
void * const CNWSAmbientSound__SetMusicDayTrack = reinterpret_cast<void*>(0x0823A2A0);
void * const CNWSAmbientSound__SetMusicDelay = reinterpret_cast<void*>(0x0823A1FC);
void * const CNWSAmbientSound__SetMusicNightTrack = reinterpret_cast<void*>(0x0823A340);

void * const CNWSArea__CNWSAreaCtor = reinterpret_cast<void*>(0x080CBD30);
void * const CNWSArea__CNWSAreaDtor = reinterpret_cast<void*>(0x080CC244);
void * const CNWSArea__AddObjectToArea = reinterpret_cast<void*>(0x080CD6E4);
void * const CNWSArea__AddSubArea = reinterpret_cast<void*>(0x080D57F8);
void * const CNWSArea__AIUpdate = reinterpret_cast<void*>(0x080CC3E0);
void * const CNWSArea__ApplyEffect = reinterpret_cast<void*>(0x080D3AF0);
void * const CNWSArea__AsNWSArea = reinterpret_cast<void*>(0x080D55BC);
void * const CNWSArea__BudgeCreatures = reinterpret_cast<void*>(0x080D4468);
void * const CNWSArea__ClearLineOfSight = reinterpret_cast<void*>(0x080D31F0);
void * const CNWSArea__ComputeAwayVector = reinterpret_cast<void*>(0x080D5E48);
void * const CNWSArea__ComputeBestCorner = reinterpret_cast<void*>(0x080D63B8);
void * const CNWSArea__ComputeHeight = reinterpret_cast<void*>(0x080D65FC);
void * const CNWSArea__ComputeNonVisibleLocation = reinterpret_cast<void*>(0x080D7658);
void * const CNWSArea__ComputePathDistance = reinterpret_cast<void*>(0x080DE8B0);
void * const CNWSArea__ComputeSafeLocation = reinterpret_cast<void*>(0x080D70D4);
void * const CNWSArea__ComputeSafeLocationInDirection = reinterpret_cast<void*>(0x080D6C08);
void * const CNWSArea__CountAreaTransitionTriggers = reinterpret_cast<void*>(0x080D7DE8);
void * const CNWSArea__CountVisibleToPlayers = reinterpret_cast<void*>(0x080D7C28);
void * const CNWSArea__DecreaseAILevelPriority = reinterpret_cast<void*>(0x080CDF18);
void * const CNWSArea__DecrementPlayersInArea = reinterpret_cast<void*>(0x080D48CC);
void * const CNWSArea__EvaluateOverlappingTargets = reinterpret_cast<void*>(0x080DA5C8);
void * const CNWSArea__EventHandler = reinterpret_cast<void*>(0x080CC5F0);
void * const CNWSArea__ExploreArea = reinterpret_cast<void*>(0x080D9268);
void * const CNWSArea__GenerateInterTilePath = reinterpret_cast<void*>(0x080D9438);
void * const CNWSArea__GetAmbientSound = reinterpret_cast<void*>(0x080D597C);
void * const CNWSArea__GetAreaListenCheckModifier = reinterpret_cast<void*>(0x080D58F4);
void * const CNWSArea__GetAreaName = reinterpret_cast<void*>(0x080D595C);
void * const CNWSArea__GetAreaSpotCheckModifier = reinterpret_cast<void*>(0x080D58E4);
void * const CNWSArea__GetCurrentWeather = reinterpret_cast<void*>(0x080D59E8);
void * const CNWSArea__GetCustomScriptEventId = reinterpret_cast<void*>(0x080D5904);
void * const CNWSArea__GetDoorCrossed = reinterpret_cast<void*>(0x080D412C);
void * const CNWSArea__GetFirstObjectInArea = reinterpret_cast<void*>(0x080D4814);
void * const CNWSArea__GetFirstObjectIndiceByX = reinterpret_cast<void*>(0x080CD5F4);
void * const CNWSArea__GetGameObjectsArray = reinterpret_cast<void*>(0x080D57B4);
void * const CNWSArea__GetInterAreaDFSVisited = reinterpret_cast<void*>(0x080D5938);
void * const CNWSArea__GetIsIDInExcludeList = reinterpret_cast<void*>(0x080D51E8);
void * const CNWSArea__GetLastEntered = reinterpret_cast<void*>(0x080D5780);
void * const CNWSArea__GetLastLeft = reinterpret_cast<void*>(0x080D5790);
void * const CNWSArea__GetLoadScreenID = reinterpret_cast<void*>(0x080D5A1C);
void * const CNWSArea__GetMapSize = reinterpret_cast<void*>(0x080D59B4);
void * const CNWSArea__GetNextObjectInArea = reinterpret_cast<void*>(0x080D4858);
void * const CNWSArea__GetNumPlayersInArea = reinterpret_cast<void*>(0x080D596C);
void * const CNWSArea__GetObjectByNameIndex = reinterpret_cast<void*>(0x080D58C4);
void * const CNWSArea__GetObjectsArrayPosition = reinterpret_cast<void*>(0x080D57C4);
void * const CNWSArea__GetOverrideWeather = reinterpret_cast<void*>(0x080D59D8);
void * const CNWSArea__GetPVPSetting = reinterpret_cast<void*>(0x080D5234);
void * const CNWSArea__GetScriptName = reinterpret_cast<void*>(0x080D55CC);
void * const CNWSArea__GetScriptVarTable = reinterpret_cast<void*>(0x080D57E8);
void * const CNWSArea__GetSoundPathInformation = reinterpret_cast<void*>(0x080D58D4);
void * const CNWSArea__GetSurfaceMaterial = reinterpret_cast<void*>(0x080D528C);
void * const CNWSArea__GetTag = reinterpret_cast<void*>(0x080D5744);
void * const CNWSArea__GetTile__0 = reinterpret_cast<void*>(0x080CDCC8);
void * const CNWSArea__GetTile__1 = reinterpret_cast<void*>(0x080D5650);
void * const CNWSArea__GetTileSetResRef = reinterpret_cast<void*>(0x080D59F8);
void * const CNWSArea__GetTrapList = reinterpret_cast<void*>(0x080D5928);
void * const CNWSArea__GoalMoveDenied = reinterpret_cast<void*>(0x080D9590);
void * const CNWSArea__GridDFSearch = reinterpret_cast<void*>(0x080DD9A0);
void * const CNWSArea__GridDFSGenerateSuccessors = reinterpret_cast<void*>(0x080DDBCC);
void * const CNWSArea__GridDFSTransTableGet = reinterpret_cast<void*>(0x080DEA24);
void * const CNWSArea__GridDFSTransTableHash = reinterpret_cast<void*>(0x080DE9F0);
void * const CNWSArea__GridDFSTransTableInitialize = reinterpret_cast<void*>(0x080DE984);
void * const CNWSArea__GridDFSTransTablePut = reinterpret_cast<void*>(0x080DEABC);
void * const CNWSArea__HandleTransparentDoors = reinterpret_cast<void*>(0x080D308C);
void * const CNWSArea__IncreaseAILevelPriority = reinterpret_cast<void*>(0x080CDDA8);
void * const CNWSArea__IncrementPlayersInArea = reinterpret_cast<void*>(0x080D489C);
void * const CNWSArea__InSubAreas = reinterpret_cast<void*>(0x080DA3F4);
void * const CNWSArea__IntersectingLineSegment = reinterpret_cast<void*>(0x080DA1F8);
void * const CNWSArea__InterTileDFS = reinterpret_cast<void*>(0x080D96B0);
void * const CNWSArea__InterTileDFSExploreArea = reinterpret_cast<void*>(0x080D7FA4);
void * const CNWSArea__InterTileDFSGenerateSuccessors = reinterpret_cast<void*>(0x080D9820);
void * const CNWSArea__InterTileDFSSoundPath = reinterpret_cast<void*>(0x080D882C);
void * const CNWSArea__LoadArea = reinterpret_cast<void*>(0x080CDFDC);
void * const CNWSArea__LoadAreaEffects = reinterpret_cast<void*>(0x080D0B24);
void * const CNWSArea__LoadAreaHeader = reinterpret_cast<void*>(0x080CE0D8);
void * const CNWSArea__LoadCreatures = reinterpret_cast<void*>(0x080CF3F0);
void * const CNWSArea__LoadDoors = reinterpret_cast<void*>(0x080CF99C);
void * const CNWSArea__LoadEncounters = reinterpret_cast<void*>(0x080CFFA4);
void * const CNWSArea__LoadGIT = reinterpret_cast<void*>(0x080CF218);
void * const CNWSArea__LoadItems = reinterpret_cast<void*>(0x080CF758);
void * const CNWSArea__LoadPlaceables = reinterpret_cast<void*>(0x080D041C);
void * const CNWSArea__LoadPlayers = reinterpret_cast<void*>(0x080D48F4);
void * const CNWSArea__LoadProperties = reinterpret_cast<void*>(0x080D4900);
void * const CNWSArea__LoadSounds = reinterpret_cast<void*>(0x080D02EC);
void * const CNWSArea__LoadStores = reinterpret_cast<void*>(0x080D0880);
void * const CNWSArea__LoadTileSetInfo = reinterpret_cast<void*>(0x080CEC24);
void * const CNWSArea__LoadTriggers = reinterpret_cast<void*>(0x080CFDE0);
void * const CNWSArea__LoadWaypoints = reinterpret_cast<void*>(0x080D0144);
void * const CNWSArea__NoCreaturesOnLine = reinterpret_cast<void*>(0x080DA71C);
void * const CNWSArea__NoNoneWalkPolysInStaticObject = reinterpret_cast<void*>(0x080DEB48);
void * const CNWSArea__NWAreaAsNWSArea = reinterpret_cast<void*>(0x080D55C4);
void * const CNWSArea__PackAreaIntoMessage = reinterpret_cast<void*>(0x080D0E00);
void * const CNWSArea__PlayVisualEffect = reinterpret_cast<void*>(0x080D2E54);
void * const CNWSArea__PlotGridPath = reinterpret_cast<void*>(0x080DCBB4);
void * const CNWSArea__PlotPath = reinterpret_cast<void*>(0x080DAEF8);
void * const CNWSArea__PlotSoundPath = reinterpret_cast<void*>(0x080DE750);
void * const CNWSArea__PositionWalkable = reinterpret_cast<void*>(0x080D4024);
void * const CNWSArea__RemoveInterTileExit = reinterpret_cast<void*>(0x080DBAA0);
void * const CNWSArea__RemoveObjectFromArea = reinterpret_cast<void*>(0x080CDB74);
void * const CNWSArea__RemoveSubArea = reinterpret_cast<void*>(0x080D5848);
void * const CNWSArea__SaveArea = reinterpret_cast<void*>(0x080D49FC);
void * const CNWSArea__SaveAreaEffects = reinterpret_cast<void*>(0x080D507C);
void * const CNWSArea__SaveCreatures = reinterpret_cast<void*>(0x080D2AE4);
void * const CNWSArea__SaveDoors = reinterpret_cast<void*>(0x080D4AE8);
void * const CNWSArea__SaveEncounters = reinterpret_cast<void*>(0x080D4C80);
void * const CNWSArea__SaveGIT = reinterpret_cast<void*>(0x080D2238);
void * const CNWSArea__SaveItems = reinterpret_cast<void*>(0x080D4A04);
void * const CNWSArea__SavePlaceables = reinterpret_cast<void*>(0x080D4EE4);
void * const CNWSArea__SaveProperties = reinterpret_cast<void*>(0x080D5148);
void * const CNWSArea__SaveSounds = reinterpret_cast<void*>(0x080D4E18);
void * const CNWSArea__SaveStores = reinterpret_cast<void*>(0x080D4FB0);
void * const CNWSArea__SaveTriggers = reinterpret_cast<void*>(0x080D4BB4);
void * const CNWSArea__SaveWaypoints = reinterpret_cast<void*>(0x080D4D4C);
void * const CNWSArea__SetCurrentWeather = reinterpret_cast<void*>(0x080D42E4);
void * const CNWSArea__SetCustomScriptEventId = reinterpret_cast<void*>(0x080D5914);
void * const CNWSArea__SetInterAreaDFSVisited = reinterpret_cast<void*>(0x080D5948);
void * const CNWSArea__SetLastEntered = reinterpret_cast<void*>(0x080D576C);
void * const CNWSArea__SetLastLeft = reinterpret_cast<void*>(0x080D57A0);
void * const CNWSArea__SetMapSize = reinterpret_cast<void*>(0x080D59A0);
void * const CNWSArea__SetObjectByNameIndex = reinterpret_cast<void*>(0x080D58B0);
void * const CNWSArea__SetObjectsArrayPosition = reinterpret_cast<void*>(0x080D57D4);
void * const CNWSArea__SetOverrideWeather = reinterpret_cast<void*>(0x080D59C4);
void * const CNWSArea__SetPVPSetting = reinterpret_cast<void*>(0x080D598C);
void * const CNWSArea__SetScriptName = reinterpret_cast<void*>(0x080D55E8);
void * const CNWSArea__SetSearchInfo = reinterpret_cast<void*>(0x080D5694);
void * const CNWSArea__SetTag = reinterpret_cast<void*>(0x080D56A8);
void * const CNWSArea__SmoothCornerOptimize = reinterpret_cast<void*>(0x080DBBB4);
void * const CNWSArea__SmoothPointsOnPath = reinterpret_cast<void*>(0x080DBEB4);
void * const CNWSArea__SmoothSelection = reinterpret_cast<void*>(0x080DE8F8);
void * const CNWSArea__SmoothSelectNodes = reinterpret_cast<void*>(0x080DBFC0);
void * const CNWSArea__TestDirectLine = reinterpret_cast<void*>(0x080DC354);
void * const CNWSArea__TestLineWalkable = reinterpret_cast<void*>(0x080DC890);
void * const CNWSArea__TestSafeLocationPoint = reinterpret_cast<void*>(0x080D67A8);
void * const CNWSArea__UnloadArea = reinterpret_cast<void*>(0x080D2C48);
void * const CNWSArea__UpdatePlayerAutomaps = reinterpret_cast<void*>(0x080D9378);
void * const CNWSArea__UpdatePositionInObjectsArray = reinterpret_cast<void*>(0x080CD898);

void * const CNWSAreaOfEffectObject__CNWSAreaOfEffectObjectCtor = reinterpret_cast<void*>(0x081E9ED0);
void * const CNWSAreaOfEffectObject__CNWSAreaOfEffectObjectDtor = reinterpret_cast<void*>(0x081EA0B0);
void * const CNWSAreaOfEffectObject__AddToArea = reinterpret_cast<void*>(0x081EA548);
void * const CNWSAreaOfEffectObject__AIUpdate = reinterpret_cast<void*>(0x081EA1EC);
void * const CNWSAreaOfEffectObject__AsNWSAreaOfEffectObject = reinterpret_cast<void*>(0x081ECE10);
void * const CNWSAreaOfEffectObject__EventHandler = reinterpret_cast<void*>(0x081EA450);
void * const CNWSAreaOfEffectObject__GetAreaEffectId = reinterpret_cast<void*>(0x081ECF14);
void * const CNWSAreaOfEffectObject__GetCreator = reinterpret_cast<void*>(0x081ECE9C);
void * const CNWSAreaOfEffectObject__GetEffectSpellId = reinterpret_cast<void*>(0x081ECF34);
void * const CNWSAreaOfEffectObject__GetLastEntered = reinterpret_cast<void*>(0x081ECEC0);
void * const CNWSAreaOfEffectObject__GetLastLeft = reinterpret_cast<void*>(0x081ECED0);
void * const CNWSAreaOfEffectObject__GetObjectArrayIndex = reinterpret_cast<void*>(0x081ECF58);
void * const CNWSAreaOfEffectObject__GetPosition = reinterpret_cast<void*>(0x081ECCC8);
void * const CNWSAreaOfEffectObject__GetRadius = reinterpret_cast<void*>(0x081ECF24);
void * const CNWSAreaOfEffectObject__GetScriptName = reinterpret_cast<void*>(0x081ECE18);
void * const CNWSAreaOfEffectObject__GetShape = reinterpret_cast<void*>(0x081ECF04);
void * const CNWSAreaOfEffectObject__GetSpellLevel = reinterpret_cast<void*>(0x081ECF8C);
void * const CNWSAreaOfEffectObject__GetSpellSaveDC = reinterpret_cast<void*>(0x081ECF7C);
void * const CNWSAreaOfEffectObject__GetTargetObjID = reinterpret_cast<void*>(0x081ECEF4);
void * const CNWSAreaOfEffectObject__InAreaOfEffect = reinterpret_cast<void*>(0x081EABF0);
void * const CNWSAreaOfEffectObject__JumpToPoint = reinterpret_cast<void*>(0x081EC87C);
void * const CNWSAreaOfEffectObject__LineSegmentIntersectAreaOfEffect = reinterpret_cast<void*>(0x081EA948);
void * const CNWSAreaOfEffectObject__LoadAreaEffect = reinterpret_cast<void*>(0x081EAEB0);
void * const CNWSAreaOfEffectObject__LoadEffect = reinterpret_cast<void*>(0x081EB4B4);
void * const CNWSAreaOfEffectObject__RemoveFromArea = reinterpret_cast<void*>(0x081ECC2C);
void * const CNWSAreaOfEffectObject__RemoveFromSubAreas = reinterpret_cast<void*>(0x081EC928);
void * const CNWSAreaOfEffectObject__SaveEffect = reinterpret_cast<void*>(0x081EBB68);
void * const CNWSAreaOfEffectObject__SetCreator = reinterpret_cast<void*>(0x081ECAF4);
void * const CNWSAreaOfEffectObject__SetDuration = reinterpret_cast<void*>(0x081ECD58);
void * const CNWSAreaOfEffectObject__SetEffectSpellId = reinterpret_cast<void*>(0x081ECF44);
void * const CNWSAreaOfEffectObject__SetLastEntered = reinterpret_cast<void*>(0x081ECEAC);
void * const CNWSAreaOfEffectObject__SetLastLeft = reinterpret_cast<void*>(0x081ECEE0);
void * const CNWSAreaOfEffectObject__SetObjectArrayIndex = reinterpret_cast<void*>(0x081ECF68);
void * const CNWSAreaOfEffectObject__SetScriptName = reinterpret_cast<void*>(0x081ECE34);
void * const CNWSAreaOfEffectObject__SetShape = reinterpret_cast<void*>(0x081EAD30);
void * const CNWSAreaOfEffectObject__SetTargetObjID = reinterpret_cast<void*>(0x081EADE0);
void * const CNWSAreaOfEffectObject__UpdateSubAreas = reinterpret_cast<void*>(0x081EBEF8);

void * const CNWSBarter__CNWSBarterCtor = reinterpret_cast<void*>(0x080DEC44);
void * const CNWSBarter__CNWSBarterDtor = reinterpret_cast<void*>(0x080DED24);
void * const CNWSBarter__AddItem = reinterpret_cast<void*>(0x080DF07C);
void * const CNWSBarter__CleanUp = reinterpret_cast<void*>(0x080DEE24);
void * const CNWSBarter__GetState = reinterpret_cast<void*>(0x080DFE18);
void * const CNWSBarter__MoveItem = reinterpret_cast<void*>(0x080DF3B4);
void * const CNWSBarter__PullItemOut = reinterpret_cast<void*>(0x080DF4A0);
void * const CNWSBarter__RemoveItem = reinterpret_cast<void*>(0x080DF254);
void * const CNWSBarter__Reset = reinterpret_cast<void*>(0x080DFF24);
void * const CNWSBarter__SetListAccepted = reinterpret_cast<void*>(0x080DF6AC);
void * const CNWSBarter__SetListLocked = reinterpret_cast<void*>(0x080DF568);

void * const CNWSClient__CNWSClientCtor = reinterpret_cast<void*>(0x080DFFD4);
void * const CNWSClient__CNWSClientDtor = reinterpret_cast<void*>(0x080DFFF0);
void * const CNWSClient__AsNWSDungeonMaster = reinterpret_cast<void*>(0x080E0098);
void * const CNWSClient__AsNWSPlayer = reinterpret_cast<void*>(0x080E00A0);
void * const CNWSClient__GetLanguage = reinterpret_cast<void*>(0x080E008C);
void * const CNWSClient__GetPlayerId = reinterpret_cast<void*>(0x080E0070);
void * const CNWSClient__SetLanguage = reinterpret_cast<void*>(0x080E007C);

void * const CNWSCombatAttackData__CNWSCombatAttackDataCtor = reinterpret_cast<void*>(0x080E01D4);
void * const CNWSCombatAttackData__CNWSCombatAttackDataDtor = reinterpret_cast<void*>(0x080E4BA8);
void * const CNWSCombatAttackData__AddDamage = reinterpret_cast<void*>(0x080E4C74);
void * const CNWSCombatAttackData__ClearAttackData = reinterpret_cast<void*>(0x080E0314);
void * const CNWSCombatAttackData__Copy = reinterpret_cast<void*>(0x080E0430);
void * const CNWSCombatAttackData__GetDamage = reinterpret_cast<void*>(0x080E0544);
void * const CNWSCombatAttackData__GetTotalDamage = reinterpret_cast<void*>(0x080E4CEC);
void * const CNWSCombatAttackData__LoadData = reinterpret_cast<void*>(0x080E08F4);
void * const CNWSCombatAttackData__SaveData = reinterpret_cast<void*>(0x080E0610);
void * const CNWSCombatAttackData__SetBaseDamage = reinterpret_cast<void*>(0x080E4C2C);
void * const CNWSCombatAttackData__SetDamage = reinterpret_cast<void*>(0x080E4C3C);

void * const CNWSCombatRound__CNWSCombatRoundCtor = reinterpret_cast<void*>(0x080E0DB4);
void * const CNWSCombatRound__CNWSCombatRoundDtor = reinterpret_cast<void*>(0x080E10CC);
void * const CNWSCombatRound__AddAction = reinterpret_cast<void*>(0x080E50DC);
void * const CNWSCombatRound__AddAttackOfOpportunity = reinterpret_cast<void*>(0x080E31E0);
void * const CNWSCombatRound__AddCircleKickAttack = reinterpret_cast<void*>(0x080E2F94);
void * const CNWSCombatRound__AddCleaveAttack = reinterpret_cast<void*>(0x080E2E4C);
void * const CNWSCombatRound__AddCombatStepAction = reinterpret_cast<void*>(0x080E3688);
void * const CNWSCombatRound__AddEquipAction = reinterpret_cast<void*>(0x080E332C);
void * const CNWSCombatRound__AddParryAttack = reinterpret_cast<void*>(0x080E2BE4);
void * const CNWSCombatRound__AddParryIndex = reinterpret_cast<void*>(0x080E2D40);
void * const CNWSCombatRound__AddReaction = reinterpret_cast<void*>(0x080E29BC);
void * const CNWSCombatRound__AddSpecialAttack = reinterpret_cast<void*>(0x080E2494);
void * const CNWSCombatRound__AddSpellAction = reinterpret_cast<void*>(0x080E2AD8);
void * const CNWSCombatRound__AddUnequipAction = reinterpret_cast<void*>(0x080E350C);
void * const CNWSCombatRound__AddWhirlwindAttack = reinterpret_cast<void*>(0x080E30D0);
void * const CNWSCombatRound__CalculateOffHandAttacks = reinterpret_cast<void*>(0x080E1D50);
void * const CNWSCombatRound__CheckActionLength = reinterpret_cast<void*>(0x080E1C7C);
void * const CNWSCombatRound__CheckActionLengthAtTime = reinterpret_cast<void*>(0x080E4F04);
void * const CNWSCombatRound__ClearAllAttacks = reinterpret_cast<void*>(0x080E5260);
void * const CNWSCombatRound__ClearAllSpecialAttacks = reinterpret_cast<void*>(0x080E5388);
void * const CNWSCombatRound__DecrementPauseTimer = reinterpret_cast<void*>(0x080E4DD8);
void * const CNWSCombatRound__DecrementRoundLength = reinterpret_cast<void*>(0x080E1AC4);
void * const CNWSCombatRound__EndCombatRound = reinterpret_cast<void*>(0x080E1908);
void * const CNWSCombatRound__GetAction = reinterpret_cast<void*>(0x080E50A0);
void * const CNWSCombatRound__GetActionPending = reinterpret_cast<void*>(0x080E4F6C);
void * const CNWSCombatRound__GetAttack = reinterpret_cast<void*>(0x080E522C);
void * const CNWSCombatRound__GetAttackActionPending = reinterpret_cast<void*>(0x080E4FBC);
void * const CNWSCombatRound__GetCombatStepRequired = reinterpret_cast<void*>(0x080E3BE4);
void * const CNWSCombatRound__GetCurrentAttackWeapon = reinterpret_cast<void*>(0x080E3778);
void * const CNWSCombatRound__GetExtraAttack = reinterpret_cast<void*>(0x080E51F4);
void * const CNWSCombatRound__GetNewAttackID = reinterpret_cast<void*>(0x080E535C);
void * const CNWSCombatRound__GetNumSpecialAttacks = reinterpret_cast<void*>(0x080E52DC);
void * const CNWSCombatRound__GetOffHandAttack = reinterpret_cast<void*>(0x080E51BC);
void * const CNWSCombatRound__GetSpecialAttack = reinterpret_cast<void*>(0x080E2760);
void * const CNWSCombatRound__GetSpecialAttackID = reinterpret_cast<void*>(0x080E2808);
void * const CNWSCombatRound__GetSpellActionPending = reinterpret_cast<void*>(0x080E5010);
void * const CNWSCombatRound__GetTotalAttacks = reinterpret_cast<void*>(0x080E5534);
void * const CNWSCombatRound__GetWeaponAttackType = reinterpret_cast<void*>(0x080E38DC);
void * const CNWSCombatRound__HasCreatureWeapons = reinterpret_cast<void*>(0x080E3B30);
void * const CNWSCombatRound__IncrementTimer = reinterpret_cast<void*>(0x080E4D7C);
void * const CNWSCombatRound__InitializeAttackActions = reinterpret_cast<void*>(0x080E1E88);
void * const CNWSCombatRound__InitializeCombatModes = reinterpret_cast<void*>(0x080E52A0);
void * const CNWSCombatRound__InitializeNumberOfAttacks = reinterpret_cast<void*>(0x080E2260);
void * const CNWSCombatRound__InsertSpecialAttack = reinterpret_cast<void*>(0x080E2900);
void * const CNWSCombatRound__LoadCombatRound = reinterpret_cast<void*>(0x080E4340);
void * const CNWSCombatRound__RecomputeRound = reinterpret_cast<void*>(0x080E1390);
void * const CNWSCombatRound__RemoveAllActions = reinterpret_cast<void*>(0x080E516C);
void * const CNWSCombatRound__RemoveSpecialAttack = reinterpret_cast<void*>(0x080E25B8);
void * const CNWSCombatRound__RemoveSpellAction = reinterpret_cast<void*>(0x080E541C);
void * const CNWSCombatRound__SaveCombatRound = reinterpret_cast<void*>(0x080E3D68);
void * const CNWSCombatRound__SetCurrentAttack = reinterpret_cast<void*>(0x080E524C);
void * const CNWSCombatRound__SetDeflectArrow = reinterpret_cast<void*>(0x080E5560);
void * const CNWSCombatRound__SetPauseTimer = reinterpret_cast<void*>(0x080E4E78);
void * const CNWSCombatRound__SetRoundPaused = reinterpret_cast<void*>(0x080E4DF8);
void * const CNWSCombatRound__SignalCombatRoundStarted = reinterpret_cast<void*>(0x080E4D30);
void * const CNWSCombatRound__StartCombatRound = reinterpret_cast<void*>(0x080E11E8);
void * const CNWSCombatRound__StartCombatRoundCast = reinterpret_cast<void*>(0x080E180C);
void * const CNWSCombatRound__UpdateAttackTargetForAllActions = reinterpret_cast<void*>(0x080E54C0);

void * const CNWSCombatRoundAction__CNWSCombatRoundActionCtor = reinterpret_cast<void*>(0x080E4A60);
void * const CNWSCombatRoundAction__CNWSCombatRoundActionDtor = reinterpret_cast<void*>(0x080E4AAC);
void * const CNWSCombatRoundAction__LoadData = reinterpret_cast<void*>(0x080E00A8);
void * const CNWSCombatRoundAction__SaveData = reinterpret_cast<void*>(0x080E4AC8);

void * const CNWSCreature__CNWSCreatureCtor = reinterpret_cast<void*>(0x08113D80);
void * const CNWSCreature__CNWSCreatureDtor = reinterpret_cast<void*>(0x08114E24);
void * const CNWSCreature__AcquireItem = reinterpret_cast<void*>(0x080FFE20);
void * const CNWSCreature__ActionManager = reinterpret_cast<void*>(0x0813BB24);
void * const CNWSCreature__ActivityManager = reinterpret_cast<void*>(0x0813BBA0);
void * const CNWSCreature__AddAnimalEmpathyAction = reinterpret_cast<void*>(0x0812CA18);
void * const CNWSCreature__AddAppearActions = reinterpret_cast<void*>(0x0813C6A4);
void * const CNWSCreature__AddAreaOfEffect = reinterpret_cast<void*>(0x0813DE74);
void * const CNWSCreature__AddAssociate = reinterpret_cast<void*>(0x0810C620);
void * const CNWSCreature__AddAttackActions = reinterpret_cast<void*>(0x081188D4);
void * const CNWSCreature__AddCastSpellActions = reinterpret_cast<void*>(0x0811610C);
void * const CNWSCreature__AddCounterSpellActions = reinterpret_cast<void*>(0x0812CBF4);
void * const CNWSCreature__AddDisappearActions = reinterpret_cast<void*>(0x0812CDCC);
void * const CNWSCreature__AddDriveAction = reinterpret_cast<void*>(0x0813BCF4);
void * const CNWSCreature__AddDropItemActions = reinterpret_cast<void*>(0x081183EC);
void * const CNWSCreature__AddEquipItemActions = reinterpret_cast<void*>(0x08116CEC);
void * const CNWSCreature__AddGold = reinterpret_cast<void*>(0x081317A0);
void * const CNWSCreature__AddHealActions = reinterpret_cast<void*>(0x0811850C);
void * const CNWSCreature__AddItemCastSpellActions = reinterpret_cast<void*>(0x081159BC);
void * const CNWSCreature__AddMoveToPointAction = reinterpret_cast<void*>(0x0813BE0C);
void * const CNWSCreature__AddMoveToPointActionToFront = reinterpret_cast<void*>(0x0813BC08);
void * const CNWSCreature__AddPathfindingWaitActionToFront = reinterpret_cast<void*>(0x0813BD88);
void * const CNWSCreature__AddPickPocketActions = reinterpret_cast<void*>(0x08118224);
void * const CNWSCreature__AddPickUpItemActions = reinterpret_cast<void*>(0x08118320);
void * const CNWSCreature__AddRepositoryMoveActions = reinterpret_cast<void*>(0x0813BEF8);
void * const CNWSCreature__AddSitActions = reinterpret_cast<void*>(0x081185C8);
void * const CNWSCreature__AddTauntActions = reinterpret_cast<void*>(0x0812CB08);
void * const CNWSCreature__AddToArea = reinterpret_cast<void*>(0x08118D20);
void * const CNWSCreature__AddToAssociateList = reinterpret_cast<void*>(0x08113254);
void * const CNWSCreature__AddToInvitationsIgnored = reinterpret_cast<void*>(0x081136BC);
void * const CNWSCreature__AddToInvitationsOffered = reinterpret_cast<void*>(0x081135AC);
void * const CNWSCreature__AddToPersonalReputationList = reinterpret_cast<void*>(0x0810897C);
void * const CNWSCreature__AddToPVPList = reinterpret_cast<void*>(0x0811387C);
void * const CNWSCreature__AddToVisibleList = reinterpret_cast<void*>(0x08108824);
void * const CNWSCreature__AddTrapActions = reinterpret_cast<void*>(0x081186C8);
void * const CNWSCreature__AddUnequipActions = reinterpret_cast<void*>(0x081178E4);
void * const CNWSCreature__AddUseTalentAtLocationActions = reinterpret_cast<void*>(0x0812D0E8);
void * const CNWSCreature__AddUseTalentOnObjectActions = reinterpret_cast<void*>(0x0812CE9C);
void * const CNWSCreature__AdjustReputation = reinterpret_cast<void*>(0x081083A4);
void * const CNWSCreature__AIActionAnimalEmpathy = reinterpret_cast<void*>(0x08108AFC);
void * const CNWSCreature__AIActionAppear = reinterpret_cast<void*>(0x0810A23C);
void * const CNWSCreature__AIActionAreaWait = reinterpret_cast<void*>(0x08112F04);
void * const CNWSCreature__AIActionAttackObject = reinterpret_cast<void*>(0x080E5928);
void * const CNWSCreature__AIActionBarter = reinterpret_cast<void*>(0x080F93D8);
void * const CNWSCreature__AIActionCastSpell = reinterpret_cast<void*>(0x080FABA8);
void * const CNWSCreature__AIActionChangeFacingObject = reinterpret_cast<void*>(0x080FD69C);
void * const CNWSCreature__AIActionChangeFacingPoint = reinterpret_cast<void*>(0x080FD83C);
void * const CNWSCreature__AIActionCheckForceFollowObject = reinterpret_cast<void*>(0x08112FD4);
void * const CNWSCreature__AIActionCheckInterAreaPathfinding = reinterpret_cast<void*>(0x080FDEAC);
void * const CNWSCreature__AIActionCheckMoveAwayFromLocation = reinterpret_cast<void*>(0x080FDC8C);
void * const CNWSCreature__AIActionCheckMoveAwayFromObject = reinterpret_cast<void*>(0x080FD924);
void * const CNWSCreature__AIActionCheckMoveToObject = reinterpret_cast<void*>(0x080FE128);
void * const CNWSCreature__AIActionCheckMoveToObjectRadius = reinterpret_cast<void*>(0x080FE368);
void * const CNWSCreature__AIActionCheckMoveToPoint = reinterpret_cast<void*>(0x080FE884);
void * const CNWSCreature__AIActionCheckMoveToPointRadius = reinterpret_cast<void*>(0x080FEAC0);
void * const CNWSCreature__AIActionCounterSpell = reinterpret_cast<void*>(0x0810C250);
void * const CNWSCreature__AIActionDisappear = reinterpret_cast<void*>(0x0810A318);
void * const CNWSCreature__AIActionDisarmTrap = reinterpret_cast<void*>(0x080F7070);
void * const CNWSCreature__AIActionDrive = reinterpret_cast<void*>(0x081052C0);
void * const CNWSCreature__AIActionDropItem = reinterpret_cast<void*>(0x0810735C);
void * const CNWSCreature__AIActionEncounterCreatureDestroySelf = reinterpret_cast<void*>(0x080FECB4);
void * const CNWSCreature__AIActionEquipItem = reinterpret_cast<void*>(0x081001B8);
void * const CNWSCreature__AIActionExamine = reinterpret_cast<void*>(0x080F9648);
void * const CNWSCreature__AIActionExamineTrap = reinterpret_cast<void*>(0x080F7B78);
void * const CNWSCreature__AIActionFlagTrap = reinterpret_cast<void*>(0x080F5D3C);
void * const CNWSCreature__AIActionForceFollowObject = reinterpret_cast<void*>(0x081069C8);
void * const CNWSCreature__AIActionHeal = reinterpret_cast<void*>(0x0810B3F8);
void * const CNWSCreature__AIActionItemCastSpell = reinterpret_cast<void*>(0x080F9C88);
void * const CNWSCreature__AIActionJumpToObject = reinterpret_cast<void*>(0x0810031C);
void * const CNWSCreature__AIActionJumpToPoint = reinterpret_cast<void*>(0x08100BA4);
void * const CNWSCreature__AIActionMoveToPoint = reinterpret_cast<void*>(0x08101E4C);
void * const CNWSCreature__AIActionOrientCamera = reinterpret_cast<void*>(0x0811309C);
void * const CNWSCreature__AIActionPickPocket = reinterpret_cast<void*>(0x0810A3F4);
void * const CNWSCreature__AIActionPickUpItem = reinterpret_cast<void*>(0x08106BB0);
void * const CNWSCreature__AIActionRandomWalk = reinterpret_cast<void*>(0x08101A10);
void * const CNWSCreature__AIActionRecoverTrap = reinterpret_cast<void*>(0x080F63A8);
void * const CNWSCreature__AIActionRepositoryMove = reinterpret_cast<void*>(0x08101194);
void * const CNWSCreature__AIActionRest = reinterpret_cast<void*>(0x08109114);
void * const CNWSCreature__AIActionSetTrap = reinterpret_cast<void*>(0x080F8174);
void * const CNWSCreature__AIActionSit = reinterpret_cast<void*>(0x0810BDDC);
void * const CNWSCreature__AIActionTaunt = reinterpret_cast<void*>(0x08109BEC);
void * const CNWSCreature__AIActionUnequipItem = reinterpret_cast<void*>(0x08107FB4);
void * const CNWSCreature__AIActionWaitForEndOfRound = reinterpret_cast<void*>(0x08113118);
void * const CNWSCreature__AIUpdate = reinterpret_cast<void*>(0x08119108);
void * const CNWSCreature__ApplyDeathExperience = reinterpret_cast<void*>(0x0812385C);
void * const CNWSCreature__ApplyDiseasePayload = reinterpret_cast<void*>(0x08138790);
void * const CNWSCreature__ApplyOnHitAbilityDamage = reinterpret_cast<void*>(0x080F4C4C);
void * const CNWSCreature__ApplyOnHitBlindness = reinterpret_cast<void*>(0x080F19D4);
void * const CNWSCreature__ApplyOnHitCastSpell = reinterpret_cast<void*>(0x080ECCF8);
void * const CNWSCreature__ApplyOnHitConfusion = reinterpret_cast<void*>(0x080F1C60);
void * const CNWSCreature__ApplyOnHitDaze = reinterpret_cast<void*>(0x080F1F58);
void * const CNWSCreature__ApplyOnHitDeafness = reinterpret_cast<void*>(0x080F2250);
void * const CNWSCreature__ApplyOnHitDeathAttack = reinterpret_cast<void*>(0x080F34D8);
void * const CNWSCreature__ApplyOnHitDisease = reinterpret_cast<void*>(0x080F4E88);
void * const CNWSCreature__ApplyOnHitDispelMagic__0 = reinterpret_cast<void*>(0x080F447C);
void * const CNWSCreature__ApplyOnHitDispelMagic__1 = reinterpret_cast<void*>(0x080F4DC4);
void * const CNWSCreature__ApplyOnHitDominate = reinterpret_cast<void*>(0x080F24D0);
void * const CNWSCreature__ApplyOnHitDoom = reinterpret_cast<void*>(0x080F27C8);
void * const CNWSCreature__ApplyOnHitFear = reinterpret_cast<void*>(0x080F2DF0);
void * const CNWSCreature__ApplyOnHitGreaterDispel = reinterpret_cast<void*>(0x080F45F8);
void * const CNWSCreature__ApplyOnHitHold = reinterpret_cast<void*>(0x080F30D8);
void * const CNWSCreature__ApplyOnHitKnock = reinterpret_cast<void*>(0x080F4774);
void * const CNWSCreature__ApplyOnHitLesserDispel = reinterpret_cast<void*>(0x080F4954);
void * const CNWSCreature__ApplyOnHitLevelDrain = reinterpret_cast<void*>(0x080F4F48);
void * const CNWSCreature__ApplyOnHitMordysDisjunction = reinterpret_cast<void*>(0x080F4AD0);
void * const CNWSCreature__ApplyOnHitPoison = reinterpret_cast<void*>(0x080F50D0);
void * const CNWSCreature__ApplyOnHitSilence = reinterpret_cast<void*>(0x080F38E4);
void * const CNWSCreature__ApplyOnHitSlayAlignment = reinterpret_cast<void*>(0x080F525C);
void * const CNWSCreature__ApplyOnHitSlayAlignmentGroup = reinterpret_cast<void*>(0x080F54A0);
void * const CNWSCreature__ApplyOnHitSlayRacialGroup = reinterpret_cast<void*>(0x080F564C);
void * const CNWSCreature__ApplyOnHitSleep = reinterpret_cast<void*>(0x080F3B64);
void * const CNWSCreature__ApplyOnHitSlow = reinterpret_cast<void*>(0x080F3F04);
void * const CNWSCreature__ApplyOnHitStun = reinterpret_cast<void*>(0x080F4184);
void * const CNWSCreature__ApplyOnHitVampiricRegeneration = reinterpret_cast<void*>(0x080F5988);
void * const CNWSCreature__ApplyOnHitVorpal = reinterpret_cast<void*>(0x080F58C8);
void * const CNWSCreature__ApplyOnHitWounding = reinterpret_cast<void*>(0x080F57DC);
void * const CNWSCreature__ApplyPoisonPayload = reinterpret_cast<void*>(0x08138F3C);
void * const CNWSCreature__ApplyWounding = reinterpret_cast<void*>(0x0813B6B4);
void * const CNWSCreature__AsNWSCreature = reinterpret_cast<void*>(0x0813D6AC);
void * const CNWSCreature__AutoCloseGUIPanels = reinterpret_cast<void*>(0x08135404);
void * const CNWSCreature__BringAssociatesToNewFaction = reinterpret_cast<void*>(0x08113778);
void * const CNWSCreature__BroadcastAssociateCommand = reinterpret_cast<void*>(0x0813C59C);
void * const CNWSCreature__BroadcastAttackDataToParty = reinterpret_cast<void*>(0x08126B58);
void * const CNWSCreature__BroadcastAttackOfOpportunity = reinterpret_cast<void*>(0x08128EA8);
void * const CNWSCreature__BroadcastBattleCry = reinterpret_cast<void*>(0x08128864);
void * const CNWSCreature__BroadcastCombatStateToParty = reinterpret_cast<void*>(0x08128D34);
void * const CNWSCreature__BroadcastDamageDataToParty = reinterpret_cast<void*>(0x08126DD4);
void * const CNWSCreature__BroadcastDeathDataToParty = reinterpret_cast<void*>(0x08127014);
void * const CNWSCreature__BroadcastFloatyData = reinterpret_cast<void*>(0x081272DC);
void * const CNWSCreature__BroadcastSavingThrowData = reinterpret_cast<void*>(0x08127584);
void * const CNWSCreature__BroadcastSkillData = reinterpret_cast<void*>(0x0812742C);
void * const CNWSCreature__BroadcastSpellCast = reinterpret_cast<void*>(0x08127CEC);
void * const CNWSCreature__BroadcastVoiceChat = reinterpret_cast<void*>(0x081289CC);
void * const CNWSCreature__BroadcastWhirlwindAttack = reinterpret_cast<void*>(0x0813B55C);
void * const CNWSCreature__BumpFriends = reinterpret_cast<void*>(0x0813836C);
void * const CNWSCreature__CalculateDamagePower = reinterpret_cast<void*>(0x0812EB24);
void * const CNWSCreature__CalculateDeathExperience = reinterpret_cast<void*>(0x08123E0C);
void * const CNWSCreature__CalculateMaxElementalDamage = reinterpret_cast<void*>(0x080F5B14);
void * const CNWSCreature__CalculatePersonalReputationAdjustment = reinterpret_cast<void*>(0x081121EC);
void * const CNWSCreature__CalculateProjectileTimeToTarget = reinterpret_cast<void*>(0x080F5B98);
void * const CNWSCreature__CalculateSpellSaveDC = reinterpret_cast<void*>(0x0813ADC8);
void * const CNWSCreature__CancelAction = reinterpret_cast<void*>(0x08124FB4);
void * const CNWSCreature__CancelGoldTransfer = reinterpret_cast<void*>(0x0813C7D8);
void * const CNWSCreature__CancelRest = reinterpret_cast<void*>(0x0812D888);
void * const CNWSCreature__CanEquipItem = reinterpret_cast<void*>(0x080FF978);
void * const CNWSCreature__CanEquipMiscellaneous = reinterpret_cast<void*>(0x080FF8C0);
void * const CNWSCreature__CanEquipShield = reinterpret_cast<void*>(0x080FF798);
void * const CNWSCreature__CanEquipWeapon = reinterpret_cast<void*>(0x080FED6C);
void * const CNWSCreature__CanUnEquipWeapon = reinterpret_cast<void*>(0x08107E78);
void * const CNWSCreature__CanUseItem = reinterpret_cast<void*>(0x08110DF8);
void * const CNWSCreature__CheckInventoryForPlotItems = reinterpret_cast<void*>(0x081399C4);
void * const CNWSCreature__CheckItemAlignmentRestrictions = reinterpret_cast<void*>(0x08111374);
void * const CNWSCreature__CheckItemClassRestrictions = reinterpret_cast<void*>(0x08111294);
void * const CNWSCreature__CheckItemRaceRestrictions = reinterpret_cast<void*>(0x08111678);
void * const CNWSCreature__CheckMasterIsValid = reinterpret_cast<void*>(0x08130120);
void * const CNWSCreature__CheckProficiencies = reinterpret_cast<void*>(0x080FFCD4);
void * const CNWSCreature__CheckUseMagicDeviceSkill = reinterpret_cast<void*>(0x0811172C);
void * const CNWSCreature__CheckVisibleList = reinterpret_cast<void*>(0x081131A8);
void * const CNWSCreature__CleanInvitationLists = reinterpret_cast<void*>(0x08111C24);
void * const CNWSCreature__CleanOutPersonalReputationList = reinterpret_cast<void*>(0x08112AB8);
void * const CNWSCreature__ClearAction = reinterpret_cast<void*>(0x0811BBB0);
void * const CNWSCreature__ClearActivities = reinterpret_cast<void*>(0x08115528);
void * const CNWSCreature__ClearAutoMapData = reinterpret_cast<void*>(0x0813D2D8);
void * const CNWSCreature__ClearHostileActionsVersus = reinterpret_cast<void*>(0x08137F50);
void * const CNWSCreature__ClearPersonalReputation = reinterpret_cast<void*>(0x08108A6C);
void * const CNWSCreature__ClearVisibleList = reinterpret_cast<void*>(0x081088A0);
void * const CNWSCreature__ComputeAIState = reinterpret_cast<void*>(0x0813C184);
void * const CNWSCreature__ComputeAIStateOnAction = reinterpret_cast<void*>(0x0811D974);
void * const CNWSCreature__ComputeArmourClass = reinterpret_cast<void*>(0x081298B0);
void * const CNWSCreature__ComputeModifiedMovementRate = reinterpret_cast<void*>(0x081391AC);
void * const CNWSCreature__ComputeSpellRange = reinterpret_cast<void*>(0x08115864);
void * const CNWSCreature__ComputeTotalEquippedWeight = reinterpret_cast<void*>(0x0813C054);
void * const CNWSCreature__ComputeTotalWalkDistance = reinterpret_cast<void*>(0x08103F60);
void * const CNWSCreature__ComputeTotalWeightCarried = reinterpret_cast<void*>(0x0813C030);
void * const CNWSCreature__ConvertModeToggleQuickButton = reinterpret_cast<void*>(0x0813C2DC);
void * const CNWSCreature__CopyQuickButtonsFromDM = reinterpret_cast<void*>(0x08123698);
void * const CNWSCreature__CreateDefaultQuickButtons = reinterpret_cast<void*>(0x08122494);
void * const CNWSCreature__CreateDefaultQuickButtons_AddFeat = reinterpret_cast<void*>(0x08122F80);
void * const CNWSCreature__CreateDefaultQuickButtons_CheckItem = reinterpret_cast<void*>(0x0813C388);
void * const CNWSCreature__CreateDefaultQuickButtonsDM = reinterpret_cast<void*>(0x0813C3F8);
void * const CNWSCreature__CutWaypointPath = reinterpret_cast<void*>(0x0813CF74);
void * const CNWSCreature__DecrementSpellReadyCount = reinterpret_cast<void*>(0x0813CE5C);
void * const CNWSCreature__DesiredAttackRange = reinterpret_cast<void*>(0x0811D858);
void * const CNWSCreature__DestroyEquippedItems = reinterpret_cast<void*>(0x0813BFCC);
void * const CNWSCreature__DisplayFloatyDataToSelf = reinterpret_cast<void*>(0x0813A60C);
void * const CNWSCreature__DMClearScripts = reinterpret_cast<void*>(0x0810E920);
void * const CNWSCreature__DMResetClearedScripts = reinterpret_cast<void*>(0x0810F198);
void * const CNWSCreature__DoCombatStep = reinterpret_cast<void*>(0x080F0008);
void * const CNWSCreature__DoDamage = reinterpret_cast<void*>(0x0812E998);
void * const CNWSCreature__DoListenDetection = reinterpret_cast<void*>(0x08125DDC);
void * const CNWSCreature__DoPerceptionUpdateOnCreature = reinterpret_cast<void*>(0x08125164);
void * const CNWSCreature__DoSpotDetection = reinterpret_cast<void*>(0x081265C4);
void * const CNWSCreature__DoStealthDetection = reinterpret_cast<void*>(0x08125BFC);
void * const CNWSCreature__DriveUpdateLocation = reinterpret_cast<void*>(0x08106580);
void * const CNWSCreature__DumpToLog = reinterpret_cast<void*>(0x0813A6F0);
void * const CNWSCreature__EquipItem = reinterpret_cast<void*>(0x0811B64C);
void * const CNWSCreature__EquipMostDamagingAmmunition = reinterpret_cast<void*>(0x08130E14);
void * const CNWSCreature__EquipMostDamagingMeleeWeapon = reinterpret_cast<void*>(0x08130418);
void * const CNWSCreature__EquipMostDamagingRangedWeapon = reinterpret_cast<void*>(0x08130A1C);
void * const CNWSCreature__EquipMostEffectiveArmor = reinterpret_cast<void*>(0x081312DC);
void * const CNWSCreature__EvaluateLock = reinterpret_cast<void*>(0x0811AF4C);
void * const CNWSCreature__EventHandler = reinterpret_cast<void*>(0x0811C160);
void * const CNWSCreature__ExternalResolveAttack = reinterpret_cast<void*>(0x080F5C50);
void * const CNWSCreature__FailedOpenInformAssociates = reinterpret_cast<void*>(0x08113820);
void * const CNWSCreature__ForceMoveToPoint = reinterpret_cast<void*>(0x081314C8);
void * const CNWSCreature__GetActionQueueList = reinterpret_cast<void*>(0x0813EB34);
void * const CNWSCreature__GetActivity = reinterpret_cast<void*>(0x0813BBF0);
void * const CNWSCreature__GetActivityLocked = reinterpret_cast<void*>(0x0813E994);
void * const CNWSCreature__GetAIState = reinterpret_cast<void*>(0x0813D884);
void * const CNWSCreature__GetAIStateActee = reinterpret_cast<void*>(0x0813D8B4);
void * const CNWSCreature__GetAIStateAction = reinterpret_cast<void*>(0x0813D894);
void * const CNWSCreature__GetAIStateActivities = reinterpret_cast<void*>(0x0813D8A4);
void * const CNWSCreature__GetAlreadyRemovedFromEncounter = reinterpret_cast<void*>(0x0813EC7C);
void * const CNWSCreature__GetAmbientAnimationState = reinterpret_cast<void*>(0x0813E34C);
void * const CNWSCreature__GetAmmunitionAvailable = reinterpret_cast<void*>(0x080E78A4);
void * const CNWSCreature__GetAnimalCompanionCreatureType = reinterpret_cast<void*>(0x0813E4EC);
void * const CNWSCreature__GetAnimalCompanionId = reinterpret_cast<void*>(0x0813E500);
void * const CNWSCreature__GetAnimalCompanionName = reinterpret_cast<void*>(0x0813E4C0);
void * const CNWSCreature__GetAppearance = reinterpret_cast<void*>(0x0813D6B4);
void * const CNWSCreature__GetAreaOfEffectObjects = reinterpret_cast<void*>(0x0813DF28);
void * const CNWSCreature__GetArmorClass = reinterpret_cast<void*>(0x0812E19C);
void * const CNWSCreature__GetAssociateId = reinterpret_cast<void*>(0x0810F9B4);
void * const CNWSCreature__GetAssociateList = reinterpret_cast<void*>(0x0813E3B8);
void * const CNWSCreature__GetAssociateType = reinterpret_cast<void*>(0x0813E3A8);
void * const CNWSCreature__GetAttackResultHit = reinterpret_cast<void*>(0x080F5C24);
void * const CNWSCreature__GetAttackTarget = reinterpret_cast<void*>(0x0813E9F0);
void * const CNWSCreature__GetAttemptedAttackTarget = reinterpret_cast<void*>(0x0813EA14);
void * const CNWSCreature__GetAttemptedSpellTarget = reinterpret_cast<void*>(0x0813EA38);
void * const CNWSCreature__GetAutoMapAreaList = reinterpret_cast<void*>(0x0813EBE4);
void * const CNWSCreature__GetAutoMapTileData = reinterpret_cast<void*>(0x0813EBD4);
void * const CNWSCreature__GetBarterInfo = reinterpret_cast<void*>(0x0813C8FC);
void * const CNWSCreature__GetBlind = reinterpret_cast<void*>(0x0813D060);
void * const CNWSCreature__GetBlindsightDistance = reinterpret_cast<void*>(0x0813ECF0);
void * const CNWSCreature__GetBodyBag = reinterpret_cast<void*>(0x0813EFD4);
void * const CNWSCreature__GetBodyBagAppearance = reinterpret_cast<void*>(0x08139850);
void * const CNWSCreature__GetBodyBagId = reinterpret_cast<void*>(0x0813EAEC);
void * const CNWSCreature__GetBroadcastedAOOTo = reinterpret_cast<void*>(0x0813E220);
void * const CNWSCreature__GetCalculateNPCWeight = reinterpret_cast<void*>(0x0813ED48);
void * const CNWSCreature__GetCanSlayAlignment = reinterpret_cast<void*>(0x080F53E0);
void * const CNWSCreature__GetCombatMode = reinterpret_cast<void*>(0x0813DA9C);
void * const CNWSCreature__GetCombatRound = reinterpret_cast<void*>(0x0813D6C4);
void * const CNWSCreature__GetCombatState = reinterpret_cast<void*>(0x0813E200);
void * const CNWSCreature__GetCombatStateTimer = reinterpret_cast<void*>(0x0813E210);
void * const CNWSCreature__GetCounterSpellTarget = reinterpret_cast<void*>(0x0813E328);
void * const CNWSCreature__GetCreatureReputation = reinterpret_cast<void*>(0x0810811C);
void * const CNWSCreature__GetCreatureSize = reinterpret_cast<void*>(0x0813DB2C);
void * const CNWSCreature__GetCreatureState = reinterpret_cast<void*>(0x0813D8E8);
void * const CNWSCreature__GetCurrentItemContainer = reinterpret_cast<void*>(0x0813DC90);
void * const CNWSCreature__GetCutsceneCameraMode = reinterpret_cast<void*>(0x0813E01C);
void * const CNWSCreature__GetCutsceneCameraMovementRateFactor = reinterpret_cast<void*>(0x0813E064);
void * const CNWSCreature__GetCutsceneGhost = reinterpret_cast<void*>(0x0813E040);
void * const CNWSCreature__GetDamageFlags = reinterpret_cast<void*>(0x0813C760);
void * const CNWSCreature__GetDecayTime = reinterpret_cast<void*>(0x0813EAC8);
void * const CNWSCreature__GetDefensiveCastingMode = reinterpret_cast<void*>(0x0813DA8C);
void * const CNWSCreature__GetDesiredAreaId = reinterpret_cast<void*>(0x0813DF48);
void * const CNWSCreature__GetDesiredAreaLocation = reinterpret_cast<void*>(0x0813DF6C);
void * const CNWSCreature__GetDesiredAreaUpdateComplete = reinterpret_cast<void*>(0x0813DFB0);
void * const CNWSCreature__GetDesiredCombatMode = reinterpret_cast<void*>(0x0813DAAC);
void * const CNWSCreature__GetDetectMode = reinterpret_cast<void*>(0x0813C850);
void * const CNWSCreature__GetDialogInterruptable = reinterpret_cast<void*>(0x0813DCFC);
void * const CNWSCreature__GetDialogResref = reinterpret_cast<void*>(0x0813DCB4);
void * const CNWSCreature__GetDisarmable = reinterpret_cast<void*>(0x0813DA10);
void * const CNWSCreature__GetDisplayName = reinterpret_cast<void*>(0x0813DD7C);
void * const CNWSCreature__GetDMCharacter = reinterpret_cast<void*>(0x0813EC40);
void * const CNWSCreature__GetDominatedCreatureId = reinterpret_cast<void*>(0x0811353C);
void * const CNWSCreature__GetDriveMode = reinterpret_cast<void*>(0x0813E194);
void * const CNWSCreature__GetDriveModeMoveFactor = reinterpret_cast<void*>(0x0813DA00);
void * const CNWSCreature__GetDropItemAnimationPlayed = reinterpret_cast<void*>(0x0813D654);
void * const CNWSCreature__GetEffectIcons = reinterpret_cast<void*>(0x0813DFF8);
void * const CNWSCreature__GetEffectSpellId = reinterpret_cast<void*>(0x0813E808);
void * const CNWSCreature__GetEncounterId = reinterpret_cast<void*>(0x0813E79C);
void * const CNWSCreature__GetEncumbranceState = reinterpret_cast<void*>(0x0813E7C0);
void * const CNWSCreature__GetEquipArrayIndex = reinterpret_cast<void*>(0x0813DC24);
void * const CNWSCreature__GetEquippedWeight = reinterpret_cast<void*>(0x0813ED14);
void * const CNWSCreature__GetExternalCombatModeEnabled = reinterpret_cast<void*>(0x0813F01C);
void * const CNWSCreature__GetFacingAndAnimationDone = reinterpret_cast<void*>(0x0813F00C);
void * const CNWSCreature__GetFaction = reinterpret_cast<void*>(0x08113178);
void * const CNWSCreature__GetFactionId = reinterpret_cast<void*>(0x0813E668);
void * const CNWSCreature__GetFamiliarCreatureType = reinterpret_cast<void*>(0x0813E624);
void * const CNWSCreature__GetFamiliarId = reinterpret_cast<void*>(0x0813E638);
void * const CNWSCreature__GetFamiliarName = reinterpret_cast<void*>(0x0813E5F8);
void * const CNWSCreature__GetFilteredEffectList = reinterpret_cast<void*>(0x08131D1C);
void * const CNWSCreature__GetFirstName = reinterpret_cast<void*>(0x0813DD3C);
void * const CNWSCreature__GetFlanked = reinterpret_cast<void*>(0x080F1928);
void * const CNWSCreature__GetFlatFooted = reinterpret_cast<void*>(0x080F1830);
void * const CNWSCreature__GetFootstepType = reinterpret_cast<void*>(0x0813EF84);
void * const CNWSCreature__GetForcedWalk = reinterpret_cast<void*>(0x0813E184);
void * const CNWSCreature__GetFreeWill = reinterpret_cast<void*>(0x0813E0E0);
void * const CNWSCreature__GetGender = reinterpret_cast<void*>(0x0813DD18);
void * const CNWSCreature__GetGoingToBeAttackedBy = reinterpret_cast<void*>(0x0813EA80);
void * const CNWSCreature__GetGold = reinterpret_cast<void*>(0x0813EC18);
void * const CNWSCreature__GetHasArms = reinterpret_cast<void*>(0x0813DAE4);
void * const CNWSCreature__GetHasInvisbilityEffectApplied = reinterpret_cast<void*>(0x0813BA18);
void * const CNWSCreature__GetHasLegs = reinterpret_cast<void*>(0x0813DB08);
void * const CNWSCreature__GetHasted = reinterpret_cast<void*>(0x0813E0AC);
void * const CNWSCreature__GetHealAnimationPlayed = reinterpret_cast<void*>(0x0813D5C4);
void * const CNWSCreature__GetHenchmanId = reinterpret_cast<void*>(0x0813E3C8);
void * const CNWSCreature__GetHenchmanIndex = reinterpret_cast<void*>(0x0813D3B0);
void * const CNWSCreature__GetInitiativeExpired = reinterpret_cast<void*>(0x0813E1DC);
void * const CNWSCreature__GetInitiativeRoll = reinterpret_cast<void*>(0x0813E1B8);
void * const CNWSCreature__GetInSubAreasArray = reinterpret_cast<void*>(0x0813DF38);
void * const CNWSCreature__GetInTransit = reinterpret_cast<void*>(0x0813ED7C);
void * const CNWSCreature__GetInventory = reinterpret_cast<void*>(0x0813D6D4);
void * const CNWSCreature__GetInvisible = reinterpret_cast<void*>(0x08136F94);
void * const CNWSCreature__GetInvitedToParty = reinterpret_cast<void*>(0x0813E0F4);
void * const CNWSCreature__GetInvitedToPartyBy = reinterpret_cast<void*>(0x0813E104);
void * const CNWSCreature__GetIsAbleToPossessFamiliar = reinterpret_cast<void*>(0x0813C7B4);
void * const CNWSCreature__GetIsCreatureBumpable = reinterpret_cast<void*>(0x0813811C);
void * const CNWSCreature__GetIsDiseased = reinterpret_cast<void*>(0x0813D930);
void * const CNWSCreature__GetIsExcited = reinterpret_cast<void*>(0x0813E9D8);
void * const CNWSCreature__GetIsImmortal = reinterpret_cast<void*>(0x0813EF18);
void * const CNWSCreature__GetIsInInvitationsIgnored = reinterpret_cast<void*>(0x08111B3C);
void * const CNWSCreature__GetIsInInvitationsOffered = reinterpret_cast<void*>(0x08111A54);
void * const CNWSCreature__GetIsInMelee = reinterpret_cast<void*>(0x080F5B58);
void * const CNWSCreature__GetIsInUseRange = reinterpret_cast<void*>(0x08137730);
void * const CNWSCreature__GetIsPoisoned = reinterpret_cast<void*>(0x0813D90C);
void * const CNWSCreature__GetIsPolymorphed = reinterpret_cast<void*>(0x0813EDA0);
void * const CNWSCreature__GetIsPolymorphing = reinterpret_cast<void*>(0x0813EED0);
void * const CNWSCreature__GetIsPolymorphLocked = reinterpret_cast<void*>(0x0813EEF4);
void * const CNWSCreature__GetIsPossessedFamiliar = reinterpret_cast<void*>(0x08113574);
void * const CNWSCreature__GetIsWeaponEffective = reinterpret_cast<void*>(0x081311B0);
void * const CNWSCreature__GetItemCastSpellBroadcastAOO = reinterpret_cast<void*>(0x0813D818);
void * const CNWSCreature__GetItemContainerArrayIndex = reinterpret_cast<void*>(0x0813DC6C);
void * const CNWSCreature__GetItemCount = reinterpret_cast<void*>(0x0812E0BC);
void * const CNWSCreature__GetItemRepository = reinterpret_cast<void*>(0x0813D6E4);
void * const CNWSCreature__GetJournal = reinterpret_cast<void*>(0x0813C89C);
void * const CNWSCreature__GetJumpedRecently = reinterpret_cast<void*>(0x0813DE2C);
void * const CNWSCreature__GetLastAmmunitionWarning = reinterpret_cast<void*>(0x0813D850);
void * const CNWSCreature__GetLastAssociateCommand = reinterpret_cast<void*>(0x0813E398);
void * const CNWSCreature__GetLastBlockingDoor = reinterpret_cast<void*>(0x0813EB10);
void * const CNWSCreature__GetLastCounterDomainLevel = reinterpret_cast<void*>(0x0813E2C0);
void * const CNWSCreature__GetLastCounterMetaType = reinterpret_cast<void*>(0x0813E29C);
void * const CNWSCreature__GetLastCounterSpellClass = reinterpret_cast<void*>(0x0813E278);
void * const CNWSCreature__GetLastCounterSpellID = reinterpret_cast<void*>(0x0813E254);
void * const CNWSCreature__GetLastHideRoll = reinterpret_cast<void*>(0x0813E93C);
void * const CNWSCreature__GetLastItemCastSpell = reinterpret_cast<void*>(0x0813D7AC);
void * const CNWSCreature__GetLastItemCastSpellLevel = reinterpret_cast<void*>(0x0813D7D0);
void * const CNWSCreature__GetLastListenRoll = reinterpret_cast<void*>(0x0813E918);
void * const CNWSCreature__GetLastMoveSilentlyRoll = reinterpret_cast<void*>(0x0813E960);
void * const CNWSCreature__GetLastName = reinterpret_cast<void*>(0x0813DD5C);
void * const CNWSCreature__GetLastPerceived = reinterpret_cast<void*>(0x0813E82C);
void * const CNWSCreature__GetLastPerceptionHeard = reinterpret_cast<void*>(0x0813E850);
void * const CNWSCreature__GetLastPerceptionInaudible = reinterpret_cast<void*>(0x0813E898);
void * const CNWSCreature__GetLastPerceptionSeen = reinterpret_cast<void*>(0x0813E874);
void * const CNWSCreature__GetLastPerceptionVanished = reinterpret_cast<void*>(0x0813E8BC);
void * const CNWSCreature__GetLastPickupFailed = reinterpret_cast<void*>(0x0813E7D0);
void * const CNWSCreature__GetLastSpellCastItem = reinterpret_cast<void*>(0x0813D808);
void * const CNWSCreature__GetLastSpellProjectileTime = reinterpret_cast<void*>(0x0813DC14);
void * const CNWSCreature__GetLastSpellUnReadied = reinterpret_cast<void*>(0x0813D788);
void * const CNWSCreature__GetLastSpotRoll = reinterpret_cast<void*>(0x0813E8F4);
void * const CNWSCreature__GetLastTrapDetected = reinterpret_cast<void*>(0x0813D860);
void * const CNWSCreature__GetListenCheckDistance = reinterpret_cast<void*>(0x0813D180);
void * const CNWSCreature__GetLockAnimationPlayed = reinterpret_cast<void*>(0x0813D630);
void * const CNWSCreature__GetLockOrientationToObject = reinterpret_cast<void*>(0x0813DC04);
void * const CNWSCreature__GetLootable = reinterpret_cast<void*>(0x0813EAA4);
void * const CNWSCreature__GetMagicalArrowsEquipped = reinterpret_cast<void*>(0x0813D510);
void * const CNWSCreature__GetMagicalBoltsEquipped = reinterpret_cast<void*>(0x0813D534);
void * const CNWSCreature__GetMagicalBulletsEquipped = reinterpret_cast<void*>(0x0813D558);
void * const CNWSCreature__GetMasterId = reinterpret_cast<void*>(0x0813E388);
void * const CNWSCreature__GetMaxHitPoints = reinterpret_cast<void*>(0x0812E25C);
void * const CNWSCreature__GetMode = reinterpret_cast<void*>(0x0812C078);
void * const CNWSCreature__GetModelType = reinterpret_cast<void*>(0x0813DB94);
void * const CNWSCreature__GetMovementRateFactor = reinterpret_cast<void*>(0x08123FD8);
void * const CNWSCreature__GetNearestEnemy = reinterpret_cast<void*>(0x0812C188);
void * const CNWSCreature__GetNonPolymorphCONBase = reinterpret_cast<void*>(0x0813EE78);
void * const CNWSCreature__GetNonPolymorphDEXBase = reinterpret_cast<void*>(0x0813EEA4);
void * const CNWSCreature__GetNonPolymorphSTRBase = reinterpret_cast<void*>(0x0813EE4C);
void * const CNWSCreature__GetNoPermDeath = reinterpret_cast<void*>(0x0813EF3C);
void * const CNWSCreature__GetNumAreas = reinterpret_cast<void*>(0x0813EC08);
void * const CNWSCreature__GetNumAssociatesOfType = reinterpret_cast<void*>(0x08113460);
void * const CNWSCreature__GetNumCharSheetViewers = reinterpret_cast<void*>(0x0813DA6C);
void * const CNWSCreature__GetNumCounterSpellingCreatures = reinterpret_cast<void*>(0x081276C4);
void * const CNWSCreature__GetNumInvited = reinterpret_cast<void*>(0x08113804);
void * const CNWSCreature__GetOnCreationScriptExecuted = reinterpret_cast<void*>(0x0813DE50);
void * const CNWSCreature__GetOriginalFactionId = reinterpret_cast<void*>(0x0813E67C);
void * const CNWSCreature__GetPassiveAttackBehaviour = reinterpret_cast<void*>(0x0813E970);
void * const CNWSCreature__GetPathfindInformation = reinterpret_cast<void*>(0x0813D6F4);
void * const CNWSCreature__GetPendingRealization = reinterpret_cast<void*>(0x0813EFA8);
void * const CNWSCreature__GetPersonalReputationList = reinterpret_cast<void*>(0x0813E6B4);
void * const CNWSCreature__GetPickUpItemAnimationPlayed = reinterpret_cast<void*>(0x0813D678);
void * const CNWSCreature__GetPlayerCharacter = reinterpret_cast<void*>(0x0813E2D0);
void * const CNWSCreature__GetPolymorphSpellId1 = reinterpret_cast<void*>(0x0813EDB0);
void * const CNWSCreature__GetPolymorphSpellId2 = reinterpret_cast<void*>(0x0813EDC0);
void * const CNWSCreature__GetPolymorphSpellId3 = reinterpret_cast<void*>(0x0813EDD0);
void * const CNWSCreature__GetPonyRide = reinterpret_cast<void*>(0x0813D8C4);
void * const CNWSCreature__GetPortrait = reinterpret_cast<void*>(0x0813EB44);
void * const CNWSCreature__GetPreDominationFactionId = reinterpret_cast<void*>(0x0813E690);
void * const CNWSCreature__GetPreferredAttackDistance = reinterpret_cast<void*>(0x0813DBF4);
void * const CNWSCreature__GetPrePolymorphCON = reinterpret_cast<void*>(0x0813EE2C);
void * const CNWSCreature__GetPrePolymorphDEX = reinterpret_cast<void*>(0x0813EE3C);
void * const CNWSCreature__GetPrePolymorphSTR = reinterpret_cast<void*>(0x0813EE1C);
void * const CNWSCreature__GetPVPList = reinterpret_cast<void*>(0x0813ED6C);
void * const CNWSCreature__GetPVPPlayerLikesMe = reinterpret_cast<void*>(0x081138CC);
void * const CNWSCreature__GetPVPReputation = reinterpret_cast<void*>(0x081123F4);
void * const CNWSCreature__GetQuickbarButton = reinterpret_cast<void*>(0x0813D370);
void * const CNWSCreature__GetQuickbarInitialized = reinterpret_cast<void*>(0x0813EC28);
void * const CNWSCreature__GetRangeWeaponEquipped = reinterpret_cast<void*>(0x0813C0A8);
void * const CNWSCreature__GetRelativeWeaponSize = reinterpret_cast<void*>(0x0813C71C);
void * const CNWSCreature__GetRepositoryArrayIndex = reinterpret_cast<void*>(0x0813DC48);
void * const CNWSCreature__GetReputationList = reinterpret_cast<void*>(0x0813E6A4);
void * const CNWSCreature__GetRunRate = reinterpret_cast<void*>(0x0813C484);
void * const CNWSCreature__GetScriptName = reinterpret_cast<void*>(0x0813D704);
void * const CNWSCreature__GetSilent = reinterpret_cast<void*>(0x0813E088);
void * const CNWSCreature__GetSittingObject = reinterpret_cast<void*>(0x0813D4EC);
void * const CNWSCreature__GetSlowed = reinterpret_cast<void*>(0x0813E0D0);
void * const CNWSCreature__GetSoundSet = reinterpret_cast<void*>(0x0813EF60);
void * const CNWSCreature__GetSpellIdentifiedList = reinterpret_cast<void*>(0x0813E230);
void * const CNWSCreature__GetSpellOrHealActionQueued = reinterpret_cast<void*>(0x0813B980);
void * const CNWSCreature__GetSpellTarget = reinterpret_cast<void*>(0x0813EA5C);
void * const CNWSCreature__GetSpotCheckDistance = reinterpret_cast<void*>(0x0813D160);
void * const CNWSCreature__GetStandardFactionReputation = reinterpret_cast<void*>(0x081127D8);
void * const CNWSCreature__GetStats = reinterpret_cast<void*>(0x0813D4C8);
void * const CNWSCreature__GetStealAnimationPlayed = reinterpret_cast<void*>(0x0813D57C);
void * const CNWSCreature__GetStealAttemptDetected = reinterpret_cast<void*>(0x0813D5A0);
void * const CNWSCreature__GetStealthMode = reinterpret_cast<void*>(0x0813DA7C);
void * const CNWSCreature__GetSummonedAnimalCompanion = reinterpret_cast<void*>(0x0813E4B0);
void * const CNWSCreature__GetSummonedCreatureId = reinterpret_cast<void*>(0x0813E650);
void * const CNWSCreature__GetSummonedFamiliar = reinterpret_cast<void*>(0x0813E5E8);
void * const CNWSCreature__GetTaunt = reinterpret_cast<void*>(0x0813E13C);
void * const CNWSCreature__GetTauntAnimationPlayed = reinterpret_cast<void*>(0x0813D69C);
void * const CNWSCreature__GetTileExplored = reinterpret_cast<void*>(0x08124F04);
void * const CNWSCreature__GetTotalEffectBonus = reinterpret_cast<void*>(0x08132298);
void * const CNWSCreature__GetTotalWeightCarried = reinterpret_cast<void*>(0x0813ED38);
void * const CNWSCreature__GetTrapAnimationPlayed = reinterpret_cast<void*>(0x0813D5E8);
void * const CNWSCreature__GetTurnResistanceHD = reinterpret_cast<void*>(0x08138074);
void * const CNWSCreature__GetUnarmed = reinterpret_cast<void*>(0x0813C0F0);
void * const CNWSCreature__GetUnlockAnimationPlayed = reinterpret_cast<void*>(0x0813D60C);
void * const CNWSCreature__GetUpdateCombatInformation = reinterpret_cast<void*>(0x0813DA48);
void * const CNWSCreature__GetUpdateDisplayName = reinterpret_cast<void*>(0x0813DE08);
void * const CNWSCreature__GetUseMonkAbilities = reinterpret_cast<void*>(0x081241F8);
void * const CNWSCreature__GetUseRange = reinterpret_cast<void*>(0x0813799C);
void * const CNWSCreature__GetVisibilityList = reinterpret_cast<void*>(0x0813E78C);
void * const CNWSCreature__GetVisibleListElement = reinterpret_cast<void*>(0x081131FC);
void * const CNWSCreature__GetVisionType = reinterpret_cast<void*>(0x0813DFE8);
void * const CNWSCreature__GetWalkAnimation = reinterpret_cast<void*>(0x0813E14C);
void * const CNWSCreature__GetWalkRate = reinterpret_cast<void*>(0x0813C458);
void * const CNWSCreature__GetWeaponPower = reinterpret_cast<void*>(0x08131A10);
void * const CNWSCreature__GetWeaponScale = reinterpret_cast<void*>(0x0813DBD0);
void * const CNWSCreature__HandleSubAreaStateChanges = reinterpret_cast<void*>(0x08103970);
void * const CNWSCreature__InitialisePVPList = reinterpret_cast<void*>(0x08112694);
void * const CNWSCreature__InitializeQuickbar = reinterpret_cast<void*>(0x0813B2D8);
void * const CNWSCreature__IsAIState = reinterpret_cast<void*>(0x0813D954);
void * const CNWSCreature__IsHelpless = reinterpret_cast<void*>(0x0813D9AC);
void * const CNWSCreature__LearnScroll = reinterpret_cast<void*>(0x0813A974);
void * const CNWSCreature__LoadAssociateList = reinterpret_cast<void*>(0x0811FC20);
void * const CNWSCreature__LoadAutoMapData = reinterpret_cast<void*>(0x08121630);
void * const CNWSCreature__LoadCreature = reinterpret_cast<void*>(0x08120218);
void * const CNWSCreature__LoadFromTemplate = reinterpret_cast<void*>(0x0811E46C);
void * const CNWSCreature__LoadPersonalReputationList = reinterpret_cast<void*>(0x0811F7BC);
void * const CNWSCreature__LoadPolymorphData = reinterpret_cast<void*>(0x08120688);
void * const CNWSCreature__LoadQuickBarHack = reinterpret_cast<void*>(0x081394F4);
void * const CNWSCreature__LoadQuickButtons = reinterpret_cast<void*>(0x08121788);
void * const CNWSCreature__MaxAttackRange = reinterpret_cast<void*>(0x0813C114);
void * const CNWSCreature__MergeItem = reinterpret_cast<void*>(0x0811A014);
void * const CNWSCreature__NotifyAssociateActionToggle = reinterpret_cast<void*>(0x0813B454);
void * const CNWSCreature__PacifyCreature__0 = reinterpret_cast<void*>(0x08137CA8);
void * const CNWSCreature__PacifyCreature__1 = reinterpret_cast<void*>(0x08137DC4);
void * const CNWSCreature__PayToIdentifyItem = reinterpret_cast<void*>(0x08131984);
void * const CNWSCreature__Polymorph = reinterpret_cast<void*>(0x081356A0);
void * const CNWSCreature__PossessCreature = reinterpret_cast<void*>(0x0810E658);
void * const CNWSCreature__PossessCreatureDM = reinterpret_cast<void*>(0x081133B0);
void * const CNWSCreature__PossessFamiliar = reinterpret_cast<void*>(0x0810DE48);
void * const CNWSCreature__PostProcess = reinterpret_cast<void*>(0x0812430C);
void * const CNWSCreature__ProcessMasterDeathForAssociates = reinterpret_cast<void*>(0x08110AE8);
void * const CNWSCreature__ProcessPendingCombatActions = reinterpret_cast<void*>(0x0813A4C0);
void * const CNWSCreature__QuickbarButton_RemoveItem = reinterpret_cast<void*>(0x0813029C);
void * const CNWSCreature__QuickbarButton_RemoveSpell = reinterpret_cast<void*>(0x0813034C);
void * const CNWSCreature__ReadItemsFromGff = reinterpret_cast<void*>(0x0811EEE0);
void * const CNWSCreature__ReadScriptsFromGff = reinterpret_cast<void*>(0x0811E768);
void * const CNWSCreature__RealizeAssociateList = reinterpret_cast<void*>(0x0811FFD4);
void * const CNWSCreature__ReceiveAssociateCommand = reinterpret_cast<void*>(0x0810CDC0);
void * const CNWSCreature__RecomputeAmbientAnimationState = reinterpret_cast<void*>(0x08128CA0);
void * const CNWSCreature__RelayQuickChatCommandToAssociates = reinterpret_cast<void*>(0x08113308);
void * const CNWSCreature__RemoveAllAssociates = reinterpret_cast<void*>(0x08112A28);
void * const CNWSCreature__RemoveAreaOfEffect = reinterpret_cast<void*>(0x0813DEC0);
void * const CNWSCreature__RemoveAssociate = reinterpret_cast<void*>(0x0810C8F4);
void * const CNWSCreature__RemoveBadEffects = reinterpret_cast<void*>(0x0812DFB8);
void * const CNWSCreature__RemoveCharmEffectsByFactionID = reinterpret_cast<void*>(0x0812DC88);
void * const CNWSCreature__RemoveCharmEffectsByOBJECTID = reinterpret_cast<void*>(0x0812DA14);
void * const CNWSCreature__RemoveCombatInvisibilityEffects = reinterpret_cast<void*>(0x081374D0);
void * const CNWSCreature__RemoveDomination = reinterpret_cast<void*>(0x081134CC);
void * const CNWSCreature__RemoveDominationEffect = reinterpret_cast<void*>(0x08110A40);
void * const CNWSCreature__RemoveFromArea = reinterpret_cast<void*>(0x0811B87C);
void * const CNWSCreature__RemoveFromAssociateList = reinterpret_cast<void*>(0x081132C4);
void * const CNWSCreature__RemoveFromInvitationsOffered = reinterpret_cast<void*>(0x08113668);
void * const CNWSCreature__RemoveFromPVPList = reinterpret_cast<void*>(0x08113924);
void * const CNWSCreature__RemoveFromVisibleList = reinterpret_cast<void*>(0x0810890C);
void * const CNWSCreature__RemoveGold = reinterpret_cast<void*>(0x081318A0);
void * const CNWSCreature__RemoveItem = reinterpret_cast<void*>(0x081000E8);
void * const CNWSCreature__RemoveItemFromRepository = reinterpret_cast<void*>(0x0813B22C);
void * const CNWSCreature__RemoveSleepEffects = reinterpret_cast<void*>(0x0812DE6C);
void * const CNWSCreature__RemoveSpellActionFromRound = reinterpret_cast<void*>(0x0813A424);
void * const CNWSCreature__RemoveWoundingEffects = reinterpret_cast<void*>(0x0812E04C);
void * const CNWSCreature__ReplyToInvitation = reinterpret_cast<void*>(0x08111930);
void * const CNWSCreature__ReprocessAssociateList = reinterpret_cast<void*>(0x0810C55C);
void * const CNWSCreature__RequestBuy = reinterpret_cast<void*>(0x0812F0F4);
void * const CNWSCreature__RequestSell = reinterpret_cast<void*>(0x0812F1E4);
void * const CNWSCreature__ResetItemPossessor = reinterpret_cast<void*>(0x081111D8);
void * const CNWSCreature__ResetPCDominatedScripts = reinterpret_cast<void*>(0x08110268);
void * const CNWSCreature__ResetUpdateTimes = reinterpret_cast<void*>(0x0813BF90);
void * const CNWSCreature__ResolveAmmunition = reinterpret_cast<void*>(0x080E7754);
void * const CNWSCreature__ResolveAttack = reinterpret_cast<void*>(0x080E6C44);
void * const CNWSCreature__ResolveAttackRoll = reinterpret_cast<void*>(0x080EB190);
void * const CNWSCreature__ResolveCachedSpecialAttacks = reinterpret_cast<void*>(0x080EC390);
void * const CNWSCreature__ResolveDamage = reinterpret_cast<void*>(0x080EC5B4);
void * const CNWSCreature__ResolveDamageShields = reinterpret_cast<void*>(0x080EFCAC);
void * const CNWSCreature__ResolveDeathAttack = reinterpret_cast<void*>(0x080EBDFC);
void * const CNWSCreature__ResolveDefensiveEffects = reinterpret_cast<void*>(0x080EDC58);
void * const CNWSCreature__ResolveElementalDamage = reinterpret_cast<void*>(0x080F5AD4);
void * const CNWSCreature__ResolveInitiative = reinterpret_cast<void*>(0x08128B18);
void * const CNWSCreature__ResolveItemCastSpell = reinterpret_cast<void*>(0x080ECB18);
void * const CNWSCreature__ResolveMeleeAnimations = reinterpret_cast<void*>(0x080EAA18);
void * const CNWSCreature__ResolveMeleeAttack = reinterpret_cast<void*>(0x080E9930);
void * const CNWSCreature__ResolveMeleeSpecialAttack = reinterpret_cast<void*>(0x080E9A98);
void * const CNWSCreature__ResolveOnHitEffect = reinterpret_cast<void*>(0x080EE6C0);
void * const CNWSCreature__ResolveOnHitVisuals = reinterpret_cast<void*>(0x080EE4D4);
void * const CNWSCreature__ResolvePostMeleeDamage = reinterpret_cast<void*>(0x080ECF80);
void * const CNWSCreature__ResolvePostRangedDamage = reinterpret_cast<void*>(0x080ED7E4);
void * const CNWSCreature__ResolveRangedAnimations = reinterpret_cast<void*>(0x080E7FE8);
void * const CNWSCreature__ResolveRangedAttack = reinterpret_cast<void*>(0x080E6FE4);
void * const CNWSCreature__ResolveRangedMiss = reinterpret_cast<void*>(0x080E8530);
void * const CNWSCreature__ResolveRangedSpecialAttack = reinterpret_cast<void*>(0x080E71D4);
void * const CNWSCreature__ResolveSafeProjectile = reinterpret_cast<void*>(0x080E7630);
void * const CNWSCreature__ResolveSituationalModifiers = reinterpret_cast<void*>(0x080EC480);
void * const CNWSCreature__ResolveSneakAttack = reinterpret_cast<void*>(0x080EB720);
void * const CNWSCreature__Rest = reinterpret_cast<void*>(0x0812D45C);
void * const CNWSCreature__RestoreCutsceneVars = reinterpret_cast<void*>(0x0813D444);
void * const CNWSCreature__RestoreItemProperties = reinterpret_cast<void*>(0x0813C600);
void * const CNWSCreature__RestoreItemPropertiesInRepository = reinterpret_cast<void*>(0x0812BC00);
void * const CNWSCreature__RunEquip = reinterpret_cast<void*>(0x08116F20);
void * const CNWSCreature__RunUnequip = reinterpret_cast<void*>(0x08117B54);
void * const CNWSCreature__SaveAssociateList = reinterpret_cast<void*>(0x0811FAA0);
void * const CNWSCreature__SaveAutoMapData = reinterpret_cast<void*>(0x0813C224);
void * const CNWSCreature__SaveCreature = reinterpret_cast<void*>(0x081209FC);
void * const CNWSCreature__SavePersonalReputationList = reinterpret_cast<void*>(0x0811F558);
void * const CNWSCreature__SaveQuickBarHack = reinterpret_cast<void*>(0x0813960C);
void * const CNWSCreature__SaveQuickButtons = reinterpret_cast<void*>(0x081230F4);
void * const CNWSCreature__SavingThrowRoll = reinterpret_cast<void*>(0x080F0A90);
void * const CNWSCreature__SawTrapInformAssociates = reinterpret_cast<void*>(0x081124A0);
void * const CNWSCreature__SendFeedbackMessage = reinterpret_cast<void*>(0x0813533C);
void * const CNWSCreature__SendFeedbackString = reinterpret_cast<void*>(0x0813CECC);
void * const CNWSCreature__SetActivity = reinterpret_cast<void*>(0x081152E8);
void * const CNWSCreature__SetActivityLocked = reinterpret_cast<void*>(0x0813E9B0);
void * const CNWSCreature__SetAIState = reinterpret_cast<void*>(0x0813D998);
void * const CNWSCreature__SetAIStateFlag = reinterpret_cast<void*>(0x0813D970);
void * const CNWSCreature__SetAlive = reinterpret_cast<void*>(0x0813D9DC);
void * const CNWSCreature__SetAllTilesExplored = reinterpret_cast<void*>(0x08124D7C);
void * const CNWSCreature__SetAlreadyRemovedFromEncounter = reinterpret_cast<void*>(0x0813EC8C);
void * const CNWSCreature__SetAmbientAnimationState = reinterpret_cast<void*>(0x0813E338);
void * const CNWSCreature__SetAnimalCompanionCreatureType = reinterpret_cast<void*>(0x0813E498);
void * const CNWSCreature__SetAnimalCompanionName = reinterpret_cast<void*>(0x0813E3F4);
void * const CNWSCreature__SetAnimation = reinterpret_cast<void*>(0x0811B544);
void * const CNWSCreature__SetAssociateListenPatterns = reinterpret_cast<void*>(0x0810CB90);
void * const CNWSCreature__SetAssociatesToForgetAggression = reinterpret_cast<void*>(0x08112C00);
void * const CNWSCreature__SetAssociateType = reinterpret_cast<void*>(0x0813D388);
void * const CNWSCreature__SetAttackTarget = reinterpret_cast<void*>(0x0813EA00);
void * const CNWSCreature__SetAttemptedAttackTarget = reinterpret_cast<void*>(0x0813EA24);
void * const CNWSCreature__SetAttemptedSpellTarget = reinterpret_cast<void*>(0x0813EA48);
void * const CNWSCreature__SetAutoMapData = reinterpret_cast<void*>(0x0813A86C);
void * const CNWSCreature__SetBlindsightDistance = reinterpret_cast<void*>(0x0813ED00);
void * const CNWSCreature__SetBodyBag = reinterpret_cast<void*>(0x0813EFE4);
void * const CNWSCreature__SetBodyBagId = reinterpret_cast<void*>(0x0813EAFC);
void * const CNWSCreature__SetBroadcastedAOOTo = reinterpret_cast<void*>(0x0813C504);
void * const CNWSCreature__SetCalculateNPCWeight = reinterpret_cast<void*>(0x0813ED58);
void * const CNWSCreature__SetCombatMode = reinterpret_cast<void*>(0x080F982C);
void * const CNWSCreature__SetCombatState = reinterpret_cast<void*>(0x0813C524);
void * const CNWSCreature__SetCounterSpellTarget = reinterpret_cast<void*>(0x0813E314);
void * const CNWSCreature__SetCreatureSize = reinterpret_cast<void*>(0x0813DB18);
void * const CNWSCreature__SetCreatureState = reinterpret_cast<void*>(0x0813D8F8);
void * const CNWSCreature__SetCurrentItemContainer = reinterpret_cast<void*>(0x0813DCA0);
void * const CNWSCreature__SetCutsceneCameraMode = reinterpret_cast<void*>(0x0813E008);
void * const CNWSCreature__SetCutsceneCameraMovementRateFactor = reinterpret_cast<void*>(0x0813E050);
void * const CNWSCreature__SetCutsceneGhost = reinterpret_cast<void*>(0x0813E02C);
void * const CNWSCreature__SetDead = reinterpret_cast<void*>(0x0813D9C8);
void * const CNWSCreature__SetDecayTime = reinterpret_cast<void*>(0x0813EAD8);
void * const CNWSCreature__SetDefensiveCastingMode = reinterpret_cast<void*>(0x08112EB0);
void * const CNWSCreature__SetDesiredAreaId = reinterpret_cast<void*>(0x0813DF58);
void * const CNWSCreature__SetDesiredAreaLocation = reinterpret_cast<void*>(0x0813DF90);
void * const CNWSCreature__SetDesiredAreaUpdateComplete = reinterpret_cast<void*>(0x0813DFC0);
void * const CNWSCreature__SetDesiredCombatMode = reinterpret_cast<void*>(0x0813DABC);
void * const CNWSCreature__SetDetectMode = reinterpret_cast<void*>(0x08112E84);
void * const CNWSCreature__SetDisarmable = reinterpret_cast<void*>(0x0813DA20);
void * const CNWSCreature__SetDisplayName = reinterpret_cast<void*>(0x0813DDA4);
void * const CNWSCreature__SetDMCharacter = reinterpret_cast<void*>(0x0813EC64);
void * const CNWSCreature__SetDriveMode = reinterpret_cast<void*>(0x0813E1A4);
void * const CNWSCreature__SetDriveModeMoveFactor = reinterpret_cast<void*>(0x0813D9EC);
void * const CNWSCreature__SetDropItemAnimationPlayed = reinterpret_cast<void*>(0x0813D640);
void * const CNWSCreature__SetEffectSpellId = reinterpret_cast<void*>(0x0813E818);
void * const CNWSCreature__SetEncounterId = reinterpret_cast<void*>(0x0813E7AC);
void * const CNWSCreature__SetEncumbranceState = reinterpret_cast<void*>(0x0813E7E0);
void * const CNWSCreature__SetEquipArrayIndex = reinterpret_cast<void*>(0x0813DC34);
void * const CNWSCreature__SetEquippedWeight = reinterpret_cast<void*>(0x0813ED24);
void * const CNWSCreature__SetExcitedState = reinterpret_cast<void*>(0x0812D29C);
void * const CNWSCreature__SetExternalCombatModeEnabled = reinterpret_cast<void*>(0x0813F02C);
void * const CNWSCreature__SetFacingAndAnimationDone = reinterpret_cast<void*>(0x0813EFF8);
void * const CNWSCreature__SetFactionId = reinterpret_cast<void*>(0x0813E6C4);
void * const CNWSCreature__SetFamiliarCreatureType = reinterpret_cast<void*>(0x0813E5D0);
void * const CNWSCreature__SetFamiliarName = reinterpret_cast<void*>(0x0813E52C);
void * const CNWSCreature__SetFootstepType = reinterpret_cast<void*>(0x0813EF70);
void * const CNWSCreature__SetForcedWalk = reinterpret_cast<void*>(0x0813E170);
void * const CNWSCreature__SetGoingToBeAttackedBy = reinterpret_cast<void*>(0x0813EA90);
void * const CNWSCreature__SetGold = reinterpret_cast<void*>(0x0813CE38);
void * const CNWSCreature__SetHasArms = reinterpret_cast<void*>(0x0813DAD0);
void * const CNWSCreature__SetHasLegs = reinterpret_cast<void*>(0x0813DAF4);
void * const CNWSCreature__SetHasted = reinterpret_cast<void*>(0x0813E098);
void * const CNWSCreature__SetHealAnimationPlayed = reinterpret_cast<void*>(0x0813D5B0);
void * const CNWSCreature__SetId = reinterpret_cast<void*>(0x0813BAE8);
void * const CNWSCreature__SetInitiativeExpired = reinterpret_cast<void*>(0x0813E1EC);
void * const CNWSCreature__SetInitiativeRoll = reinterpret_cast<void*>(0x0813E1C8);
void * const CNWSCreature__SetInTransit = reinterpret_cast<void*>(0x0813D024);
void * const CNWSCreature__SetInvitedToParty = reinterpret_cast<void*>(0x0813D298);
void * const CNWSCreature__SetInvitedToPartyBy = reinterpret_cast<void*>(0x0813E114);
void * const CNWSCreature__SetIsDiseased = reinterpret_cast<void*>(0x0813D940);
void * const CNWSCreature__SetIsImmortal = reinterpret_cast<void*>(0x0813EF04);
void * const CNWSCreature__SetIsPoisoned = reinterpret_cast<void*>(0x0813D91C);
void * const CNWSCreature__SetIsPolymorphed = reinterpret_cast<void*>(0x0813ED8C);
void * const CNWSCreature__SetItemCastSpellBroadcastAOO = reinterpret_cast<void*>(0x0813D828);
void * const CNWSCreature__SetItemContainerArrayIndex = reinterpret_cast<void*>(0x0813DC7C);
void * const CNWSCreature__SetJumpedRecently = reinterpret_cast<void*>(0x0813DE3C);
void * const CNWSCreature__SetLastAmmunitionWarning = reinterpret_cast<void*>(0x0813D83C);
void * const CNWSCreature__SetLastAssociateCommand = reinterpret_cast<void*>(0x0813E374);
void * const CNWSCreature__SetLastBlockingDoor = reinterpret_cast<void*>(0x0813EB20);
void * const CNWSCreature__SetLastCounterDomainLevel = reinterpret_cast<void*>(0x0813E2AC);
void * const CNWSCreature__SetLastCounterMetaType = reinterpret_cast<void*>(0x0813E288);
void * const CNWSCreature__SetLastCounterSpellClass = reinterpret_cast<void*>(0x0813E264);
void * const CNWSCreature__SetLastCounterSpellID = reinterpret_cast<void*>(0x0813E240);
void * const CNWSCreature__SetLastHearbeatTime = reinterpret_cast<void*>(0x0813EFB8);
void * const CNWSCreature__SetLastHideRoll = reinterpret_cast<void*>(0x0813E928);
void * const CNWSCreature__SetLastItemCastSpell = reinterpret_cast<void*>(0x0813D7BC);
void * const CNWSCreature__SetLastItemCastSpellLevel = reinterpret_cast<void*>(0x0813D7E0);
void * const CNWSCreature__SetLastListenRoll = reinterpret_cast<void*>(0x0813E904);
void * const CNWSCreature__SetLastMoveSilentlyRoll = reinterpret_cast<void*>(0x0813E94C);
void * const CNWSCreature__SetLastPerceived = reinterpret_cast<void*>(0x0813E83C);
void * const CNWSCreature__SetLastPerceptionHeard = reinterpret_cast<void*>(0x0813E860);
void * const CNWSCreature__SetLastPerceptionInaudible = reinterpret_cast<void*>(0x0813E8A8);
void * const CNWSCreature__SetLastPerceptionSeen = reinterpret_cast<void*>(0x0813E884);
void * const CNWSCreature__SetLastPerceptionVanished = reinterpret_cast<void*>(0x0813E8CC);
void * const CNWSCreature__SetLastPickupFailed = reinterpret_cast<void*>(0x0813E7F4);
void * const CNWSCreature__SetLastSpellCastItem = reinterpret_cast<void*>(0x0813D7F4);
void * const CNWSCreature__SetLastSpellUnReadied = reinterpret_cast<void*>(0x0813D798);
void * const CNWSCreature__SetLastSpotRoll = reinterpret_cast<void*>(0x0813E8E0);
void * const CNWSCreature__SetLastTrapDetected = reinterpret_cast<void*>(0x0813D870);
void * const CNWSCreature__SetListenCheckDistance = reinterpret_cast<void*>(0x0813ECB4);
void * const CNWSCreature__SetLockAnimationPlayed = reinterpret_cast<void*>(0x0813D61C);
void * const CNWSCreature__SetLockOrientationToObject = reinterpret_cast<void*>(0x0812C8BC);
void * const CNWSCreature__SetLootable = reinterpret_cast<void*>(0x0813EAB4);
void * const CNWSCreature__SetMagicalArrowsEquipped = reinterpret_cast<void*>(0x0813D4FC);
void * const CNWSCreature__SetMagicalBoltsEquipped = reinterpret_cast<void*>(0x0813D520);
void * const CNWSCreature__SetMagicalBulletsEquipped = reinterpret_cast<void*>(0x0813D544);
void * const CNWSCreature__SetMasterId = reinterpret_cast<void*>(0x0813E35C);
void * const CNWSCreature__SetMaxListenCheckDistance = reinterpret_cast<void*>(0x0813ECDC);
void * const CNWSCreature__SetMaxSpotCheckDistance = reinterpret_cast<void*>(0x0813ECC8);
void * const CNWSCreature__SetMode = reinterpret_cast<void*>(0x0813C66C);
void * const CNWSCreature__SetModelType = reinterpret_cast<void*>(0x0813DB3C);
void * const CNWSCreature__SetMovementRateFactor = reinterpret_cast<void*>(0x08124130);
void * const CNWSCreature__SetNoPermDeath = reinterpret_cast<void*>(0x0813EF28);
void * const CNWSCreature__SetNumAreas = reinterpret_cast<void*>(0x0813EBF4);
void * const CNWSCreature__SetNumCharSheetViewers = reinterpret_cast<void*>(0x0813DA58);
void * const CNWSCreature__SetOnCreationScriptExecuted = reinterpret_cast<void*>(0x0813DE60);
void * const CNWSCreature__SetOriginalFactionId = reinterpret_cast<void*>(0x0813E6DC);
void * const CNWSCreature__SetPassiveAttackBehaviour = reinterpret_cast<void*>(0x0813E980);
void * const CNWSCreature__SetPCDominatedScripts = reinterpret_cast<void*>(0x0810FA40);
void * const CNWSCreature__SetPendingRealization = reinterpret_cast<void*>(0x0813EF94);
void * const CNWSCreature__SetPersonalReputation = reinterpret_cast<void*>(0x0813E74C);
void * const CNWSCreature__SetPickUpItemAnimationPlayed = reinterpret_cast<void*>(0x0813D664);
void * const CNWSCreature__SetPlayerCharacter = reinterpret_cast<void*>(0x0813E300);
void * const CNWSCreature__SetPolymorphLocked = reinterpret_cast<void*>(0x0813EEE0);
void * const CNWSCreature__SetPonyRide = reinterpret_cast<void*>(0x0813D8D4);
void * const CNWSCreature__SetPortrait = reinterpret_cast<void*>(0x0813EB90);
void * const CNWSCreature__SetPortraitId = reinterpret_cast<void*>(0x0812E7F4);
void * const CNWSCreature__SetPreDominationFactionId = reinterpret_cast<void*>(0x0813E6F4);
void * const CNWSCreature__SetPreferredAttackDistance = reinterpret_cast<void*>(0x0813DBE0);
void * const CNWSCreature__SetPrePolymorphCON = reinterpret_cast<void*>(0x0813EDF4);
void * const CNWSCreature__SetPrePolymorphDEX = reinterpret_cast<void*>(0x0813EE08);
void * const CNWSCreature__SetPrePolymorphSTR = reinterpret_cast<void*>(0x0813EDE0);
void * const CNWSCreature__SetPVPPlayerLikesMe = reinterpret_cast<void*>(0x081125B4);
void * const CNWSCreature__SetQuickbarButton_AssociateCommand = reinterpret_cast<void*>(0x0813CA38);
void * const CNWSCreature__SetQuickbarButton_CommandLine = reinterpret_cast<void*>(0x0813CD20);
void * const CNWSCreature__SetQuickbarButton_DM_General_ResRefParam = reinterpret_cast<void*>(0x0813CD8C);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreateCreature = reinterpret_cast<void*>(0x0813CA80);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreateEncounter = reinterpret_cast<void*>(0x0813CB40);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreateItem = reinterpret_cast<void*>(0x0813CAE0);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreatePlaceable = reinterpret_cast<void*>(0x0813CCC0);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreatePortal = reinterpret_cast<void*>(0x0813CC60);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreateTrigger = reinterpret_cast<void*>(0x0813CC00);
void * const CNWSCreature__SetQuickbarButton_DungeonMaster_CreateWaypoint = reinterpret_cast<void*>(0x0813CBA0);
void * const CNWSCreature__SetQuickbarButton_GeneralINTParam = reinterpret_cast<void*>(0x0813CE00);
void * const CNWSCreature__SetQuickbarButton_GeneralNoParam = reinterpret_cast<void*>(0x0813CDD4);
void * const CNWSCreature__SetQuickbarButton_Item = reinterpret_cast<void*>(0x0813C960);
void * const CNWSCreature__SetQuickbarButton_Spell = reinterpret_cast<void*>(0x0813C9A0);
void * const CNWSCreature__SetQuickbarButton_SpellLikeAbility = reinterpret_cast<void*>(0x0813C9FC);
void * const CNWSCreature__SetRepositoryArrayIndex = reinterpret_cast<void*>(0x0813DC58);
void * const CNWSCreature__SetReputation = reinterpret_cast<void*>(0x0813E70C);
void * const CNWSCreature__SetScriptName = reinterpret_cast<void*>(0x0813D720);
void * const CNWSCreature__SetSilent = reinterpret_cast<void*>(0x0813E074);
void * const CNWSCreature__SetSittingObject = reinterpret_cast<void*>(0x0813D4D8);
void * const CNWSCreature__SetSlowed = reinterpret_cast<void*>(0x0813E0BC);
void * const CNWSCreature__SetSoundSet = reinterpret_cast<void*>(0x0813EF4C);
void * const CNWSCreature__SetSpellTarget = reinterpret_cast<void*>(0x0813EA6C);
void * const CNWSCreature__SetSpotCheckDistance = reinterpret_cast<void*>(0x0813ECA0);
void * const CNWSCreature__SetStandardFactionReputation = reinterpret_cast<void*>(0x08112938);
void * const CNWSCreature__SetStealAnimationPlayed = reinterpret_cast<void*>(0x0813D568);
void * const CNWSCreature__SetStealAttemptDetected = reinterpret_cast<void*>(0x0813D58C);
void * const CNWSCreature__SetStealthMode = reinterpret_cast<void*>(0x080F975C);
void * const CNWSCreature__SetSummonedAnimalCompanion = reinterpret_cast<void*>(0x0813E3E0);
void * const CNWSCreature__SetSummonedFamiliar = reinterpret_cast<void*>(0x0813E518);
void * const CNWSCreature__SetTaunt = reinterpret_cast<void*>(0x0813E128);
void * const CNWSCreature__SetTauntAnimationPlayed = reinterpret_cast<void*>(0x0813D688);
void * const CNWSCreature__SetTileExplored = reinterpret_cast<void*>(0x08124E4C);
void * const CNWSCreature__SetTrapAnimationPlayed = reinterpret_cast<void*>(0x0813D5D4);
void * const CNWSCreature__SetUnlockAnimationPlayed = reinterpret_cast<void*>(0x0813D5F8);
void * const CNWSCreature__SetUpdateCombatInformation = reinterpret_cast<void*>(0x0813DA34);
void * const CNWSCreature__SetUpdateDisplayName = reinterpret_cast<void*>(0x0813DE18);
void * const CNWSCreature__SetVisionType = reinterpret_cast<void*>(0x0813DFD4);
void * const CNWSCreature__SetWalkAnimation = reinterpret_cast<void*>(0x0813E15C);
void * const CNWSCreature__SetWeaponScale = reinterpret_cast<void*>(0x0813DBBC);
void * const CNWSCreature__SignalMeleeDamage = reinterpret_cast<void*>(0x080EACAC);
void * const CNWSCreature__SignalRangedDamage = reinterpret_cast<void*>(0x080E94DC);
void * const CNWSCreature__SpawnInHeartbeatPerception = reinterpret_cast<void*>(0x0811972C);
void * const CNWSCreature__SplitItem = reinterpret_cast<void*>(0x0811A1D0);
void * const CNWSCreature__StartBarter = reinterpret_cast<void*>(0x0812FC6C);
void * const CNWSCreature__StartGuiTimingBar = reinterpret_cast<void*>(0x0813D1A0);
void * const CNWSCreature__StopGuiTimingBar = reinterpret_cast<void*>(0x0813D224);
void * const CNWSCreature__StoreCutsceneVars = reinterpret_cast<void*>(0x0813D424);
void * const CNWSCreature__SummonAnimalCompanion = reinterpret_cast<void*>(0x0810D1C0);
void * const CNWSCreature__SummonAssociate = reinterpret_cast<void*>(0x0810DA28);
void * const CNWSCreature__SummonFamiliar = reinterpret_cast<void*>(0x0810D628);
void * const CNWSCreature__TerminateClientSidePath = reinterpret_cast<void*>(0x08112F5C);
void * const CNWSCreature__TestAIStateAsMode = reinterpret_cast<void*>(0x0813C214);
void * const CNWSCreature__ToggleMode = reinterpret_cast<void*>(0x0812BCB4);
void * const CNWSCreature__TransferGold = reinterpret_cast<void*>(0x0812F3E8);
void * const CNWSCreature__TranslateAddress = reinterpret_cast<void*>(0x0813C4B0);
void * const CNWSCreature__UnequipItem = reinterpret_cast<void*>(0x0811B7B0);
void * const CNWSCreature__UnPolymorph = reinterpret_cast<void*>(0x081369F8);
void * const CNWSCreature__UnpossessCreature = reinterpret_cast<void*>(0x0810E83C);
void * const CNWSCreature__UnpossessCreatureDM = reinterpret_cast<void*>(0x08113420);
void * const CNWSCreature__UnpossessFamiliar = reinterpret_cast<void*>(0x0810E174);
void * const CNWSCreature__UnsummonMyself = reinterpret_cast<void*>(0x0810CF84);
void * const CNWSCreature__UpdateActionQueue = reinterpret_cast<void*>(0x08139CA4);
void * const CNWSCreature__UpdateAppearanceDependantInfo = reinterpret_cast<void*>(0x0812F900);
void * const CNWSCreature__UpdateAppearanceForEquippedItems = reinterpret_cast<void*>(0x0812EFA0);
void * const CNWSCreature__UpdateAttributesOnEffect = reinterpret_cast<void*>(0x0811E0A8);
void * const CNWSCreature__UpdateAutoMap = reinterpret_cast<void*>(0x08119E24);
void * const CNWSCreature__UpdateCombatRoundTimer = reinterpret_cast<void*>(0x0811D740);
void * const CNWSCreature__UpdateEffectPtrs = reinterpret_cast<void*>(0x0811DD04);
void * const CNWSCreature__UpdateEncumbranceState = reinterpret_cast<void*>(0x08111E94);
void * const CNWSCreature__UpdateExcitedStateTimer = reinterpret_cast<void*>(0x0812D3C8);
void * const CNWSCreature__UpdatePersonalSpace = reinterpret_cast<void*>(0x0812F6B4);
void * const CNWSCreature__UpdateSpecialAttacks = reinterpret_cast<void*>(0x0813A374);
void * const CNWSCreature__UpdateSubareasOnJumpPosition = reinterpret_cast<void*>(0x081037CC);
void * const CNWSCreature__UpdateSubareasOnMoveTo = reinterpret_cast<void*>(0x081035E0);
void * const CNWSCreature__UpdateTrapCheck = reinterpret_cast<void*>(0x0811A2F4);
void * const CNWSCreature__UpdateTrapCheckDM = reinterpret_cast<void*>(0x0813BFC4);
void * const CNWSCreature__UpdateVisibleList = reinterpret_cast<void*>(0x08108500);
void * const CNWSCreature__UseFeat = reinterpret_cast<void*>(0x0812A004);
void * const CNWSCreature__UseItem = reinterpret_cast<void*>(0x0812B958);
void * const CNWSCreature__UseLoreOnItem = reinterpret_cast<void*>(0x08131680);
void * const CNWSCreature__UseSkill = reinterpret_cast<void*>(0x0812B1D8);
void * const CNWSCreature__ValidateCounterSpellData = reinterpret_cast<void*>(0x08127C08);
void * const CNWSCreature__WalkUpdateLocation = reinterpret_cast<void*>(0x08104174);
void * const CNWSCreature__WalkUpdateLocationDistance = reinterpret_cast<void*>(0x081048A0);
void * const CNWSCreature__WalkUpdateLocationTestDistance = reinterpret_cast<void*>(0x08105040);

void * const CNWSCreatureStats__CNWSCreatureStatsCtor = reinterpret_cast<void*>(0x0813FBB4);
void * const CNWSCreatureStats__CNWSCreatureStatsDtor = reinterpret_cast<void*>(0x0814035C);
void * const CNWSCreatureStats__AddExperience = reinterpret_cast<void*>(0x08152478);
void * const CNWSCreatureStats__AddFeat = reinterpret_cast<void*>(0x08153B14);
void * const CNWSCreatureStats__AddKnownSpell = reinterpret_cast<void*>(0x08155118);
void * const CNWSCreatureStats__AddSpellLikeAbilityToList = reinterpret_cast<void*>(0x08165078);
void * const CNWSCreatureStats__AdjustAlignment = reinterpret_cast<void*>(0x081497D0);
void * const CNWSCreatureStats__AdjustSpellUsesPerDay = reinterpret_cast<void*>(0x08160088);
void * const CNWSCreatureStats__AutoMemorizeSpells = reinterpret_cast<void*>(0x0815C614);
void * const CNWSCreatureStats__CalcLevelUpNumberFeats = reinterpret_cast<void*>(0x08160E60);
void * const CNWSCreatureStats__CalcStatModifier = reinterpret_cast<void*>(0x08164554);
void * const CNWSCreatureStats__CanChooseFeat = reinterpret_cast<void*>(0x0815BC80);
void * const CNWSCreatureStats__CanLevelUp = reinterpret_cast<void*>(0x08158354);
void * const CNWSCreatureStats__CheckSpellSuitability = reinterpret_cast<void*>(0x0815E04C);
void * const CNWSCreatureStats__ClearFeats = reinterpret_cast<void*>(0x08164648);
void * const CNWSCreatureStats__ClearMemorizedSpellSlot = reinterpret_cast<void*>(0x081648D0);
void * const CNWSCreatureStats__ComputeFeatBonuses = reinterpret_cast<void*>(0x08162C14);
void * const CNWSCreatureStats__ComputeNumberKnownSpellsLeft = reinterpret_cast<void*>(0x0815E24C);
void * const CNWSCreatureStats__ConfirmDomainSpell = reinterpret_cast<void*>(0x08164800);
void * const CNWSCreatureStats__DecrementFeatRemainingUses = reinterpret_cast<void*>(0x081646EC);
void * const CNWSCreatureStats__DecrementSpellsPerDayLeft = reinterpret_cast<void*>(0x08164D04);
void * const CNWSCreatureStats__FeatAcquired = reinterpret_cast<void*>(0x08164ED4);
void * const CNWSCreatureStats__FeatRequirementsMet = reinterpret_cast<void*>(0x0815BF44);
void * const CNWSCreatureStats__FeatRequirementsMetAfterLevelUp = reinterpret_cast<void*>(0x08161160);
void * const CNWSCreatureStats__GetACNaturalBase = reinterpret_cast<void*>(0x0815E684);
void * const CNWSCreatureStats__GetAlignmentString = reinterpret_cast<void*>(0x08151DFC);
void * const CNWSCreatureStats__GetArmorClassVersus = reinterpret_cast<void*>(0x0814088C);
void * const CNWSCreatureStats__GetAttackModifierVersus = reinterpret_cast<void*>(0x081445B4);
void * const CNWSCreatureStats__GetAttacksPerRound = reinterpret_cast<void*>(0x08163D18);
void * const CNWSCreatureStats__GetBaseAttackBonus = reinterpret_cast<void*>(0x08142054);
void * const CNWSCreatureStats__GetBaseFortSavingThrow = reinterpret_cast<void*>(0x081529F0);
void * const CNWSCreatureStats__GetBaseReflexSavingThrow = reinterpret_cast<void*>(0x08152CC0);
void * const CNWSCreatureStats__GetBaseWillSavingThrow = reinterpret_cast<void*>(0x08152B4C);
void * const CNWSCreatureStats__GetBonusFeat = reinterpret_cast<void*>(0x08165550);
void * const CNWSCreatureStats__GetCanUseRelatedCategory = reinterpret_cast<void*>(0x08165580);
void * const CNWSCreatureStats__GetCanUseSkill = reinterpret_cast<void*>(0x08152E1C);
void * const CNWSCreatureStats__GetCanUseSkillAfterLevelUp = reinterpret_cast<void*>(0x08161918);
void * const CNWSCreatureStats__GetCasterLevel = reinterpret_cast<void*>(0x0815FE20);
void * const CNWSCreatureStats__GetCHAStat = reinterpret_cast<void*>(0x081641AC);
void * const CNWSCreatureStats__GetClass = reinterpret_cast<void*>(0x08163DA4);
void * const CNWSCreatureStats__GetClassInfo = reinterpret_cast<void*>(0x08163DD0);
void * const CNWSCreatureStats__GetClassLevel = reinterpret_cast<void*>(0x08163E50);
void * const CNWSCreatureStats__GetClassNegativeLevels = reinterpret_cast<void*>(0x08163E9C);
void * const CNWSCreatureStats__GetClassString = reinterpret_cast<void*>(0x081643FC);
void * const CNWSCreatureStats__GetCONStat = reinterpret_cast<void*>(0x08164020);
void * const CNWSCreatureStats__GetCreatureDamageDice = reinterpret_cast<void*>(0x0814425C);
void * const CNWSCreatureStats__GetCreatureDamageDie = reinterpret_cast<void*>(0x08144368);
void * const CNWSCreatureStats__GetCreatureHasTalent = reinterpret_cast<void*>(0x08155888);
void * const CNWSCreatureStats__GetCreatureTalentRandom = reinterpret_cast<void*>(0x08155B18);
void * const CNWSCreatureStats__GetCreatureTalentRandomFeat = reinterpret_cast<void*>(0x0815F9E8);
void * const CNWSCreatureStats__GetCreatureTalentRandomKnownSpell = reinterpret_cast<void*>(0x08160220);
void * const CNWSCreatureStats__GetCreatureTalentRandomMemorisedSpell = reinterpret_cast<void*>(0x08160764);
void * const CNWSCreatureStats__GetCreatureTalentRandomSkill = reinterpret_cast<void*>(0x0815FB84);
void * const CNWSCreatureStats__GetCreatureTalentRandomSpell = reinterpret_cast<void*>(0x08165404);
void * const CNWSCreatureStats__GetCreatureTalentRandomSpellFromItem = reinterpret_cast<void*>(0x0815F13C);
void * const CNWSCreatureStats__GetCreatureTalentRandomSpellLikeAbility = reinterpret_cast<void*>(0x0815EE34);
void * const CNWSCreatureStats__GetCriticalHitMultiplier = reinterpret_cast<void*>(0x0814C4A0);
void * const CNWSCreatureStats__GetCriticalHitRoll = reinterpret_cast<void*>(0x0814C31C);
void * const CNWSCreatureStats__GetDamageBonus = reinterpret_cast<void*>(0x081476F0);
void * const CNWSCreatureStats__GetDamageRoll = reinterpret_cast<void*>(0x0814A8F0);
void * const CNWSCreatureStats__GetDEXMod = reinterpret_cast<void*>(0x08151868);
void * const CNWSCreatureStats__GetDEXStat = reinterpret_cast<void*>(0x081517B8);
void * const CNWSCreatureStats__GetDomain1 = reinterpret_cast<void*>(0x08164E60);
void * const CNWSCreatureStats__GetDomain2 = reinterpret_cast<void*>(0x08164EAC);
void * const CNWSCreatureStats__GetEffectImmunity = reinterpret_cast<void*>(0x0815FF10);
void * const CNWSCreatureStats__GetEffectiveCRForPotentialLevel = reinterpret_cast<void*>(0x0815284C);
void * const CNWSCreatureStats__GetEpicWeaponDevastatingCritical = reinterpret_cast<void*>(0x08156CCC);
void * const CNWSCreatureStats__GetEpicWeaponFocus = reinterpret_cast<void*>(0x08155FF0);
void * const CNWSCreatureStats__GetEpicWeaponOverwhelmingCritical = reinterpret_cast<void*>(0x08156A18);
void * const CNWSCreatureStats__GetEpicWeaponSpecialization = reinterpret_cast<void*>(0x08156550);
void * const CNWSCreatureStats__GetExpNeededForLevelUp = reinterpret_cast<void*>(0x08152718);
void * const CNWSCreatureStats__GetFavoredEnemyBonus = reinterpret_cast<void*>(0x0815E9E0);
void * const CNWSCreatureStats__GetFeat = reinterpret_cast<void*>(0x08165520);
void * const CNWSCreatureStats__GetFeatRemainingUses = reinterpret_cast<void*>(0x08153E00);
void * const CNWSCreatureStats__GetFeatSourceClass = reinterpret_cast<void*>(0x081623F4);
void * const CNWSCreatureStats__GetFeatTotalUses = reinterpret_cast<void*>(0x0815479C);
void * const CNWSCreatureStats__GetFortSavingThrow = reinterpret_cast<void*>(0x08164F40);
void * const CNWSCreatureStats__GetFullName = reinterpret_cast<void*>(0x08163C20);
void * const CNWSCreatureStats__GetHasLostClassAbilities = reinterpret_cast<void*>(0x08163EF8);
void * const CNWSCreatureStats__GetHasSilencedSpell = reinterpret_cast<void*>(0x08155520);
void * const CNWSCreatureStats__GetHasStilledSpell = reinterpret_cast<void*>(0x081556D8);
void * const CNWSCreatureStats__GetHighestLevelKnown = reinterpret_cast<void*>(0x08164BCC);
void * const CNWSCreatureStats__GetHighestLevelOfFeat = reinterpret_cast<void*>(0x0816562C);
void * const CNWSCreatureStats__GetHitDie = reinterpret_cast<void*>(0x081578D8);
void * const CNWSCreatureStats__GetINTStat = reinterpret_cast<void*>(0x081640A4);
void * const CNWSCreatureStats__GetIsClass = reinterpret_cast<void*>(0x08163DFC);
void * const CNWSCreatureStats__GetIsClassAvailable = reinterpret_cast<void*>(0x08158534);
void * const CNWSCreatureStats__GetIsDomainSpell = reinterpret_cast<void*>(0x08164848);
void * const CNWSCreatureStats__GetIsEpitomeOfAlignment = reinterpret_cast<void*>(0x0814954C);
void * const CNWSCreatureStats__GetIsInKnownSpellList = reinterpret_cast<void*>(0x0815DF28);
void * const CNWSCreatureStats__GetIsInSpellLikeAbilityList = reinterpret_cast<void*>(0x081651EC);
void * const CNWSCreatureStats__GetIsWeaponOfChoice = reinterpret_cast<void*>(0x08160F50);
void * const CNWSCreatureStats__GetKnownSpell = reinterpret_cast<void*>(0x0816491C);
void * const CNWSCreatureStats__GetLargePortrait = reinterpret_cast<void*>(0x081642BC);
void * const CNWSCreatureStats__GetLevel = reinterpret_cast<void*>(0x08163CC8);
void * const CNWSCreatureStats__GetLevelStats = reinterpret_cast<void*>(0x08163EC8);
void * const CNWSCreatureStats__GetMeetsPrestigeClassRequirements = reinterpret_cast<void*>(0x08158748);
void * const CNWSCreatureStats__GetMeleeAttackBonus = reinterpret_cast<void*>(0x08143068);
void * const CNWSCreatureStats__GetMeleeDamageBonus = reinterpret_cast<void*>(0x08143524);
void * const CNWSCreatureStats__GetMemorizedSpellInSlot = reinterpret_cast<void*>(0x08164984);
void * const CNWSCreatureStats__GetMemorizedSpellInSlotMetaType = reinterpret_cast<void*>(0x08164B00);
void * const CNWSCreatureStats__GetMemorizedSpellInSlotReady = reinterpret_cast<void*>(0x08164A08);
void * const CNWSCreatureStats__GetMemorizedSpellReadyCount__0 = reinterpret_cast<void*>(0x0815E5AC);
void * const CNWSCreatureStats__GetMemorizedSpellReadyCount__1 = reinterpret_cast<void*>(0x08165360);
void * const CNWSCreatureStats__GetMemorizedSpellReadyCount__2 = reinterpret_cast<void*>(0x081653B0);
void * const CNWSCreatureStats__GetNumberKnownSpells = reinterpret_cast<void*>(0x08164B8C);
void * const CNWSCreatureStats__GetNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x08164C34);
void * const CNWSCreatureStats__GetNumLevelsOfClass__0 = reinterpret_cast<void*>(0x081634E0);
void * const CNWSCreatureStats__GetNumLevelsOfClass__1 = reinterpret_cast<void*>(0x08165750);
void * const CNWSCreatureStats__GetPotentialLevel = reinterpret_cast<void*>(0x08152794);
void * const CNWSCreatureStats__GetPrimaryMod = reinterpret_cast<void*>(0x0815D778);
void * const CNWSCreatureStats__GetRaceString = reinterpret_cast<void*>(0x08164348);
void * const CNWSCreatureStats__GetRangedAttackBonus = reinterpret_cast<void*>(0x0814374C);
void * const CNWSCreatureStats__GetRangedDamageBonus = reinterpret_cast<void*>(0x08143B5C);
void * const CNWSCreatureStats__GetReflexSavingThrow = reinterpret_cast<void*>(0x0815DB54);
void * const CNWSCreatureStats__GetSchool = reinterpret_cast<void*>(0x08164E14);
void * const CNWSCreatureStats__GetSimpleAlignmentGoodEvil = reinterpret_cast<void*>(0x08163F74);
void * const CNWSCreatureStats__GetSimpleAlignmentLawChaos = reinterpret_cast<void*>(0x08163F4C);
void * const CNWSCreatureStats__GetSkillRank = reinterpret_cast<void*>(0x08152F5C);
void * const CNWSCreatureStats__GetSmallPortrait = reinterpret_cast<void*>(0x08164230);
void * const CNWSCreatureStats__GetSpellFailure = reinterpret_cast<void*>(0x0816569C);
void * const CNWSCreatureStats__GetSpellGainWithBonus = reinterpret_cast<void*>(0x08140520);
void * const CNWSCreatureStats__GetSpellGainWithBonusAfterLevelUp = reinterpret_cast<void*>(0x08161AB4);
void * const CNWSCreatureStats__GetSpellLikeAbilityCasterLevel = reinterpret_cast<void*>(0x081655C8);
void * const CNWSCreatureStats__GetSpellMinAbilityMet = reinterpret_cast<void*>(0x08157210);
void * const CNWSCreatureStats__GetSpellResistance = reinterpret_cast<void*>(0x0815E3B0);
void * const CNWSCreatureStats__GetSpellsOfLevelReady = reinterpret_cast<void*>(0x081624BC);
void * const CNWSCreatureStats__GetSpellsPerDayLeft = reinterpret_cast<void*>(0x08164CC4);
void * const CNWSCreatureStats__GetSpellUsesLeft = reinterpret_cast<void*>(0x08156F80);
void * const CNWSCreatureStats__GetStatBonusesFromFeats = reinterpret_cast<void*>(0x0816260C);
void * const CNWSCreatureStats__GetStatById = reinterpret_cast<void*>(0x0815DC00);
void * const CNWSCreatureStats__GetSTRStat = reinterpret_cast<void*>(0x08163F9C);
void * const CNWSCreatureStats__GetTag = reinterpret_cast<void*>(0x0816457C);
void * const CNWSCreatureStats__GetTotalACSkillMod = reinterpret_cast<void*>(0x081656D8);
void * const CNWSCreatureStats__GetTotalCHABonus = reinterpret_cast<void*>(0x08165334);
void * const CNWSCreatureStats__GetTotalCONBonus = reinterpret_cast<void*>(0x081652B0);
void * const CNWSCreatureStats__GetTotalDEXBonus = reinterpret_cast<void*>(0x08165284);
void * const CNWSCreatureStats__GetTotalINTBonus = reinterpret_cast<void*>(0x081652DC);
void * const CNWSCreatureStats__GetTotalNegativeLevels = reinterpret_cast<void*>(0x0816571C);
void * const CNWSCreatureStats__GetTotalSTRBonus = reinterpret_cast<void*>(0x08165258);
void * const CNWSCreatureStats__GetTotalWISBonus = reinterpret_cast<void*>(0x08165308);
void * const CNWSCreatureStats__GetUnarmedDamageDice = reinterpret_cast<void*>(0x08143F88);
void * const CNWSCreatureStats__GetUnarmedDamageDie = reinterpret_cast<void*>(0x0814408C);
void * const CNWSCreatureStats__GetUnarmedDamageRoll = reinterpret_cast<void*>(0x08144474);
void * const CNWSCreatureStats__GetUseMonkAttackTables = reinterpret_cast<void*>(0x08143F00);
void * const CNWSCreatureStats__GetWeaponFinesse = reinterpret_cast<void*>(0x08155CF4);
void * const CNWSCreatureStats__GetWeaponFocus = reinterpret_cast<void*>(0x08155DEC);
void * const CNWSCreatureStats__GetWeaponImprovedCritical = reinterpret_cast<void*>(0x08156804);
void * const CNWSCreatureStats__GetWeaponSpecialization = reinterpret_cast<void*>(0x081562A4);
void * const CNWSCreatureStats__GetWillSavingThrow = reinterpret_cast<void*>(0x08164FDC);
void * const CNWSCreatureStats__GetWISStat = reinterpret_cast<void*>(0x08164128);
void * const CNWSCreatureStats__HasFeat = reinterpret_cast<void*>(0x08153BC4);
void * const CNWSCreatureStats__IncrementFeatRemainingUses = reinterpret_cast<void*>(0x08164734);
void * const CNWSCreatureStats__IncrementSpellsPerDayLeft = reinterpret_cast<void*>(0x08164D3C);
void * const CNWSCreatureStats__LevelDown = reinterpret_cast<void*>(0x08159870);
void * const CNWSCreatureStats__LevelUp = reinterpret_cast<void*>(0x081590F0);
void * const CNWSCreatureStats__LevelUpAutomatic = reinterpret_cast<void*>(0x0815A0C4);
void * const CNWSCreatureStats__ModifyAlignment = reinterpret_cast<void*>(0x081495F0);
void * const CNWSCreatureStats__ReadSpellsFromGff = reinterpret_cast<void*>(0x0814F8DC);
void * const CNWSCreatureStats__ReadStatsFromGff = reinterpret_cast<void*>(0x0814C578);
void * const CNWSCreatureStats__ReadySpellLevel = reinterpret_cast<void*>(0x08157398);
void * const CNWSCreatureStats__RemoveFeat = reinterpret_cast<void*>(0x08164788);
void * const CNWSCreatureStats__RemoveKnownSpell = reinterpret_cast<void*>(0x08155250);
void * const CNWSCreatureStats__ResetFeatRemainingUses = reinterpret_cast<void*>(0x081646AC);
void * const CNWSCreatureStats__ResetSpellLikeAbilities = reinterpret_cast<void*>(0x081651A8);
void * const CNWSCreatureStats__ResetSpellsPerDayLeft = reinterpret_cast<void*>(0x08164D74);
void * const CNWSCreatureStats__ResolveSpecialAttackAttackBonus = reinterpret_cast<void*>(0x08148F20);
void * const CNWSCreatureStats__ResolveSpecialAttackDamageBonus = reinterpret_cast<void*>(0x08149140);
void * const CNWSCreatureStats__SaveClassInfo = reinterpret_cast<void*>(0x08150964);
void * const CNWSCreatureStats__SaveStats = reinterpret_cast<void*>(0x0814FC8C);
void * const CNWSCreatureStats__SetArcaneSpellFailure = reinterpret_cast<void*>(0x081654CC);
void * const CNWSCreatureStats__SetCHABase = reinterpret_cast<void*>(0x08151C64);
void * const CNWSCreatureStats__SetClass = reinterpret_cast<void*>(0x081644A0);
void * const CNWSCreatureStats__SetClassLevel = reinterpret_cast<void*>(0x081644DC);
void * const CNWSCreatureStats__SetClassNegativeLevels = reinterpret_cast<void*>(0x08164518);
void * const CNWSCreatureStats__SetCONBase = reinterpret_cast<void*>(0x081519F0);
void * const CNWSCreatureStats__SetDEXBase = reinterpret_cast<void*>(0x0816446C);
void * const CNWSCreatureStats__SetDomain1 = reinterpret_cast<void*>(0x08164E3C);
void * const CNWSCreatureStats__SetDomain2 = reinterpret_cast<void*>(0x08164E88);
void * const CNWSCreatureStats__SetExperience = reinterpret_cast<void*>(0x08152084);
void * const CNWSCreatureStats__SetFeatRemainingUses = reinterpret_cast<void*>(0x08153D14);
void * const CNWSCreatureStats__SetHasLostClassAbilities = reinterpret_cast<void*>(0x08163F24);
void * const CNWSCreatureStats__SetINTBase = reinterpret_cast<void*>(0x08151AFC);
void * const CNWSCreatureStats__SetMemorizedSpellInSlotReady = reinterpret_cast<void*>(0x08164A8C);
void * const CNWSCreatureStats__SetMemorizedSpellSlot = reinterpret_cast<void*>(0x081552F4);
void * const CNWSCreatureStats__SetMovementRate = reinterpret_cast<void*>(0x0815D81C);
void * const CNWSCreatureStats__SetNormalBonusFlags = reinterpret_cast<void*>(0x0815C534);
void * const CNWSCreatureStats__SetNumberBonusSpells = reinterpret_cast<void*>(0x0815FD64);
void * const CNWSCreatureStats__SetNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x08164C78);
void * const CNWSCreatureStats__SetSchool = reinterpret_cast<void*>(0x08164DDC);
void * const CNWSCreatureStats__SetSkillRank = reinterpret_cast<void*>(0x08164620);
void * const CNWSCreatureStats__SetSpellFailure = reinterpret_cast<void*>(0x081656BC);
void * const CNWSCreatureStats__SetSpellLikeAbilityReady = reinterpret_cast<void*>(0x081650C8);
void * const CNWSCreatureStats__SetSpellResistance = reinterpret_cast<void*>(0x081654E8);
void * const CNWSCreatureStats__SetSpellResistancePenalty = reinterpret_cast<void*>(0x08165504);
void * const CNWSCreatureStats__SetStatById = reinterpret_cast<void*>(0x0815DCD4);
void * const CNWSCreatureStats__SetSTRBase = reinterpret_cast<void*>(0x0815193C);
void * const CNWSCreatureStats__SetTag = reinterpret_cast<void*>(0x0816458C);
void * const CNWSCreatureStats__SetWISBase = reinterpret_cast<void*>(0x08151BB0);
void * const CNWSCreatureStats__UnReadySpell = reinterpret_cast<void*>(0x08157510);
void * const CNWSCreatureStats__UpdateCombatInformation = reinterpret_cast<void*>(0x08142134);
void * const CNWSCreatureStats__UpdateLastStatsObject = reinterpret_cast<void*>(0x0814A47C);
void * const CNWSCreatureStats__UpdateNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x08151D18);
void * const CNWSCreatureStats__ValidateLevelUp = reinterpret_cast<void*>(0x081579CC);

void * const CNWSCreatureStats_ClassInfo__CNWSCreatureStats_ClassInfoCtor = reinterpret_cast<void*>(0x0813F19C);
void * const CNWSCreatureStats_ClassInfo__CNWSCreatureStats_ClassInfoDtor = reinterpret_cast<void*>(0x0813F314);
void * const CNWSCreatureStats_ClassInfo__AddKnownSpell = reinterpret_cast<void*>(0x08163738);
void * const CNWSCreatureStats_ClassInfo__ClearMemorizedKnownSpells = reinterpret_cast<void*>(0x0813F528);
void * const CNWSCreatureStats_ClassInfo__ClearMemorizedSpellSlot = reinterpret_cast<void*>(0x0813F4B4);
void * const CNWSCreatureStats_ClassInfo__ConfirmDomainSpell = reinterpret_cast<void*>(0x0813FB10);
void * const CNWSCreatureStats_ClassInfo__DecrementSpellsPerDayLeft = reinterpret_cast<void*>(0x08163AE4);
void * const CNWSCreatureStats_ClassInfo__GetIsDomainSpell = reinterpret_cast<void*>(0x0816382C);
void * const CNWSCreatureStats_ClassInfo__GetKnownSpell = reinterpret_cast<void*>(0x08163790);
void * const CNWSCreatureStats_ClassInfo__GetMaxSpellsPerDayLeft = reinterpret_cast<void*>(0x08163AA8);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellInSlot = reinterpret_cast<void*>(0x081637D0);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellInSlotDetails = reinterpret_cast<void*>(0x08163884);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellInSlotMetaType = reinterpret_cast<void*>(0x08163A14);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellInSlotReady = reinterpret_cast<void*>(0x081638D8);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellReadyCount__0 = reinterpret_cast<void*>(0x0813F738);
void * const CNWSCreatureStats_ClassInfo__GetMemorizedSpellReadyCount__1 = reinterpret_cast<void*>(0x0816399C);
void * const CNWSCreatureStats_ClassInfo__GetNumberBonusSpells = reinterpret_cast<void*>(0x08163B94);
void * const CNWSCreatureStats_ClassInfo__GetNumberKnownSpells = reinterpret_cast<void*>(0x08163B5C);
void * const CNWSCreatureStats_ClassInfo__GetNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x08163B74);
void * const CNWSCreatureStats_ClassInfo__GetSpellsPerDayLeft = reinterpret_cast<void*>(0x08163A6C);
void * const CNWSCreatureStats_ClassInfo__IncrementSpellsPerDayLeft = reinterpret_cast<void*>(0x08163B00);
void * const CNWSCreatureStats_ClassInfo__RemoveKnownSpell = reinterpret_cast<void*>(0x08163764);
void * const CNWSCreatureStats_ClassInfo__ResetSpellsPerDayLeft = reinterpret_cast<void*>(0x08163B1C);
void * const CNWSCreatureStats_ClassInfo__SetMaxSpellsPerDayLeft = reinterpret_cast<void*>(0x08163AC8);
void * const CNWSCreatureStats_ClassInfo__SetMemorizedSpellInSlotReady = reinterpret_cast<void*>(0x08163930);
void * const CNWSCreatureStats_ClassInfo__SetMemorizedSpellSlot = reinterpret_cast<void*>(0x0813F3D4);
void * const CNWSCreatureStats_ClassInfo__SetNumberBonusSpells = reinterpret_cast<void*>(0x08163BB4);
void * const CNWSCreatureStats_ClassInfo__SetNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x0813F688);
void * const CNWSCreatureStats_ClassInfo__SetSpellsPerDayLeft = reinterpret_cast<void*>(0x08163A8C);

void * const CNWSDialog__CNWSDialogCtor = reinterpret_cast<void*>(0x0823ACE0);
void * const CNWSDialog__CNWSDialogDtor = reinterpret_cast<void*>(0x081D5790);
void * const CNWSDialog__AddJournalEntry = reinterpret_cast<void*>(0x0823CEEC);
void * const CNWSDialog__CheckScript = reinterpret_cast<void*>(0x0823CAB0);
void * const CNWSDialog__Cleanup = reinterpret_cast<void*>(0x0823ADA4);
void * const CNWSDialog__ClearDialogOwnerInObject = reinterpret_cast<void*>(0x0823E520);
void * const CNWSDialog__GetSpeaker = reinterpret_cast<void*>(0x0823C5E4);
void * const CNWSDialog__GetStartEntry = reinterpret_cast<void*>(0x0823CB94);
void * const CNWSDialog__GetStartEntryOneLiner = reinterpret_cast<void*>(0x0823CC78);
void * const CNWSDialog__HandleReply = reinterpret_cast<void*>(0x0823DEAC);
void * const CNWSDialog__IsPlayerInDialog = reinterpret_cast<void*>(0x0823E598);
void * const CNWSDialog__LoadDialog = reinterpret_cast<void*>(0x0823B268);
void * const CNWSDialog__RemovePlayer = reinterpret_cast<void*>(0x0823C4F0);
void * const CNWSDialog__RunScript = reinterpret_cast<void*>(0x0823E5F0);
void * const CNWSDialog__SendDialogEntry = reinterpret_cast<void*>(0x0823D238);
void * const CNWSDialog__SendDialogReplies = reinterpret_cast<void*>(0x0823D85C);
void * const CNWSDialog__SetDialogDelay = reinterpret_cast<void*>(0x0823CD70);

void * const CNWSDoor__CNWSDoorCtor = reinterpret_cast<void*>(0x0816639C);
void * const CNWSDoor__CNWSDoorDtor = reinterpret_cast<void*>(0x08166838);
void * const CNWSDoor__AddToArea = reinterpret_cast<void*>(0x081669BC);
void * const CNWSDoor__AIUpdate = reinterpret_cast<void*>(0x08166D64);
void * const CNWSDoor__AsNWSDoor = reinterpret_cast<void*>(0x0816A9D8);
void * const CNWSDoor__DoDamage = reinterpret_cast<void*>(0x0816A8D4);
void * const CNWSDoor__EventHandler = reinterpret_cast<void*>(0x08166E4C);
void * const CNWSDoor__GetActionPoint = reinterpret_cast<void*>(0x08169FE4);
void * const CNWSDoor__GetActive = reinterpret_cast<void*>(0x0816B148);
void * const CNWSDoor__GetAppearanceType = reinterpret_cast<void*>(0x0816AA94);
void * const CNWSDoor__GetAutoRemoveKey = reinterpret_cast<void*>(0x0816AF00);
void * const CNWSDoor__GetBaseType = reinterpret_cast<void*>(0x0816B004);
void * const CNWSDoor__GetBearing = reinterpret_cast<void*>(0x0816AAF0);
void * const CNWSDoor__GetCreatureList = reinterpret_cast<void*>(0x0816B2E4);
void * const CNWSDoor__GetDescription = reinterpret_cast<void*>(0x0816ABD8);
void * const CNWSDoor__GetDescriptionOverride = reinterpret_cast<void*>(0x0816AC40);
void * const CNWSDoor__GetDetectable = reinterpret_cast<void*>(0x0816B0DC);
void * const CNWSDoor__GetDetectDC = reinterpret_cast<void*>(0x0816B070);
void * const CNWSDoor__GetDialogResref = reinterpret_cast<void*>(0x0816A9E0);
void * const CNWSDoor__GetDisarmable = reinterpret_cast<void*>(0x0816B0B8);
void * const CNWSDoor__GetDisarmDC = reinterpret_cast<void*>(0x0816B04C);
void * const CNWSDoor__GetDisplayName = reinterpret_cast<void*>(0x0816AD28);
void * const CNWSDoor__GetFactionId = reinterpret_cast<void*>(0x0816AB14);
void * const CNWSDoor__GetFirstName = reinterpret_cast<void*>(0x0816ACC0);
void * const CNWSDoor__GetFlagged = reinterpret_cast<void*>(0x0816B094);
void * const CNWSDoor__GetFortitudeSave = reinterpret_cast<void*>(0x0816AB5C);
void * const CNWSDoor__GetGenericType = reinterpret_cast<void*>(0x0816AAB8);
void * const CNWSDoor__GetHardness = reinterpret_cast<void*>(0x0816ABC8);
void * const CNWSDoor__GetIsLinked = reinterpret_cast<void*>(0x0816A744);
void * const CNWSDoor__GetKeyName = reinterpret_cast<void*>(0x0816AE38);
void * const CNWSDoor__GetKeyRequired = reinterpret_cast<void*>(0x0816AE5C);
void * const CNWSDoor__GetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x0816AEC4);
void * const CNWSDoor__GetLastClosed = reinterpret_cast<void*>(0x0816AA70);
void * const CNWSDoor__GetLastDisarmed = reinterpret_cast<void*>(0x0816B29C);
void * const CNWSDoor__GetLastLocked = reinterpret_cast<void*>(0x0816B254);
void * const CNWSDoor__GetLastOpened = reinterpret_cast<void*>(0x0816AA28);
void * const CNWSDoor__GetLastTriggered = reinterpret_cast<void*>(0x0816AA4C);
void * const CNWSDoor__GetLastUnlocked = reinterpret_cast<void*>(0x0816B278);
void * const CNWSDoor__GetLinkedObject = reinterpret_cast<void*>(0x0816A4E4);
void * const CNWSDoor__GetLinkedToTag = reinterpret_cast<void*>(0x0816B190);
void * const CNWSDoor__GetLoadScreenID = reinterpret_cast<void*>(0x0816B2F4);
void * const CNWSDoor__GetLockable = reinterpret_cast<void*>(0x0816ADEC);
void * const CNWSDoor__GetLockDC = reinterpret_cast<void*>(0x0816AF48);
void * const CNWSDoor__GetLocked = reinterpret_cast<void*>(0x0816AE10);
void * const CNWSDoor__GetNearestActionPoint = reinterpret_cast<void*>(0x0816A14C);
void * const CNWSDoor__GetOneShot = reinterpret_cast<void*>(0x0816B100);
void * const CNWSDoor__GetOpenLockDC = reinterpret_cast<void*>(0x0816AF24);
void * const CNWSDoor__GetOpenState = reinterpret_cast<void*>(0x0816A908);
void * const CNWSDoor__GetRecoverable = reinterpret_cast<void*>(0x0816B124);
void * const CNWSDoor__GetReflexSave = reinterpret_cast<void*>(0x0816AB38);
void * const CNWSDoor__GetScriptName = reinterpret_cast<void*>(0x0816AFB8);
void * const CNWSDoor__GetSecretDoorDC = reinterpret_cast<void*>(0x0816ABA4);
void * const CNWSDoor__GetTrapCreator = reinterpret_cast<void*>(0x0816AFE0);
void * const CNWSDoor__GetTrapFactionId = reinterpret_cast<void*>(0x0816B16C);
void * const CNWSDoor__GetTrapped = reinterpret_cast<void*>(0x0816B028);
void * const CNWSDoor__GetUpdateDisplayName = reinterpret_cast<void*>(0x0816ADB4);
void * const CNWSDoor__GetVisibleModel = reinterpret_cast<void*>(0x0816B2C0);
void * const CNWSDoor__GetWillSave = reinterpret_cast<void*>(0x0816AB80);
void * const CNWSDoor__LoadDoor = reinterpret_cast<void*>(0x08167BC8);
void * const CNWSDoor__NoNonWalkPolysInDoor = reinterpret_cast<void*>(0x0816A75C);
void * const CNWSDoor__PostProcess = reinterpret_cast<void*>(0x08169C54);
void * const CNWSDoor__RemoveFromArea = reinterpret_cast<void*>(0x08169D3C);
void * const CNWSDoor__SaveDoor = reinterpret_cast<void*>(0x081692EC);
void * const CNWSDoor__SetActive = reinterpret_cast<void*>(0x0816B134);
void * const CNWSDoor__SetAppearanceType = reinterpret_cast<void*>(0x0816AAA4);
void * const CNWSDoor__SetAutoRemoveKey = reinterpret_cast<void*>(0x0816AEEC);
void * const CNWSDoor__SetBaseType = reinterpret_cast<void*>(0x0816AFF0);
void * const CNWSDoor__SetBearing = reinterpret_cast<void*>(0x0816AADC);
void * const CNWSDoor__SetDescription = reinterpret_cast<void*>(0x0816ABE8);
void * const CNWSDoor__SetDescriptionOverride = reinterpret_cast<void*>(0x0816AC68);
void * const CNWSDoor__SetDetectable = reinterpret_cast<void*>(0x0816B0C8);
void * const CNWSDoor__SetDetectDC = reinterpret_cast<void*>(0x0816B05C);
void * const CNWSDoor__SetDialogResref = reinterpret_cast<void*>(0x0816AA04);
void * const CNWSDoor__SetDisarmable = reinterpret_cast<void*>(0x0816B0A4);
void * const CNWSDoor__SetDisarmDC = reinterpret_cast<void*>(0x0816B038);
void * const CNWSDoor__SetDisplayName = reinterpret_cast<void*>(0x0816AD50);
void * const CNWSDoor__SetFactionId = reinterpret_cast<void*>(0x0816AB00);
void * const CNWSDoor__SetFirstName = reinterpret_cast<void*>(0x0816ACD0);
void * const CNWSDoor__SetFlagged = reinterpret_cast<void*>(0x0816B080);
void * const CNWSDoor__SetFortitudeSave = reinterpret_cast<void*>(0x0816AB48);
void * const CNWSDoor__SetGenericType = reinterpret_cast<void*>(0x0816AAC8);
void * const CNWSDoor__SetHardness = reinterpret_cast<void*>(0x0816ABB4);
void * const CNWSDoor__SetKeyName = reinterpret_cast<void*>(0x0816AE20);
void * const CNWSDoor__SetKeyRequired = reinterpret_cast<void*>(0x0816AE48);
void * const CNWSDoor__SetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x0816AE6C);
void * const CNWSDoor__SetLastClosed = reinterpret_cast<void*>(0x0816AA80);
void * const CNWSDoor__SetLastDisarmed = reinterpret_cast<void*>(0x0816B2AC);
void * const CNWSDoor__SetLastLocked = reinterpret_cast<void*>(0x0816B264);
void * const CNWSDoor__SetLastOpened = reinterpret_cast<void*>(0x0816AA38);
void * const CNWSDoor__SetLastTriggered = reinterpret_cast<void*>(0x0816AA5C);
void * const CNWSDoor__SetLastUnlocked = reinterpret_cast<void*>(0x0816B288);
void * const CNWSDoor__SetLinkedFlags = reinterpret_cast<void*>(0x0816B17C);
void * const CNWSDoor__SetLinkedToTag = reinterpret_cast<void*>(0x0816B1B8);
void * const CNWSDoor__SetLockable = reinterpret_cast<void*>(0x0816ADD8);
void * const CNWSDoor__SetLockDC = reinterpret_cast<void*>(0x0816AF34);
void * const CNWSDoor__SetLocked = reinterpret_cast<void*>(0x0816ADFC);
void * const CNWSDoor__SetOneShot = reinterpret_cast<void*>(0x0816B0EC);
void * const CNWSDoor__SetOpenLockDC = reinterpret_cast<void*>(0x0816AF10);
void * const CNWSDoor__SetOpenState = reinterpret_cast<void*>(0x0816A5B8);
void * const CNWSDoor__SetRecoverable = reinterpret_cast<void*>(0x0816B110);
void * const CNWSDoor__SetReflexSave = reinterpret_cast<void*>(0x0816AB24);
void * const CNWSDoor__SetScriptName = reinterpret_cast<void*>(0x0816AF58);
void * const CNWSDoor__SetSecretDoorDC = reinterpret_cast<void*>(0x0816AB90);
void * const CNWSDoor__SetTrapCreator = reinterpret_cast<void*>(0x0816AFCC);
void * const CNWSDoor__SetTrapFactionId = reinterpret_cast<void*>(0x0816B158);
void * const CNWSDoor__SetTrapped = reinterpret_cast<void*>(0x0816B014);
void * const CNWSDoor__SetUpdateDisplayName = reinterpret_cast<void*>(0x0816ADC4);
void * const CNWSDoor__SetVisibleModel = reinterpret_cast<void*>(0x0816B2D0);
void * const CNWSDoor__SetWillSave = reinterpret_cast<void*>(0x0816AB6C);

void * const CNWSDungeonMaster__CNWSDungeonMasterCtor = reinterpret_cast<void*>(0x081662C0);
void * const CNWSDungeonMaster__CNWSDungeonMasterDtor = reinterpret_cast<void*>(0x08166324);
void * const CNWSDungeonMaster__AsNWSDungeonMaster = reinterpret_cast<void*>(0x08166394);
void * const CNWSDungeonMaster__PossessCreature = reinterpret_cast<void*>(0x08165D24);

void * const CNWSEffectListHandler__CNWSEffectListHandlerDtor = reinterpret_cast<void*>(0x0817CBC8);
void * const CNWSEffectListHandler__InitializeEffects = reinterpret_cast<void*>(0x0816B304);
void * const CNWSEffectListHandler__OnApplyAbilityDecrease = reinterpret_cast<void*>(0x0816F4D8);
void * const CNWSEffectListHandler__OnApplyAbilityIncrease = reinterpret_cast<void*>(0x0816F3A4);
void * const CNWSEffectListHandler__OnApplyACDecrease = reinterpret_cast<void*>(0x08170500);
void * const CNWSEffectListHandler__OnApplyACIncrease = reinterpret_cast<void*>(0x08170034);
void * const CNWSEffectListHandler__OnApplyAppear = reinterpret_cast<void*>(0x0817D5F8);
void * const CNWSEffectListHandler__OnApplyArcaneSpellFailure = reinterpret_cast<void*>(0x08172948);
void * const CNWSEffectListHandler__OnApplyAreaOfEffect = reinterpret_cast<void*>(0x08174F78);
void * const CNWSEffectListHandler__OnApplyAttackDecrease = reinterpret_cast<void*>(0x08170A48);
void * const CNWSEffectListHandler__OnApplyAttackIncrease = reinterpret_cast<void*>(0x08170978);
void * const CNWSEffectListHandler__OnApplyBeam = reinterpret_cast<void*>(0x08175334);
void * const CNWSEffectListHandler__OnApplyBlindness = reinterpret_cast<void*>(0x0817ACDC);
void * const CNWSEffectListHandler__OnApplyBlindnessInactive = reinterpret_cast<void*>(0x0817D3EC);
void * const CNWSEffectListHandler__OnApplyBonusFeat = reinterpret_cast<void*>(0x0817D81C);
void * const CNWSEffectListHandler__OnApplyBonusSpellOfLevel = reinterpret_cast<void*>(0x0817D534);
void * const CNWSEffectListHandler__OnApplyConcealment = reinterpret_cast<void*>(0x0817B110);
void * const CNWSEffectListHandler__OnApplyCurse = reinterpret_cast<void*>(0x08177DC4);
void * const CNWSEffectListHandler__OnApplyCutsceneGhost = reinterpret_cast<void*>(0x0817DAB8);
void * const CNWSEffectListHandler__OnApplyCutsceneImmobile = reinterpret_cast<void*>(0x0817DB40);
void * const CNWSEffectListHandler__OnApplyDamage = reinterpret_cast<void*>(0x0816C7E4);
void * const CNWSEffectListHandler__OnApplyDamageDecrease = reinterpret_cast<void*>(0x08170C18);
void * const CNWSEffectListHandler__OnApplyDamageImmunityDecrease = reinterpret_cast<void*>(0x0817153C);
void * const CNWSEffectListHandler__OnApplyDamageImmunityIncrease = reinterpret_cast<void*>(0x081712A8);
void * const CNWSEffectListHandler__OnApplyDamageIncrease = reinterpret_cast<void*>(0x08170B5C);
void * const CNWSEffectListHandler__OnApplyDamageReduction = reinterpret_cast<void*>(0x0816C6BC);
void * const CNWSEffectListHandler__OnApplyDamageResistance = reinterpret_cast<void*>(0x0816C750);
void * const CNWSEffectListHandler__OnApplyDamageShield = reinterpret_cast<void*>(0x0817D780);
void * const CNWSEffectListHandler__OnApplyDarkness = reinterpret_cast<void*>(0x0817B1D4);
void * const CNWSEffectListHandler__OnApplyDeaf = reinterpret_cast<void*>(0x081724E0);
void * const CNWSEffectListHandler__OnApplyDeath = reinterpret_cast<void*>(0x0816E054);
void * const CNWSEffectListHandler__OnApplyDefensiveStance = reinterpret_cast<void*>(0x0817C920);
void * const CNWSEffectListHandler__OnApplyDisappear = reinterpret_cast<void*>(0x0817D548);
void * const CNWSEffectListHandler__OnApplyDisappearAppear = reinterpret_cast<void*>(0x0817B4A0);
void * const CNWSEffectListHandler__OnApplyDisarm = reinterpret_cast<void*>(0x08172004);
void * const CNWSEffectListHandler__OnApplyDisease = reinterpret_cast<void*>(0x08176548);
void * const CNWSEffectListHandler__OnApplyDispelAllMagic = reinterpret_cast<void*>(0x081786A8);
void * const CNWSEffectListHandler__OnApplyDispelBestMagic = reinterpret_cast<void*>(0x08178A44);
void * const CNWSEffectListHandler__OnApplyEffectIcon = reinterpret_cast<void*>(0x081798E0);
void * const CNWSEffectListHandler__OnApplyEffectImmunity = reinterpret_cast<void*>(0x08178470);
void * const CNWSEffectListHandler__OnApplyEnemyAttackBonus = reinterpret_cast<void*>(0x08172788);
void * const CNWSEffectListHandler__OnApplyEntangled = reinterpret_cast<void*>(0x0817181C);
void * const CNWSEffectListHandler__OnApplyHasteInternal = reinterpret_cast<void*>(0x08177038);
void * const CNWSEffectListHandler__OnApplyHasteOrSlow = reinterpret_cast<void*>(0x08176A78);
void * const CNWSEffectListHandler__OnApplyHeal = reinterpret_cast<void*>(0x0816DC58);
void * const CNWSEffectListHandler__OnApplyHitPointChangeWhenDying = reinterpret_cast<void*>(0x08179294);
void * const CNWSEffectListHandler__OnApplyInvisibility = reinterpret_cast<void*>(0x08177498);
void * const CNWSEffectListHandler__OnApplyItemProperty = reinterpret_cast<void*>(0x0817C088);
void * const CNWSEffectListHandler__OnApplyKnockdown = reinterpret_cast<void*>(0x08171B58);
void * const CNWSEffectListHandler__OnApplyLight = reinterpret_cast<void*>(0x0817D17C);
void * const CNWSEffectListHandler__OnApplyLimitMovementSpeed = reinterpret_cast<void*>(0x08178F4C);
void * const CNWSEffectListHandler__OnApplyLink = reinterpret_cast<void*>(0x0817D0CC);
void * const CNWSEffectListHandler__OnApplyMissChance = reinterpret_cast<void*>(0x0817D45C);
void * const CNWSEffectListHandler__OnApplyModifyNumAttacks = reinterpret_cast<void*>(0x0817D22C);
void * const CNWSEffectListHandler__OnApplyMovementSpeedDecrease = reinterpret_cast<void*>(0x08174868);
void * const CNWSEffectListHandler__OnApplyMovementSpeedIncrease = reinterpret_cast<void*>(0x08174644);
void * const CNWSEffectListHandler__OnApplyNegativeLevel = reinterpret_cast<void*>(0x0817B954);
void * const CNWSEffectListHandler__OnApplyPetrify = reinterpret_cast<void*>(0x0817BFC0);
void * const CNWSEffectListHandler__OnApplyPoison = reinterpret_cast<void*>(0x081759D8);
void * const CNWSEffectListHandler__OnApplyPolymorph = reinterpret_cast<void*>(0x08179C5C);
void * const CNWSEffectListHandler__OnApplyRacialType = reinterpret_cast<void*>(0x0817A23C);
void * const CNWSEffectListHandler__OnApplyRegenerate = reinterpret_cast<void*>(0x08175918);
void * const CNWSEffectListHandler__OnApplyResurrection = reinterpret_cast<void*>(0x0816F244);
void * const CNWSEffectListHandler__OnApplySanctuary = reinterpret_cast<void*>(0x081776F4);
void * const CNWSEffectListHandler__OnApplySavingThrowDecrease = reinterpret_cast<void*>(0x0816FF24);
void * const CNWSEffectListHandler__OnApplySavingThrowIncrease = reinterpret_cast<void*>(0x0816FE08);
void * const CNWSEffectListHandler__OnApplySeeInvisible = reinterpret_cast<void*>(0x0817A3D8);
void * const CNWSEffectListHandler__OnApplySetAIState = reinterpret_cast<void*>(0x0817CFB4);
void * const CNWSEffectListHandler__OnApplySetState = reinterpret_cast<void*>(0x08172B88);
void * const CNWSEffectListHandler__OnApplySetStateInternal = reinterpret_cast<void*>(0x08173A2C);
void * const CNWSEffectListHandler__OnApplySilence = reinterpret_cast<void*>(0x0817825C);
void * const CNWSEffectListHandler__OnApplySkillDecrease = reinterpret_cast<void*>(0x08179190);
void * const CNWSEffectListHandler__OnApplySkillIncrease = reinterpret_cast<void*>(0x081790D8);
void * const CNWSEffectListHandler__OnApplySlowInternal = reinterpret_cast<void*>(0x081771C4);
void * const CNWSEffectListHandler__OnApplySpecialWalkAnimation = reinterpret_cast<void*>(0x0817D350);
void * const CNWSEffectListHandler__OnApplySpellFailure = reinterpret_cast<void*>(0x0817C808);
void * const CNWSEffectListHandler__OnApplySpellImmunity = reinterpret_cast<void*>(0x0817D668);
void * const CNWSEffectListHandler__OnApplySpellLevelAbsorption = reinterpret_cast<void*>(0x0817B8A8);
void * const CNWSEffectListHandler__OnApplySpellResistanceDecrease = reinterpret_cast<void*>(0x081756A4);
void * const CNWSEffectListHandler__OnApplySpellResistanceIncrease = reinterpret_cast<void*>(0x08175420);
void * const CNWSEffectListHandler__OnApplyStore = reinterpret_cast<void*>(0x0817DC14);
void * const CNWSEffectListHandler__OnApplySummonCreature = reinterpret_cast<void*>(0x0816F7F8);
void * const CNWSEffectListHandler__OnApplySwarm = reinterpret_cast<void*>(0x0817D994);
void * const CNWSEffectListHandler__OnApplyTaunt = reinterpret_cast<void*>(0x08178D84);
void * const CNWSEffectListHandler__OnApplyTemporaryHitpoints = reinterpret_cast<void*>(0x08170D08);
void * const CNWSEffectListHandler__OnApplyTimestop = reinterpret_cast<void*>(0x0817A0F4);
void * const CNWSEffectListHandler__OnApplyTrueSeeing = reinterpret_cast<void*>(0x0817A8F4);
void * const CNWSEffectListHandler__OnApplyTurnResistance = reinterpret_cast<void*>(0x0817D4C8);
void * const CNWSEffectListHandler__OnApplyUltraVision = reinterpret_cast<void*>(0x0817A520);
void * const CNWSEffectListHandler__OnApplyVampiricRegeneration = reinterpret_cast<void*>(0x0817BEF0);
void * const CNWSEffectListHandler__OnApplyVision = reinterpret_cast<void*>(0x08177BE0);
void * const CNWSEffectListHandler__OnApplyVisualEffect = reinterpret_cast<void*>(0x08174AAC);
void * const CNWSEffectListHandler__OnApplyWounding = reinterpret_cast<void*>(0x0817D910);
void * const CNWSEffectListHandler__OnEffectApplied = reinterpret_cast<void*>(0x0817CC30);
void * const CNWSEffectListHandler__OnEffectRemoved = reinterpret_cast<void*>(0x0817CC9C);
void * const CNWSEffectListHandler__OnRemoveAbilityDecrease = reinterpret_cast<void*>(0x0817CD50);
void * const CNWSEffectListHandler__OnRemoveAbilityIncrease = reinterpret_cast<void*>(0x0817CD04);
void * const CNWSEffectListHandler__OnRemoveACDecrease = reinterpret_cast<void*>(0x08170738);
void * const CNWSEffectListHandler__OnRemoveACIncrease = reinterpret_cast<void*>(0x081702C4);
void * const CNWSEffectListHandler__OnRemoveArcaneSpellFailure = reinterpret_cast<void*>(0x08172A68);
void * const CNWSEffectListHandler__OnRemoveAreaOfEffect = reinterpret_cast<void*>(0x0817D034);
void * const CNWSEffectListHandler__OnRemoveAttackDecrease = reinterpret_cast<void*>(0x0817CE80);
void * const CNWSEffectListHandler__OnRemoveAttackIncrease = reinterpret_cast<void*>(0x0817CE44);
void * const CNWSEffectListHandler__OnRemoveBeam = reinterpret_cast<void*>(0x0817D0C0);
void * const CNWSEffectListHandler__OnRemoveBlindness = reinterpret_cast<void*>(0x0817B034);
void * const CNWSEffectListHandler__OnRemoveBonusFeat = reinterpret_cast<void*>(0x0817D898);
void * const CNWSEffectListHandler__OnRemoveBonusSpellOfLevel = reinterpret_cast<void*>(0x0817D53C);
void * const CNWSEffectListHandler__OnRemoveConcealment = reinterpret_cast<void*>(0x0817D4BC);
void * const CNWSEffectListHandler__OnRemoveCurse = reinterpret_cast<void*>(0x0817D2A8);
void * const CNWSEffectListHandler__OnRemoveCutsceneGhost = reinterpret_cast<void*>(0x0817DB04);
void * const CNWSEffectListHandler__OnRemoveDamageDecrease = reinterpret_cast<void*>(0x0817CEF8);
void * const CNWSEffectListHandler__OnRemoveDamageImmunityDecrease = reinterpret_cast<void*>(0x08171734);
void * const CNWSEffectListHandler__OnRemoveDamageImmunityIncrease = reinterpret_cast<void*>(0x08171454);
void * const CNWSEffectListHandler__OnRemoveDamageIncrease = reinterpret_cast<void*>(0x0817CEBC);
void * const CNWSEffectListHandler__OnRemoveDamageShield = reinterpret_cast<void*>(0x0817D810);
void * const CNWSEffectListHandler__OnRemoveDarkness = reinterpret_cast<void*>(0x0817B3E0);
void * const CNWSEffectListHandler__OnRemoveDisappearAppear = reinterpret_cast<void*>(0x0817B630);
void * const CNWSEffectListHandler__OnRemoveDisarm = reinterpret_cast<void*>(0x0817CFA8);
void * const CNWSEffectListHandler__OnRemoveEffectIcon = reinterpret_cast<void*>(0x08179A68);
void * const CNWSEffectListHandler__OnRemoveEffectImmunity = reinterpret_cast<void*>(0x0817D2F0);
void * const CNWSEffectListHandler__OnRemoveEnemyAttackBonus = reinterpret_cast<void*>(0x08172878);
void * const CNWSEffectListHandler__OnRemoveEntangled = reinterpret_cast<void*>(0x0817CF34);
void * const CNWSEffectListHandler__OnRemoveHasteInternal = reinterpret_cast<void*>(0x0817D12C);
void * const CNWSEffectListHandler__OnRemoveHasteOrSlow = reinterpret_cast<void*>(0x08176DD0);
void * const CNWSEffectListHandler__OnRemoveHitPointChangeWhenDying = reinterpret_cast<void*>(0x081793B8);
void * const CNWSEffectListHandler__OnRemoveInvisibility = reinterpret_cast<void*>(0x081775C4);
void * const CNWSEffectListHandler__OnRemoveItemProperty = reinterpret_cast<void*>(0x0817C3F4);
void * const CNWSEffectListHandler__OnRemoveKnockdown = reinterpret_cast<void*>(0x08171F6C);
void * const CNWSEffectListHandler__OnRemoveLight = reinterpret_cast<void*>(0x0817D214);
void * const CNWSEffectListHandler__OnRemoveLimitMovementSpeed = reinterpret_cast<void*>(0x08179020);
void * const CNWSEffectListHandler__OnRemoveMissChance = reinterpret_cast<void*>(0x0817D4B0);
void * const CNWSEffectListHandler__OnRemoveModifyNumAttacks = reinterpret_cast<void*>(0x08177D00);
void * const CNWSEffectListHandler__OnRemoveMovementSpeedDecrease = reinterpret_cast<void*>(0x081749A0);
void * const CNWSEffectListHandler__OnRemoveMovementSpeedIncrease = reinterpret_cast<void*>(0x0817475C);
void * const CNWSEffectListHandler__OnRemoveNegativeLevel = reinterpret_cast<void*>(0x0817D704);
void * const CNWSEffectListHandler__OnRemovePetrify = reinterpret_cast<void*>(0x0817DA28);
void * const CNWSEffectListHandler__OnRemovePolymorph = reinterpret_cast<void*>(0x08179E90);
void * const CNWSEffectListHandler__OnRemoveRacialType = reinterpret_cast<void*>(0x0817D3E0);
void * const CNWSEffectListHandler__OnRemoveSanctuary = reinterpret_cast<void*>(0x08177928);
void * const CNWSEffectListHandler__OnRemoveSavingThrowDecrease = reinterpret_cast<void*>(0x0817CE08);
void * const CNWSEffectListHandler__OnRemoveSavingThrowIncrease = reinterpret_cast<void*>(0x0817CDCC);
void * const CNWSEffectListHandler__OnRemoveSeeInvisible = reinterpret_cast<void*>(0x0817A46C);
void * const CNWSEffectListHandler__OnRemoveSetAIState = reinterpret_cast<void*>(0x08172420);
void * const CNWSEffectListHandler__OnRemoveSetState = reinterpret_cast<void*>(0x08173830);
void * const CNWSEffectListHandler__OnRemoveSetStateInternal = reinterpret_cast<void*>(0x081744B8);
void * const CNWSEffectListHandler__OnRemoveSilence = reinterpret_cast<void*>(0x0817D2B4);
void * const CNWSEffectListHandler__OnRemoveSkillDecrease = reinterpret_cast<void*>(0x0817D344);
void * const CNWSEffectListHandler__OnRemoveSkillIncrease = reinterpret_cast<void*>(0x0817D338);
void * const CNWSEffectListHandler__OnRemoveSlowInternal = reinterpret_cast<void*>(0x0817D154);
void * const CNWSEffectListHandler__OnRemoveSpecialWalkAnimation = reinterpret_cast<void*>(0x0817983C);
void * const CNWSEffectListHandler__OnRemoveSpellFailure = reinterpret_cast<void*>(0x0817DA34);
void * const CNWSEffectListHandler__OnRemoveSpellImmunity = reinterpret_cast<void*>(0x0817D6F8);
void * const CNWSEffectListHandler__OnRemoveSpellLevelAbsorption = reinterpret_cast<void*>(0x0817D65C);
void * const CNWSEffectListHandler__OnRemoveSpellResistanceDecrease = reinterpret_cast<void*>(0x081757F8);
void * const CNWSEffectListHandler__OnRemoveSpellResistanceIncrease = reinterpret_cast<void*>(0x08175558);
void * const CNWSEffectListHandler__OnRemoveSummonCreature = reinterpret_cast<void*>(0x0817CD8C);
void * const CNWSEffectListHandler__OnRemoveSwarm = reinterpret_cast<void*>(0x0817D9E8);
void * const CNWSEffectListHandler__OnRemoveTaunt = reinterpret_cast<void*>(0x0817D2FC);
void * const CNWSEffectListHandler__OnRemoveTemporaryHitpoints = reinterpret_cast<void*>(0x08170E00);
void * const CNWSEffectListHandler__OnRemoveTimestop = reinterpret_cast<void*>(0x0817D3A4);
void * const CNWSEffectListHandler__OnRemoveTrueSeeing = reinterpret_cast<void*>(0x0817AA80);
void * const CNWSEffectListHandler__OnRemoveTurnResistance = reinterpret_cast<void*>(0x0817D528);
void * const CNWSEffectListHandler__OnRemoveUltraVision = reinterpret_cast<void*>(0x0817A698);
void * const CNWSEffectListHandler__OnRemoveVision = reinterpret_cast<void*>(0x0817D220);
void * const CNWSEffectListHandler__OnRemoveVisualEffect = reinterpret_cast<void*>(0x0817D004);
void * const CNWSEffectListHandler__OnRemoveWounding = reinterpret_cast<void*>(0x0817D988);
void * const CNWSEffectListHandler__SendFloatyEffect = reinterpret_cast<void*>(0x0816C4D8);

void * const CNWSEncounter__CNWSEncounterCtor = reinterpret_cast<void*>(0x0817F7A0);
void * const CNWSEncounter__CNWSEncounterDtor = reinterpret_cast<void*>(0x0817FAE4);
void * const CNWSEncounter__AddCreaturesToSpawnList = reinterpret_cast<void*>(0x08181330);
void * const CNWSEncounter__AddToActivateAreaList = reinterpret_cast<void*>(0x08181590);
void * const CNWSEncounter__AddToArea = reinterpret_cast<void*>(0x08183FAC);
void * const CNWSEncounter__AIUpdate = reinterpret_cast<void*>(0x0817FC8C);
void * const CNWSEncounter__AsNWSEncounter = reinterpret_cast<void*>(0x08184360);
void * const CNWSEncounter__CalculatePointsFromCR = reinterpret_cast<void*>(0x08183724);
void * const CNWSEncounter__CalculateSpawnPool = reinterpret_cast<void*>(0x08183604);
void * const CNWSEncounter__EventHandler = reinterpret_cast<void*>(0x0817FEF0);
void * const CNWSEncounter__GetActivateObjectArrayIndex = reinterpret_cast<void*>(0x08184570);
void * const CNWSEncounter__GetActive = reinterpret_cast<void*>(0x081843B8);
void * const CNWSEncounter__GetCustomScriptEventId = reinterpret_cast<void*>(0x08184594);
void * const CNWSEncounter__GetDifficulty = reinterpret_cast<void*>(0x08184428);
void * const CNWSEncounter__GetDifficultyIndex = reinterpret_cast<void*>(0x08184438);
void * const CNWSEncounter__GetEncounterCanReset = reinterpret_cast<void*>(0x081843C8);
void * const CNWSEncounter__GetEncounterExhausted = reinterpret_cast<void*>(0x08184488);
void * const CNWSEncounter__GetEncounterStarted = reinterpret_cast<void*>(0x08184478);
void * const CNWSEncounter__GetFactionId = reinterpret_cast<void*>(0x08184368);
void * const CNWSEncounter__GetFirstName = reinterpret_cast<void*>(0x081845B8);
void * const CNWSEncounter__GetInActivateArea = reinterpret_cast<void*>(0x08180088);
void * const CNWSEncounter__GetInActivateAreaList = reinterpret_cast<void*>(0x08184178);
void * const CNWSEncounter__GetLastEntered = reinterpret_cast<void*>(0x08184378);
void * const CNWSEncounter__GetLastLeft = reinterpret_cast<void*>(0x08184388);
void * const CNWSEncounter__GetMaxActivateX = reinterpret_cast<void*>(0x081843F8);
void * const CNWSEncounter__GetMaxActivateY = reinterpret_cast<void*>(0x08184418);
void * const CNWSEncounter__GetMinActivateX = reinterpret_cast<void*>(0x081843E8);
void * const CNWSEncounter__GetMinActivateY = reinterpret_cast<void*>(0x08184408);
void * const CNWSEncounter__GetNewEntry = reinterpret_cast<void*>(0x08184498);
void * const CNWSEncounter__GetPlayerTriggeredOnly = reinterpret_cast<void*>(0x081843D8);
void * const CNWSEncounter__GetPosition = reinterpret_cast<void*>(0x08184398);
void * const CNWSEncounter__GetRespawnsCurrent = reinterpret_cast<void*>(0x08184458);
void * const CNWSEncounter__GetRespawnsMax = reinterpret_cast<void*>(0x08184448);
void * const CNWSEncounter__GetScriptName = reinterpret_cast<void*>(0x081845C8);
void * const CNWSEncounter__GetSpawnMode = reinterpret_cast<void*>(0x08184468);
void * const CNWSEncounter__LineSegmentIntersectActivateArea = reinterpret_cast<void*>(0x081840AC);
void * const CNWSEncounter__LoadEncounter = reinterpret_cast<void*>(0x081817E8);
void * const CNWSEncounter__LoadFractionalCRData = reinterpret_cast<void*>(0x08183914);
void * const CNWSEncounter__LoadFromTemplate = reinterpret_cast<void*>(0x08181A08);
void * const CNWSEncounter__MakeSpawnList = reinterpret_cast<void*>(0x08180EF0);
void * const CNWSEncounter__PadOutCreatureCount = reinterpret_cast<void*>(0x081839F4);
void * const CNWSEncounter__ReadEncounterFromGff = reinterpret_cast<void*>(0x08181BDC);
void * const CNWSEncounter__ReadEncounterScriptsFromGff = reinterpret_cast<void*>(0x08182BC8);
void * const CNWSEncounter__RemoveFromActivateAreaList = reinterpret_cast<void*>(0x081841AC);
void * const CNWSEncounter__RemoveFromActiveCreatureCount = reinterpret_cast<void*>(0x08181668);
void * const CNWSEncounter__RemoveFromArea = reinterpret_cast<void*>(0x0818402C);
void * const CNWSEncounter__SaveEncounter = reinterpret_cast<void*>(0x08182E68);
void * const CNWSEncounter__SetActivateObjectArrayIndex = reinterpret_cast<void*>(0x08184580);
void * const CNWSEncounter__SetActive = reinterpret_cast<void*>(0x08184278);
void * const CNWSEncounter__SetCustomScriptEventId = reinterpret_cast<void*>(0x081845A4);
void * const CNWSEncounter__SetDifficulty = reinterpret_cast<void*>(0x08183864);
void * const CNWSEncounter__SetEncounterCanReset = reinterpret_cast<void*>(0x081844D0);
void * const CNWSEncounter__SetEncounterExhausted = reinterpret_cast<void*>(0x08184548);
void * const CNWSEncounter__SetEncounterStarted = reinterpret_cast<void*>(0x08184534);
void * const CNWSEncounter__SetLastEntered = reinterpret_cast<void*>(0x081844A8);
void * const CNWSEncounter__SetLastLeft = reinterpret_cast<void*>(0x081844BC);
void * const CNWSEncounter__SetNewEntry = reinterpret_cast<void*>(0x0818455C);
void * const CNWSEncounter__SetPlayerTriggeredOnly = reinterpret_cast<void*>(0x0818450C);
void * const CNWSEncounter__SetRespawnsCurrent = reinterpret_cast<void*>(0x081844F8);
void * const CNWSEncounter__SetRespawnsMax = reinterpret_cast<void*>(0x081844E4);
void * const CNWSEncounter__SetScriptName = reinterpret_cast<void*>(0x081845E4);
void * const CNWSEncounter__SetSpawnMode = reinterpret_cast<void*>(0x08184520);
void * const CNWSEncounter__SpawnEncounterCreatures = reinterpret_cast<void*>(0x08180510);
void * const CNWSEncounter__SpawnIfAppropriate = reinterpret_cast<void*>(0x081841FC);
void * const CNWSEncounter__TallyEnemyRadiusPoints = reinterpret_cast<void*>(0x08183C00);
void * const CNWSEncounter__UpdateActivateAreaList = reinterpret_cast<void*>(0x0818028C);

void * const CNWSExpression__CNWSExpressionCtor = reinterpret_cast<void*>(0x08240124);
void * const CNWSExpression__CNWSExpressionDtor = reinterpret_cast<void*>(0x0823E744);
void * const CNWSExpression__ClearAlternate = reinterpret_cast<void*>(0x082401CC);
void * const CNWSExpression__ClearGraph = reinterpret_cast<void*>(0x0824018C);
void * const CNWSExpression__NewNode = reinterpret_cast<void*>(0x082400CC);
void * const CNWSExpression__ParseString = reinterpret_cast<void*>(0x0823E8A0);
void * const CNWSExpression__TestString = reinterpret_cast<void*>(0x0823F604);

void * const CNWSExpressionList__CNWSExpressionListCtor = reinterpret_cast<void*>(0x0823FF58);
void * const CNWSExpressionList__CNWSExpressionListDtor = reinterpret_cast<void*>(0x0823FF74);
void * const CNWSExpressionList__AddNode = reinterpret_cast<void*>(0x08240050);
void * const CNWSExpressionList__AddNodeToHead = reinterpret_cast<void*>(0x08240094);
void * const CNWSExpressionList__DeleteAlternate = reinterpret_cast<void*>(0x0823FFE8);
void * const CNWSExpressionList__DeleteList = reinterpret_cast<void*>(0x0823FF90);

void * const CNWSExpressionNode__CNWSExpressionNodeCtor = reinterpret_cast<void*>(0x0823FEF8);
void * const CNWSExpressionNode__CNWSExpressionNodeDtor = reinterpret_cast<void*>(0x0823FF20);

void * const CNWSFaction__CNWSFactionCtor__0 = reinterpret_cast<void*>(0x081D67C0);
void * const CNWSFaction__CNWSFactionCtor__1 = reinterpret_cast<void*>(0x081D68EC);
void * const CNWSFaction__CNWSFactionDtor = reinterpret_cast<void*>(0x081D7D30);
void * const CNWSFaction__AddMember = reinterpret_cast<void*>(0x081D6990);
void * const CNWSFaction__AttemptJoin = reinterpret_cast<void*>(0x081D7D74);
void * const CNWSFaction__AttemptRemove = reinterpret_cast<void*>(0x081D7DA4);
void * const CNWSFaction__ChangeMemberId = reinterpret_cast<void*>(0x081D7E48);
void * const CNWSFaction__ClearAllReputationsTowards = reinterpret_cast<void*>(0x081D84B0);
void * const CNWSFaction__GetAverageGoodEvilAlignment = reinterpret_cast<void*>(0x081D750C);
void * const CNWSFaction__GetAverageLawChaosAlignment = reinterpret_cast<void*>(0x081D75F4);
void * const CNWSFaction__GetAverageLevel = reinterpret_cast<void*>(0x081D8190);
void * const CNWSFaction__GetAverageReputation = reinterpret_cast<void*>(0x081D80FC);
void * const CNWSFaction__GetAverageXP = reinterpret_cast<void*>(0x081D820C);
void * const CNWSFaction__GetBestAC = reinterpret_cast<void*>(0x081D79F4);
void * const CNWSFaction__GetCreatureInParty = reinterpret_cast<void*>(0x081D8278);
void * const CNWSFaction__GetFactionManager = reinterpret_cast<void*>(0x081D8424);
void * const CNWSFaction__GetFactionMember = reinterpret_cast<void*>(0x081D83A0);
void * const CNWSFaction__GetGold = reinterpret_cast<void*>(0x081D80B8);
void * const CNWSFaction__GetIsInvited = reinterpret_cast<void*>(0x081D7E04);
void * const CNWSFaction__GetLeader = reinterpret_cast<void*>(0x081D7BA4);
void * const CNWSFaction__GetLeastDamagedMember = reinterpret_cast<void*>(0x081D7340);
void * const CNWSFaction__GetMemberList = reinterpret_cast<void*>(0x081D7DF0);
void * const CNWSFaction__GetMostDamagedMember = reinterpret_cast<void*>(0x081D7168);
void * const CNWSFaction__GetMostFrequentClass = reinterpret_cast<void*>(0x081D76DC);
void * const CNWSFaction__GetSingletonParty = reinterpret_cast<void*>(0x081D82A8);
void * const CNWSFaction__GetStrongestMember = reinterpret_cast<void*>(0x081D6FB8);
void * const CNWSFaction__GetWeakestMember = reinterpret_cast<void*>(0x081D6E08);
void * const CNWSFaction__GetWorstAC = reinterpret_cast<void*>(0x081D7844);
void * const CNWSFaction__Initialise = reinterpret_cast<void*>(0x081D8444);
void * const CNWSFaction__InviteMember = reinterpret_cast<void*>(0x081D6B44);
void * const CNWSFaction__RemoveMember = reinterpret_cast<void*>(0x081D6BC8);
void * const CNWSFaction__SendChatMessage = reinterpret_cast<void*>(0x081D7E90);
void * const CNWSFaction__SendFactionUpdateAdd = reinterpret_cast<void*>(0x081D7FCC);
void * const CNWSFaction__SendFactionUpdateList = reinterpret_cast<void*>(0x081D7F50);
void * const CNWSFaction__SendFactionUpdateRemove = reinterpret_cast<void*>(0x081D8048);
void * const CNWSFaction__TransferLeadership = reinterpret_cast<void*>(0x081D8344);

void * const CNWSForcedAction__CNWSForcedActionCtor = reinterpret_cast<void*>(0x0818464C);
void * const CNWSForcedAction__CNWSForcedActionDtor = reinterpret_cast<void*>(0x08184688);
void * const CNWSForcedAction__LoadForcedAction = reinterpret_cast<void*>(0x0818473C);
void * const CNWSForcedAction__SaveForcedAction = reinterpret_cast<void*>(0x081846A4);

void * const CNWSInventory__CNWSInventoryCtor = reinterpret_cast<void*>(0x0819EB9C);
void * const CNWSInventory__CNWSInventoryDtor = reinterpret_cast<void*>(0x0819EBC4);
void * const CNWSInventory__GetArraySlotFromSlotFlag = reinterpret_cast<void*>(0x0819E998);
void * const CNWSInventory__GetItemInInventory = reinterpret_cast<void*>(0x0819EC40);
void * const CNWSInventory__GetItemInSlot = reinterpret_cast<void*>(0x0819EC9C);
void * const CNWSInventory__GetSlotFromItem = reinterpret_cast<void*>(0x0819EC6C);
void * const CNWSInventory__PutItemInSlot = reinterpret_cast<void*>(0x0819ED18);
void * const CNWSInventory__RemoveItem = reinterpret_cast<void*>(0x0819ECDC);

void * const CNWSItem__CNWSItemCtor = reinterpret_cast<void*>(0x0819EDA0);
void * const CNWSItem__CNWSItemDtor = reinterpret_cast<void*>(0x0819F0C0);
void * const CNWSItem__AcquireItem = reinterpret_cast<void*>(0x081A5F4C);
void * const CNWSItem__ActiveProperty = reinterpret_cast<void*>(0x081A6754);
void * const CNWSItem__AddActiveProperty = reinterpret_cast<void*>(0x081A6784);
void * const CNWSItem__AddPassiveProperty = reinterpret_cast<void*>(0x081A67EC);
void * const CNWSItem__AddToArea = reinterpret_cast<void*>(0x081A65D0);
void * const CNWSItem__AIUpdate = reinterpret_cast<void*>(0x081A6648);
void * const CNWSItem__ApplyItemProperties = reinterpret_cast<void*>(0x081A68AC);
void * const CNWSItem__AsNWSItem = reinterpret_cast<void*>(0x081A6CA0);
void * const CNWSItem__CalculateBaseCosts = reinterpret_cast<void*>(0x081A5794);
void * const CNWSItem__CalculatePassiveCost = reinterpret_cast<void*>(0x081A54B0);
void * const CNWSItem__CloseInventory = reinterpret_cast<void*>(0x081A4E14);
void * const CNWSItem__CloseItemForAllPlayers = reinterpret_cast<void*>(0x081A5E90);
void * const CNWSItem__CompareItem = reinterpret_cast<void*>(0x081A2ED0);
void * const CNWSItem__ComputeArmorClass = reinterpret_cast<void*>(0x081A2D58);
void * const CNWSItem__ComputeWeight = reinterpret_cast<void*>(0x081A137C);
void * const CNWSItem__CopyItem = reinterpret_cast<void*>(0x081A4F98);
void * const CNWSItem__EventHandler = reinterpret_cast<void*>(0x0819FB08);
void * const CNWSItem__GetActivePropertiesList = reinterpret_cast<void*>(0x081A721C);
void * const CNWSItem__GetActiveProperty = reinterpret_cast<void*>(0x081A6854);
void * const CNWSItem__GetArmorModelPart = reinterpret_cast<void*>(0x081A6CA8);
void * const CNWSItem__GetArmorValue = reinterpret_cast<void*>(0x081A7120);
void * const CNWSItem__GetCost = reinterpret_cast<void*>(0x081A53A8);
void * const CNWSItem__GetDamageFlags = reinterpret_cast<void*>(0x081A5CA0);
void * const CNWSItem__GetDescription = reinterpret_cast<void*>(0x081A6F98);
void * const CNWSItem__GetDescriptionOverride = reinterpret_cast<void*>(0x081A6FCC);
void * const CNWSItem__GetDisplayName = reinterpret_cast<void*>(0x081A704C);
void * const CNWSItem__GetFirstName = reinterpret_cast<void*>(0x081A7028);
void * const CNWSItem__GetIdentified = reinterpret_cast<void*>(0x081A7110);
void * const CNWSItem__GetInfinite = reinterpret_cast<void*>(0x081A7144);
void * const CNWSItem__GetIsCursed = reinterpret_cast<void*>(0x081A72AC);
void * const CNWSItem__GetIsDroppable = reinterpret_cast<void*>(0x081A7250);
void * const CNWSItem__GetIsPickPocketable = reinterpret_cast<void*>(0x081A7274);
void * const CNWSItem__GetLastUsedActiveProperties = reinterpret_cast<void*>(0x081A71D4);
void * const CNWSItem__GetLastUsedActivePropertyUsesLeft = reinterpret_cast<void*>(0x081A71E4);
void * const CNWSItem__GetMinEquipLevel = reinterpret_cast<void*>(0x081A5DE4);
void * const CNWSItem__GetModelPart = reinterpret_cast<void*>(0x081A6CE8);
void * const CNWSItem__GetName = reinterpret_cast<void*>(0x081A7000);
void * const CNWSItem__GetNumActiveProperties = reinterpret_cast<void*>(0x081A71FC);
void * const CNWSItem__GetNumCharges = reinterpret_cast<void*>(0x081A71B0);
void * const CNWSItem__GetNumPassiveProperties = reinterpret_cast<void*>(0x081A720C);
void * const CNWSItem__GetPassivePropertiesList = reinterpret_cast<void*>(0x081A722C);
void * const CNWSItem__GetPassiveProperty = reinterpret_cast<void*>(0x081A6880);
void * const CNWSItem__GetPossessor = reinterpret_cast<void*>(0x081A6D3C);
void * const CNWSItem__GetPropertyByType = reinterpret_cast<void*>(0x081A2B34);
void * const CNWSItem__GetPropertyByTypeExists = reinterpret_cast<void*>(0x081A2A6C);
void * const CNWSItem__GetRepositoryArrayIndex = reinterpret_cast<void*>(0x081A6DA0);
void * const CNWSItem__GetRepositoryPosition = reinterpret_cast<void*>(0x081A6D08);
void * const CNWSItem__GetRepositoryPtr = reinterpret_cast<void*>(0x081A6D2C);
void * const CNWSItem__GetStackSize = reinterpret_cast<void*>(0x081A7168);
void * const CNWSItem__GetStolen = reinterpret_cast<void*>(0x081A718C);
void * const CNWSItem__GetUnalteredArmorModelPart = reinterpret_cast<void*>(0x081A6CC8);
void * const CNWSItem__GetUpdateDisplayName = reinterpret_cast<void*>(0x081A70D8);
void * const CNWSItem__GetUsedActivePropertyUsesLeft = reinterpret_cast<void*>(0x081A28F0);
void * const CNWSItem__GetVisualEffect = reinterpret_cast<void*>(0x081A72E4);
void * const CNWSItem__GetWeight = reinterpret_cast<void*>(0x081A6B90);
void * const CNWSItem__InitRepository = reinterpret_cast<void*>(0x0819FE3C);
void * const CNWSItem__LoadDataFromGff = reinterpret_cast<void*>(0x081A00C4);
void * const CNWSItem__LoadFromTemplate = reinterpret_cast<void*>(0x0819FEDC);
void * const CNWSItem__LoadItem = reinterpret_cast<void*>(0x081A17CC);
void * const CNWSItem__MergeItem = reinterpret_cast<void*>(0x081A31B4);
void * const CNWSItem__OpenInventory = reinterpret_cast<void*>(0x081A4C00);
void * const CNWSItem__ReadContainerItemsFromGff = reinterpret_cast<void*>(0x081A160C);
void * const CNWSItem__RemoveActiveProperty = reinterpret_cast<void*>(0x081A67B8);
void * const CNWSItem__RemoveFromArea = reinterpret_cast<void*>(0x081A669C);
void * const CNWSItem__RemoveItemProperties = reinterpret_cast<void*>(0x081A2CC0);
void * const CNWSItem__RemovePassiveProperty = reinterpret_cast<void*>(0x081A6820);
void * const CNWSItem__RestoreUsedActiveProperties = reinterpret_cast<void*>(0x081A670C);
void * const CNWSItem__RestoreUsedActiveProperty = reinterpret_cast<void*>(0x081A2A0C);
void * const CNWSItem__SaveContainerItems = reinterpret_cast<void*>(0x081A267C);
void * const CNWSItem__SaveItem = reinterpret_cast<void*>(0x081A19C4);
void * const CNWSItem__SaveItemProperties = reinterpret_cast<void*>(0x081A241C);
void * const CNWSItem__SetArmorModelPart = reinterpret_cast<void*>(0x081A6D4C);
void * const CNWSItem__SetArmorValue = reinterpret_cast<void*>(0x081A7130);
void * const CNWSItem__SetBarterOwner = reinterpret_cast<void*>(0x081A72D0);
void * const CNWSItem__SetDisplayName = reinterpret_cast<void*>(0x081A7074);
void * const CNWSItem__SetFirstName = reinterpret_cast<void*>(0x081A7038);
void * const CNWSItem__SetIdentified = reinterpret_cast<void*>(0x081A6BD8);
void * const CNWSItem__SetIdentifiedDescription = reinterpret_cast<void*>(0x081A6DE0);
void * const CNWSItem__SetIdentifiedDescriptionOverride = reinterpret_cast<void*>(0x081A6E90);
void * const CNWSItem__SetInfinite = reinterpret_cast<void*>(0x081A7154);
void * const CNWSItem__SetIsCursed = reinterpret_cast<void*>(0x081A7298);
void * const CNWSItem__SetIsDroppable = reinterpret_cast<void*>(0x081A723C);
void * const CNWSItem__SetIsPickPocketable = reinterpret_cast<void*>(0x081A7260);
void * const CNWSItem__SetModelPart = reinterpret_cast<void*>(0x081A6DC4);
void * const CNWSItem__SetName = reinterpret_cast<void*>(0x081A6F40);
void * const CNWSItem__SetNumCharges = reinterpret_cast<void*>(0x081A71C0);
void * const CNWSItem__SetPossessor = reinterpret_cast<void*>(0x0819F23C);
void * const CNWSItem__SetRecalculateCostFlag = reinterpret_cast<void*>(0x081A70FC);
void * const CNWSItem__SetRepositoryArrayIndex = reinterpret_cast<void*>(0x081A6DB0);
void * const CNWSItem__SetRepositoryPosition = reinterpret_cast<void*>(0x081A6D84);
void * const CNWSItem__SetStackSize = reinterpret_cast<void*>(0x081A7178);
void * const CNWSItem__SetStolen = reinterpret_cast<void*>(0x081A719C);
void * const CNWSItem__SetUnalteredArmorModelPart = reinterpret_cast<void*>(0x081A6D68);
void * const CNWSItem__SetUnidentifiedDescription = reinterpret_cast<void*>(0x081A6E38);
void * const CNWSItem__SetUnidentifiedDescriptionOverride = reinterpret_cast<void*>(0x081A6EE8);
void * const CNWSItem__SetUpdateDisplayName = reinterpret_cast<void*>(0x081A70E8);
void * const CNWSItem__SetWeight = reinterpret_cast<void*>(0x081A72BC);
void * const CNWSItem__SplitItem = reinterpret_cast<void*>(0x081A3230);
void * const CNWSItem__UpdateUsedActiveProperties = reinterpret_cast<void*>(0x081A2770);
void * const CNWSItem__UpdateVisualEffect = reinterpret_cast<void*>(0x081A61C8);

void * const CNWSItemPropertyHandler__CNWSItemPropertyHandlerDtor = reinterpret_cast<void*>(0x081B01E8);
void * const CNWSItemPropertyHandler__ApplyAbilityBonus = reinterpret_cast<void*>(0x081AAC94);
void * const CNWSItemPropertyHandler__ApplyACBonus = reinterpret_cast<void*>(0x081AAFEC);
void * const CNWSItemPropertyHandler__ApplyArcaneSpellFailure = reinterpret_cast<void*>(0x081AFF88);
void * const CNWSItemPropertyHandler__ApplyAttackBonus = reinterpret_cast<void*>(0x081A9E54);
void * const CNWSItemPropertyHandler__ApplyAttackPenalty = reinterpret_cast<void*>(0x081AA5C8);
void * const CNWSItemPropertyHandler__ApplyBonusFeat = reinterpret_cast<void*>(0x081ACC68);
void * const CNWSItemPropertyHandler__ApplyBonusSpellOfLevel = reinterpret_cast<void*>(0x081B09EC);
void * const CNWSItemPropertyHandler__ApplyChangedSavingThrow = reinterpret_cast<void*>(0x081ABAB4);
void * const CNWSItemPropertyHandler__ApplyChangedSavingThrowVsX = reinterpret_cast<void*>(0x081ABBBC);
void * const CNWSItemPropertyHandler__ApplyDamageBonus = reinterpret_cast<void*>(0x081A9704);
void * const CNWSItemPropertyHandler__ApplyDamageImmunity = reinterpret_cast<void*>(0x081ACE90);
void * const CNWSItemPropertyHandler__ApplyDamagePenalty = reinterpret_cast<void*>(0x081AD1FC);
void * const CNWSItemPropertyHandler__ApplyDamageReduction = reinterpret_cast<void*>(0x081AD6A8);
void * const CNWSItemPropertyHandler__ApplyDamageResistance = reinterpret_cast<void*>(0x081AD900);
void * const CNWSItemPropertyHandler__ApplyDamageVulnerability = reinterpret_cast<void*>(0x081ADB90);
void * const CNWSItemPropertyHandler__ApplyDarkVision = reinterpret_cast<void*>(0x081B032C);
void * const CNWSItemPropertyHandler__ApplyDecreaseAbility = reinterpret_cast<void*>(0x081ADE1C);
void * const CNWSItemPropertyHandler__ApplyDecreaseAC = reinterpret_cast<void*>(0x081AE178);
void * const CNWSItemPropertyHandler__ApplyDecreaseSkill = reinterpret_cast<void*>(0x081AE41C);
void * const CNWSItemPropertyHandler__ApplyEnhancementBonus = reinterpret_cast<void*>(0x081A8064);
void * const CNWSItemPropertyHandler__ApplyEnhancementPenalty = reinterpret_cast<void*>(0x081A8F40);
void * const CNWSItemPropertyHandler__ApplyFreeAction = reinterpret_cast<void*>(0x081AC82C);
void * const CNWSItemPropertyHandler__ApplyHaste = reinterpret_cast<void*>(0x081B0A7C);
void * const CNWSItemPropertyHandler__ApplyHolyAvenger = reinterpret_cast<void*>(0x081AE74C);
void * const CNWSItemPropertyHandler__ApplyImmunity = reinterpret_cast<void*>(0x081AF434);
void * const CNWSItemPropertyHandler__ApplyImprovedEvasion = reinterpret_cast<void*>(0x081B07C4);
void * const CNWSItemPropertyHandler__ApplyImprovedSavingThrow = reinterpret_cast<void*>(0x081B04EC);
void * const CNWSItemPropertyHandler__ApplyImprovedSavingThrowVsX = reinterpret_cast<void*>(0x081B044C);
void * const CNWSItemPropertyHandler__ApplyImprovedSpellResistance = reinterpret_cast<void*>(0x081AB60C);
void * const CNWSItemPropertyHandler__ApplyLight = reinterpret_cast<void*>(0x081AAA24);
void * const CNWSItemPropertyHandler__ApplyReducedSavingThrow = reinterpret_cast<void*>(0x081B058C);
void * const CNWSItemPropertyHandler__ApplyReducedSavingThrowVsX = reinterpret_cast<void*>(0x081B062C);
void * const CNWSItemPropertyHandler__ApplyRegeneration = reinterpret_cast<void*>(0x081AFED0);
void * const CNWSItemPropertyHandler__ApplySkillBonus = reinterpret_cast<void*>(0x081AF94C);
void * const CNWSItemPropertyHandler__ApplySpecialWalk = reinterpret_cast<void*>(0x081AC5E4);
void * const CNWSItemPropertyHandler__ApplySpellImmunityLevel = reinterpret_cast<void*>(0x081AFD2C);
void * const CNWSItemPropertyHandler__ApplySpellImmunitySchool = reinterpret_cast<void*>(0x081AFAF0);
void * const CNWSItemPropertyHandler__ApplySpellImmunitySpecific = reinterpret_cast<void*>(0x081AF72C);
void * const CNWSItemPropertyHandler__ApplyTrueSeeing = reinterpret_cast<void*>(0x081B06CC);
void * const CNWSItemPropertyHandler__ApplyTurnResistance = reinterpret_cast<void*>(0x081B08E0);
void * const CNWSItemPropertyHandler__ApplyUnlimitedAmmo = reinterpret_cast<void*>(0x081AC058);
void * const CNWSItemPropertyHandler__InitializeItemProperties = reinterpret_cast<void*>(0x081A757C);
void * const CNWSItemPropertyHandler__OnItemPropertyApplied = reinterpret_cast<void*>(0x081B0250);
void * const CNWSItemPropertyHandler__OnItemPropertyRemoved = reinterpret_cast<void*>(0x081B02BC);
void * const CNWSItemPropertyHandler__RemoveAbilityBonus = reinterpret_cast<void*>(0x081AAE08);
void * const CNWSItemPropertyHandler__RemoveACBonus = reinterpret_cast<void*>(0x081AB2E8);
void * const CNWSItemPropertyHandler__RemoveArcaneSpellFailure = reinterpret_cast<void*>(0x081B0094);
void * const CNWSItemPropertyHandler__RemoveAttackBonus = reinterpret_cast<void*>(0x081AA1E4);
void * const CNWSItemPropertyHandler__RemoveAttackPenalty = reinterpret_cast<void*>(0x081AA7FC);
void * const CNWSItemPropertyHandler__RemoveBonusFeat = reinterpret_cast<void*>(0x081ACD80);
void * const CNWSItemPropertyHandler__RemoveBonusSpellOfLevel = reinterpret_cast<void*>(0x081ACB94);
void * const CNWSItemPropertyHandler__RemoveChangedSavingThrow = reinterpret_cast<void*>(0x081ABD48);
void * const CNWSItemPropertyHandler__RemoveChangedSavingThrowVsX = reinterpret_cast<void*>(0x081ABE64);
void * const CNWSItemPropertyHandler__RemoveDamageBonus = reinterpret_cast<void*>(0x081A9A70);
void * const CNWSItemPropertyHandler__RemoveDamageImmunity = reinterpret_cast<void*>(0x081AD038);
void * const CNWSItemPropertyHandler__RemoveDamagePenalty = reinterpret_cast<void*>(0x081AD45C);
void * const CNWSItemPropertyHandler__RemoveDamageReduction = reinterpret_cast<void*>(0x081AD7C0);
void * const CNWSItemPropertyHandler__RemoveDamageResistance = reinterpret_cast<void*>(0x081ADA28);
void * const CNWSItemPropertyHandler__RemoveDamageVulnerability = reinterpret_cast<void*>(0x081ADCC4);
void * const CNWSItemPropertyHandler__RemoveDarkVision = reinterpret_cast<void*>(0x081B03C0);
void * const CNWSItemPropertyHandler__RemoveDecreaseAbility = reinterpret_cast<void*>(0x081ADF94);
void * const CNWSItemPropertyHandler__RemoveDecreaseAC = reinterpret_cast<void*>(0x081AE2C0);
void * const CNWSItemPropertyHandler__RemoveDecreaseSkill = reinterpret_cast<void*>(0x081AE554);
void * const CNWSItemPropertyHandler__RemoveEnhancementBonus = reinterpret_cast<void*>(0x081A8818);
void * const CNWSItemPropertyHandler__RemoveEnhancementPenalty = reinterpret_cast<void*>(0x081A9344);
void * const CNWSItemPropertyHandler__RemoveFreeAction = reinterpret_cast<void*>(0x081ACA7C);
void * const CNWSItemPropertyHandler__RemoveHaste = reinterpret_cast<void*>(0x081AE6B0);
void * const CNWSItemPropertyHandler__RemoveHolyAvenger = reinterpret_cast<void*>(0x081AF1A4);
void * const CNWSItemPropertyHandler__RemoveImmunity = reinterpret_cast<void*>(0x081AF620);
void * const CNWSItemPropertyHandler__RemoveImprovedEvasion = reinterpret_cast<void*>(0x081B0854);
void * const CNWSItemPropertyHandler__RemoveImprovedSavingThrow = reinterpret_cast<void*>(0x081AB8D4);
void * const CNWSItemPropertyHandler__RemoveImprovedSavingThrowVsX = reinterpret_cast<void*>(0x081AB834);
void * const CNWSItemPropertyHandler__RemoveImprovedSpellResistance = reinterpret_cast<void*>(0x081AB714);
void * const CNWSItemPropertyHandler__RemoveLight = reinterpret_cast<void*>(0x081AAB60);
void * const CNWSItemPropertyHandler__RemoveReducedSavingThrow = reinterpret_cast<void*>(0x081AB974);
void * const CNWSItemPropertyHandler__RemoveReducedSavingThrowVsX = reinterpret_cast<void*>(0x081ABA14);
void * const CNWSItemPropertyHandler__RemoveRegeneration = reinterpret_cast<void*>(0x081B0B00);
void * const CNWSItemPropertyHandler__RemoveSkillBonus = reinterpret_cast<void*>(0x081AFA18);
void * const CNWSItemPropertyHandler__RemoveSpecialWalk = reinterpret_cast<void*>(0x081AC714);
void * const CNWSItemPropertyHandler__RemoveSpellImmunityLevel = reinterpret_cast<void*>(0x081AFE00);
void * const CNWSItemPropertyHandler__RemoveSpellImmunitySchool = reinterpret_cast<void*>(0x081AFC0C);
void * const CNWSItemPropertyHandler__RemoveSpellImmunitySpecific = reinterpret_cast<void*>(0x081AF844);
void * const CNWSItemPropertyHandler__RemoveTrueSeeing = reinterpret_cast<void*>(0x081B074C);
void * const CNWSItemPropertyHandler__RemoveTurnResistance = reinterpret_cast<void*>(0x081B0974);
void * const CNWSItemPropertyHandler__RemoveUnlimitedAmmo = reinterpret_cast<void*>(0x081AC534);

void * const CNWSJournal__CNWSJournalCtor = reinterpret_cast<void*>(0x081B25C0);
void * const CNWSJournal__CNWSJournalDtor = reinterpret_cast<void*>(0x081B25D8);
void * const CNWSJournal__Destroy = reinterpret_cast<void*>(0x081B22F4);
void * const CNWSJournal__SetDate = reinterpret_cast<void*>(0x081B1AB8);
void * const CNWSJournal__SetPicture = reinterpret_cast<void*>(0x081B22C8);
void * const CNWSJournal__SetState = reinterpret_cast<void*>(0x081B0C54);
void * const CNWSJournal__SetTime = reinterpret_cast<void*>(0x081B1EC0);

void * const CNWSkill__CNWSkillCtor = reinterpret_cast<void*>(0x081B2D54);
void * const CNWSkill__CNWSkillDtor = reinterpret_cast<void*>(0x081B2D98);
void * const CNWSkill__GetDescriptionText = reinterpret_cast<void*>(0x081B2BF0);
void * const CNWSkill__GetNameText = reinterpret_cast<void*>(0x081B2CA4);

void * const CNWSMessage__CNWSMessageCtor = reinterpret_cast<void*>(0x0819BA5C);
void * const CNWSMessage__CNWSMessageDtor = reinterpret_cast<void*>(0x0819BA7C);
void * const CNWSMessage__AddActiveItemPropertiesToMessage = reinterpret_cast<void*>(0x08061F24);
void * const CNWSMessage__AddAreaOfEffectObjectToMessage = reinterpret_cast<void*>(0x0807EFE0);
void * const CNWSMessage__AddDoorAppearanceToMessage = reinterpret_cast<void*>(0x0807EFA0);
void * const CNWSMessage__AddItemAppearanceToMessage = reinterpret_cast<void*>(0x080621B8);
void * const CNWSMessage__AddPlaceableAppearanceToMessage = reinterpret_cast<void*>(0x08061DC8);
void * const CNWSMessage__AddTriggerGeometryToMessage = reinterpret_cast<void*>(0x08080508);
void * const CNWSMessage__AssignCreatureLists = reinterpret_cast<void*>(0x0807F078);
void * const CNWSMessage__AssignVisualEffectLists = reinterpret_cast<void*>(0x080625CC);
void * const CNWSMessage__CompareCreatureLists = reinterpret_cast<void*>(0x0807F020);
void * const CNWSMessage__CompareVisualEffectLists = reinterpret_cast<void*>(0x080626AC);
void * const CNWSMessage__ComputeAppearanceUpdateRequired = reinterpret_cast<void*>(0x08062330);
void * const CNWSMessage__ComputeGameObjectUpdateForCategory = reinterpret_cast<void*>(0x0806B1E8);
void * const CNWSMessage__ComputeGameObjectUpdateForObject = reinterpret_cast<void*>(0x0808028C);
void * const CNWSMessage__ComputeGameObjectUpdateForYourself = reinterpret_cast<void*>(0x0808027C);
void * const CNWSMessage__ComputeGameObjectUpdateForYourselfToo = reinterpret_cast<void*>(0x08080230);
void * const CNWSMessage__ComputeInventoryUpdateRequired = reinterpret_cast<void*>(0x080624A8);
void * const CNWSMessage__ComputeLastUpdate_ActionQueue = reinterpret_cast<void*>(0x08064A08);
void * const CNWSMessage__ComputeLastUpdate_AssociateState = reinterpret_cast<void*>(0x08064D8C);
void * const CNWSMessage__ComputeLastUpdate_AutoMap = reinterpret_cast<void*>(0x08064AB0);
void * const CNWSMessage__ComputeLastUpdate_CompareSpellLikeAbility = reinterpret_cast<void*>(0x08064420);
void * const CNWSMessage__ComputeLastUpdate_GuiEffectIcons = reinterpret_cast<void*>(0x080827B0);
void * const CNWSMessage__ComputeLastUpdate_GuiFeats = reinterpret_cast<void*>(0x08063E60);
void * const CNWSMessage__ComputeLastUpdate_GuiKnownSpells = reinterpret_cast<void*>(0x0806400C);
void * const CNWSMessage__ComputeLastUpdate_GuiKnownSpellUses = reinterpret_cast<void*>(0x080646B8);
void * const CNWSMessage__ComputeLastUpdate_GuiMemorizedSpells = reinterpret_cast<void*>(0x080641AC);
void * const CNWSMessage__ComputeLastUpdate_GuiNumberMemorizedSpells = reinterpret_cast<void*>(0x08064BAC);
void * const CNWSMessage__ComputeLastUpdate_GuiSkills = reinterpret_cast<void*>(0x0807F0BC);
void * const CNWSMessage__ComputeLastUpdate_PlayerState = reinterpret_cast<void*>(0x08064C84);
void * const CNWSMessage__ComputeLastUpdate_StoreUpdateSpellLikeAbility = reinterpret_cast<void*>(0x080645F0);
void * const CNWSMessage__ComputeLastUpdate_WriteSpellLikeAbility = reinterpret_cast<void*>(0x080644BC);
void * const CNWSMessage__ComputeNumAutoMapUpdatesRequired = reinterpret_cast<void*>(0x08064830);
void * const CNWSMessage__ComputeQuickbarItemUseCountUpdateRequired = reinterpret_cast<void*>(0x0807E6B0);
void * const CNWSMessage__ComputeRepositoryUpdateRequired = reinterpret_cast<void*>(0x0807F014);
void * const CNWSMessage__ComputeUpdateRequired = reinterpret_cast<void*>(0x080629D0);
void * const CNWSMessage__ComputeVisibilityLists = reinterpret_cast<void*>(0x080627DC);
void * const CNWSMessage__CreateNewLastUpdateObject = reinterpret_cast<void*>(0x0806BCD8);
void * const CNWSMessage__DeleteLastUpdateObjectsForObject = reinterpret_cast<void*>(0x0806CEA8);
void * const CNWSMessage__DeleteLastUpdateObjectsInOtherAreas = reinterpret_cast<void*>(0x0806CC64);
void * const CNWSMessage__GetLocStringServer = reinterpret_cast<void*>(0x08052860);
void * const CNWSMessage__HandlePlayerToServerAreaMessage = reinterpret_cast<void*>(0x08197630);
void * const CNWSMessage__HandlePlayerToServerBarter = reinterpret_cast<void*>(0x0819A558);
void * const CNWSMessage__HandlePlayerToServerBarter_AcceptTrade = reinterpret_cast<void*>(0x0819A9AC);
void * const CNWSMessage__HandlePlayerToServerBarter_AddItem = reinterpret_cast<void*>(0x0819A6BC);
void * const CNWSMessage__HandlePlayerToServerBarter_CloseBarter = reinterpret_cast<void*>(0x0819A5DC);
void * const CNWSMessage__HandlePlayerToServerBarter_LockList = reinterpret_cast<void*>(0x0819A920);
void * const CNWSMessage__HandlePlayerToServerBarter_MoveItem = reinterpret_cast<void*>(0x0819A850);
void * const CNWSMessage__HandlePlayerToServerBarter_RemoveItem = reinterpret_cast<void*>(0x0819A780);
void * const CNWSMessage__HandlePlayerToServerBarter_StartBarter = reinterpret_cast<void*>(0x0819BC10);
void * const CNWSMessage__HandlePlayerToServerBarter_Window = reinterpret_cast<void*>(0x0819AA38);
void * const CNWSMessage__HandlePlayerToServerCharacterDownload = reinterpret_cast<void*>(0x0819BC94);
void * const CNWSMessage__HandlePlayerToServerCharacterSheetMessage = reinterpret_cast<void*>(0x0818F7B0);
void * const CNWSMessage__HandlePlayerToServerCharListMessage = reinterpret_cast<void*>(0x08196CDC);
void * const CNWSMessage__HandlePlayerToServerChatMessage = reinterpret_cast<void*>(0x081848C8);
void * const CNWSMessage__HandlePlayerToServerCheatMessage = reinterpret_cast<void*>(0x08184EAC);
void * const CNWSMessage__HandlePlayerToServerCutscene = reinterpret_cast<void*>(0x0819B64C);
void * const CNWSMessage__HandlePlayerToServerDialogMessage = reinterpret_cast<void*>(0x08188208);
void * const CNWSMessage__HandlePlayerToServerDungeonMasterMessage = reinterpret_cast<void*>(0x081882E4);
void * const CNWSMessage__HandlePlayerToServerGameObjectUpdate = reinterpret_cast<void*>(0x0818E910);
void * const CNWSMessage__HandlePlayerToServerGoldMessage = reinterpret_cast<void*>(0x08190C14);
void * const CNWSMessage__HandlePlayerToServerGroupInputMessage = reinterpret_cast<void*>(0x081934E8);
void * const CNWSMessage__HandlePlayerToServerGroupInputWalkToWaypoint = reinterpret_cast<void*>(0x081901F8);
void * const CNWSMessage__HandlePlayerToServerGuiContainerMessage = reinterpret_cast<void*>(0x0818F66C);
void * const CNWSMessage__HandlePlayerToServerGuiInventoryMessage = reinterpret_cast<void*>(0x0818F524);
void * const CNWSMessage__HandlePlayerToServerGuiQuickbar = reinterpret_cast<void*>(0x0819BB58);
void * const CNWSMessage__HandlePlayerToServerGuiQuickbar_SetButton = reinterpret_cast<void*>(0x08198F1C);
void * const CNWSMessage__HandlePlayerToServerInputAbortDriveControl = reinterpret_cast<void*>(0x0818F9EC);
void * const CNWSMessage__HandlePlayerToServerInputCancelGuiTimingEvent = reinterpret_cast<void*>(0x0819BAB8);
void * const CNWSMessage__HandlePlayerToServerInputDriveControl = reinterpret_cast<void*>(0x0818F8C0);
void * const CNWSMessage__HandlePlayerToServerInputMessage = reinterpret_cast<void*>(0x08190D9C);
void * const CNWSMessage__HandlePlayerToServerInputWalkToWaypoint = reinterpret_cast<void*>(0x0818FA78);
void * const CNWSMessage__HandlePlayerToServerInventoryMessage = reinterpret_cast<void*>(0x081952D8);
void * const CNWSMessage__HandlePlayerToServerJournalMessage = reinterpret_cast<void*>(0x08198BB8);
void * const CNWSMessage__HandlePlayerToServerLevelUpMessage = reinterpret_cast<void*>(0x08198654);
void * const CNWSMessage__HandlePlayerToServerLoginMessage = reinterpret_cast<void*>(0x08195F98);
void * const CNWSMessage__HandlePlayerToServerMapPinChangePin = reinterpret_cast<void*>(0x0819A0E8);
void * const CNWSMessage__HandlePlayerToServerMapPinDestroyMapPin = reinterpret_cast<void*>(0x08199E8C);
void * const CNWSMessage__HandlePlayerToServerMapPinMessage = reinterpret_cast<void*>(0x0819BBB8);
void * const CNWSMessage__HandlePlayerToServerMapPinSetMapPinAt = reinterpret_cast<void*>(0x0819995C);
void * const CNWSMessage__HandlePlayerToServerMessage = reinterpret_cast<void*>(0x08196544);
void * const CNWSMessage__HandlePlayerToServerModuleMessage = reinterpret_cast<void*>(0x08196E28);
void * const CNWSMessage__HandlePlayerToServerParty = reinterpret_cast<void*>(0x08197774);
void * const CNWSMessage__HandlePlayerToServerPlayerDeath = reinterpret_cast<void*>(0x0819AAB8);
void * const CNWSMessage__HandlePlayerToServerPlayerList = reinterpret_cast<void*>(0x0819B71C);
void * const CNWSMessage__HandlePlayerToServerPlayModuleCharacterList = reinterpret_cast<void*>(0x0819BCFC);
void * const CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Start = reinterpret_cast<void*>(0x0819B568);
void * const CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Stop = reinterpret_cast<void*>(0x0819BD64);
void * const CNWSMessage__HandlePlayerToServerPortal = reinterpret_cast<void*>(0x0819B384);
void * const CNWSMessage__HandlePlayerToServerPVPListOperations = reinterpret_cast<void*>(0x0819AB58);
void * const CNWSMessage__HandlePlayerToServerQuickChatMessage = reinterpret_cast<void*>(0x08184804);
void * const CNWSMessage__HandlePlayerToServerServerChatMessage = reinterpret_cast<void*>(0x0819BB04);
void * const CNWSMessage__HandlePlayerToServerServerStatusMessage = reinterpret_cast<void*>(0x0819BB10);
void * const CNWSMessage__HandlePlayerToServerShutDownServer = reinterpret_cast<void*>(0x0819B41C);
void * const CNWSMessage__HandlePlayerToServerStoreMessage = reinterpret_cast<void*>(0x08190794);
void * const CNWSMessage__HandleServerAdminToServerMessage = reinterpret_cast<void*>(0x0819BE40);
void * const CNWSMessage__HasValidString = reinterpret_cast<void*>(0x0807D924);
void * const CNWSMessage__ParseGetBool = reinterpret_cast<void*>(0x0819E81C);
void * const CNWSMessage__ParseGetString = reinterpret_cast<void*>(0x0819E864);
void * const CNWSMessage__ParseToken = reinterpret_cast<void*>(0x0819E8F0);
void * const CNWSMessage__ReadOBJECTIDServer = reinterpret_cast<void*>(0x08052D84);
void * const CNWSMessage__SelectCategoryForGameObject = reinterpret_cast<void*>(0x0806B0FC);
void * const CNWSMessage__SendPlayerToServerGuiInventory_Status = reinterpret_cast<void*>(0x0808175C);
void * const CNWSMessage__SendServerPlayerItemUpdate_DestroyItem = reinterpret_cast<void*>(0x080819E0);
void * const CNWSMessage__SendServerToAllPlayersCreatureUpdate_StripEquippedItems = reinterpret_cast<void*>(0x0807BC4C);
void * const CNWSMessage__SendServerToPlayerActivatePortal = reinterpret_cast<void*>(0x0807DAA8);
void * const CNWSMessage__SendServerToPlayerAIActionPlaySound = reinterpret_cast<void*>(0x0807FAE0);
void * const CNWSMessage__SendServerToPlayerAmbientBattleMusicChange = reinterpret_cast<void*>(0x08082604);
void * const CNWSMessage__SendServerToPlayerAmbientBattleMusicPlay = reinterpret_cast<void*>(0x080825A4);
void * const CNWSMessage__SendServerToPlayerAmbientMusicChangeTrack = reinterpret_cast<void*>(0x08082530);
void * const CNWSMessage__SendServerToPlayerAmbientMusicPlay = reinterpret_cast<void*>(0x0808246C);
void * const CNWSMessage__SendServerToPlayerAmbientMusicSetDelay = reinterpret_cast<void*>(0x080824CC);
void * const CNWSMessage__SendServerToPlayerAmbientSoundLoopChange = reinterpret_cast<void*>(0x080826C8);
void * const CNWSMessage__SendServerToPlayerAmbientSoundLoopPlay = reinterpret_cast<void*>(0x08082668);
void * const CNWSMessage__SendServerToPlayerAmbientSoundVolumeChange = reinterpret_cast<void*>(0x0808273C);
void * const CNWSMessage__SendServerToPlayerArea_ChangeDayNight = reinterpret_cast<void*>(0x0807F87C);
void * const CNWSMessage__SendServerToPlayerArea_ClientArea = reinterpret_cast<void*>(0x0806504C);
void * const CNWSMessage__SendServerToPlayerArea_RecomputeStaticLighting = reinterpret_cast<void*>(0x0806562C);
void * const CNWSMessage__SendServerToPlayerArea_VisualEffect = reinterpret_cast<void*>(0x08065590);
void * const CNWSMessage__SendServerToPlayerArea_Weather = reinterpret_cast<void*>(0x0807F804);
void * const CNWSMessage__SendServerToPlayerBarterAcceptTrade = reinterpret_cast<void*>(0x08082344);
void * const CNWSMessage__SendServerToPlayerBarterCloseBarter = reinterpret_cast<void*>(0x08082218);
void * const CNWSMessage__SendServerToPlayerBarterLockList = reinterpret_cast<void*>(0x080822B0);
void * const CNWSMessage__SendServerToPlayerBarterReject = reinterpret_cast<void*>(0x080823D8);
void * const CNWSMessage__SendServerToPlayerBarterStartBarter = reinterpret_cast<void*>(0x08082184);
void * const CNWSMessage__SendServerToPlayerCamera_ChangeLocation = reinterpret_cast<void*>(0x08064E14);
void * const CNWSMessage__SendServerToPlayerCamera_LockDistance = reinterpret_cast<void*>(0x0807F29C);
void * const CNWSMessage__SendServerToPlayerCamera_LockPitch = reinterpret_cast<void*>(0x0807F238);
void * const CNWSMessage__SendServerToPlayerCamera_LockYaw = reinterpret_cast<void*>(0x0807F300);
void * const CNWSMessage__SendServerToPlayerCamera_Restore = reinterpret_cast<void*>(0x0807F1B0);
void * const CNWSMessage__SendServerToPlayerCamera_SetHeight = reinterpret_cast<void*>(0x0807F1D0);
void * const CNWSMessage__SendServerToPlayerCamera_SetMode = reinterpret_cast<void*>(0x0807F124);
void * const CNWSMessage__SendServerToPlayerCamera_Store = reinterpret_cast<void*>(0x0807F190);
void * const CNWSMessage__SendServerToPlayerCCMessage = reinterpret_cast<void*>(0x08078AB8);
void * const CNWSMessage__SendServerToPlayerCharacterDownloadFail = reinterpret_cast<void*>(0x0807DD48);
void * const CNWSMessage__SendServerToPlayerCharacterDownloadReply = reinterpret_cast<void*>(0x0807DC84);
void * const CNWSMessage__SendServerToPlayerCharList = reinterpret_cast<void*>(0x08065AD4);
void * const CNWSMessage__SendServerToPlayerChat_DM_Silent_Shout = reinterpret_cast<void*>(0x08069DD8);
void * const CNWSMessage__SendServerToPlayerChat_DM_Talk = reinterpret_cast<void*>(0x08069248);
void * const CNWSMessage__SendServerToPlayerChat_DM_Whisper = reinterpret_cast<void*>(0x0806A03C);
void * const CNWSMessage__SendServerToPlayerChat_Party = reinterpret_cast<void*>(0x08068FE4);
void * const CNWSMessage__SendServerToPlayerChat_ServerTell = reinterpret_cast<void*>(0x0807FF68);
void * const CNWSMessage__SendServerToPlayerChat_Shout = reinterpret_cast<void*>(0x08069710);
void * const CNWSMessage__SendServerToPlayerChat_Silent_Shout = reinterpret_cast<void*>(0x08069A74);
void * const CNWSMessage__SendServerToPlayerChat_StrRef = reinterpret_cast<void*>(0x0807FD94);
void * const CNWSMessage__SendServerToPlayerChat_Talk = reinterpret_cast<void*>(0x0807FE10);
void * const CNWSMessage__SendServerToPlayerChat_Tell = reinterpret_cast<void*>(0x080694AC);
void * const CNWSMessage__SendServerToPlayerChat_Whisper = reinterpret_cast<void*>(0x0808003C);
void * const CNWSMessage__SendServerToPlayerChatMessage = reinterpret_cast<void*>(0x0806839C);
void * const CNWSMessage__SendServerToPlayerChatMultiLang_Helper = reinterpret_cast<void*>(0x0807F984);
void * const CNWSMessage__SendServerToPlayerChatMultiLangMessage = reinterpret_cast<void*>(0x08067E6C);
void * const CNWSMessage__SendServerToPlayerChatStrRefMessage = reinterpret_cast<void*>(0x08068150);
void * const CNWSMessage__SendServerToPlayerChatStrRefStatusMessage = reinterpret_cast<void*>(0x0819BE0C);
void * const CNWSMessage__SendServerToPlayerCheatDebugMode = reinterpret_cast<void*>(0x0807B0D4);
void * const CNWSMessage__SendServerToPlayerCheatNasty = reinterpret_cast<void*>(0x08081394);
void * const CNWSMessage__SendServerToPlayerCheatPonyRide = reinterpret_cast<void*>(0x080813F4);
void * const CNWSMessage__SendServerToPlayerCheatRainOfCows = reinterpret_cast<void*>(0x08081460);
void * const CNWSMessage__SendServerToPlayerCloseStoreInventory = reinterpret_cast<void*>(0x0808067C);
void * const CNWSMessage__SendServerToPlayerCombatRoundStarted = reinterpret_cast<void*>(0x08081540);
void * const CNWSMessage__SendServerToPlayerCutscene_BlackScreen = reinterpret_cast<void*>(0x08081954);
void * const CNWSMessage__SendServerToPlayerCutscene_FadeFromBlack = reinterpret_cast<void*>(0x080818C4);
void * const CNWSMessage__SendServerToPlayerCutscene_FadeToBlack = reinterpret_cast<void*>(0x08081854);
void * const CNWSMessage__SendServerToPlayerCutscene_HideGui = reinterpret_cast<void*>(0x08081974);
void * const CNWSMessage__SendServerToPlayerCutscene_Status = reinterpret_cast<void*>(0x080817D4);
void * const CNWSMessage__SendServerToPlayerCutscene_StopFade = reinterpret_cast<void*>(0x08081934);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Area = reinterpret_cast<void*>(0x0807D634);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Creature = reinterpret_cast<void*>(0x0807CD98);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Door = reinterpret_cast<void*>(0x0807D42C);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Item = reinterpret_cast<void*>(0x0807D0D0);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Placeable = reinterpret_cast<void*>(0x0807D264);
void * const CNWSMessage__SendServerToPlayerDebugInfo_Trigger = reinterpret_cast<void*>(0x0807D1B0);
void * const CNWSMessage__SendServerToPlayerDestroyDeathGUI = reinterpret_cast<void*>(0x080829FC);
void * const CNWSMessage__SendServerToPlayerDialogClose = reinterpret_cast<void*>(0x08080A24);
void * const CNWSMessage__SendServerToPlayerDialogEntry = reinterpret_cast<void*>(0x0808070C);
void * const CNWSMessage__SendServerToPlayerDialogReplies = reinterpret_cast<void*>(0x080807FC);
void * const CNWSMessage__SendServerToPlayerDialogReplyChosen = reinterpret_cast<void*>(0x08080918);
void * const CNWSMessage__SendServerToPlayerDungeonMasterAreaList__0 = reinterpret_cast<void*>(0x08075960);
void * const CNWSMessage__SendServerToPlayerDungeonMasterAreaList__1 = reinterpret_cast<void*>(0x08075A18);
void * const CNWSMessage__SendServerToPlayerDungeonMasterCreatorLists = reinterpret_cast<void*>(0x0807678C);
void * const CNWSMessage__SendServerToPlayerDungeonMasterObjectList = reinterpret_cast<void*>(0x080761D0);
void * const CNWSMessage__SendServerToPlayerDungeonMastersDifficultyChange = reinterpret_cast<void*>(0x08076E34);
void * const CNWSMessage__SendServerToPlayerDungeonMasterSearchByIdResult = reinterpret_cast<void*>(0x08080A44);
void * const CNWSMessage__SendServerToPlayerDungeonMasterSearchByTagResult = reinterpret_cast<void*>(0x08075B2C);
void * const CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList__0 = reinterpret_cast<void*>(0x08080AC8);
void * const CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList__1 = reinterpret_cast<void*>(0x08080B04);
void * const CNWSMessage__SendServerToPlayerExamineGui_CreatureData = reinterpret_cast<void*>(0x08073958);
void * const CNWSMessage__SendServerToPlayerExamineGui_DoorData = reinterpret_cast<void*>(0x08074C50);
void * const CNWSMessage__SendServerToPlayerExamineGui_ItemData = reinterpret_cast<void*>(0x08073F9C);
void * const CNWSMessage__SendServerToPlayerExamineGui_PlaceableData = reinterpret_cast<void*>(0x08074668);
void * const CNWSMessage__SendServerToPlayerExamineGui_TrapData = reinterpret_cast<void*>(0x080747D0);
void * const CNWSMessage__SendServerToPlayerGameObjUpdate__0 = reinterpret_cast<void*>(0x0806B768);
void * const CNWSMessage__SendServerToPlayerGameObjUpdate__1 = reinterpret_cast<void*>(0x08080358);
void * const CNWSMessage__SendServerToPlayerGameObjUpdate_ObjControl = reinterpret_cast<void*>(0x0808069C);
void * const CNWSMessage__SendServerToPlayerGameObjUpdateFloatyText = reinterpret_cast<void*>(0x080814CC);
void * const CNWSMessage__SendServerToPlayerGameObjUpdateVisEffect = reinterpret_cast<void*>(0x0807B1AC);
void * const CNWSMessage__SendServerToPlayerGUICharacterSheet_NotPermitted = reinterpret_cast<void*>(0x08082B14);
void * const CNWSMessage__SendServerToPlayerGuiContainerObject_Status = reinterpret_cast<void*>(0x080816E4);
void * const CNWSMessage__SendServerToPlayerGuiQuickbar_SetButton = reinterpret_cast<void*>(0x0807C794);
void * const CNWSMessage__SendServerToPlayerGuiTimingEvent = reinterpret_cast<void*>(0x08082A20);
void * const CNWSMessage__SendServerToPlayerInventory_ConfirmDrop = reinterpret_cast<void*>(0x08080DE8);
void * const CNWSMessage__SendServerToPlayerInventory_Drop = reinterpret_cast<void*>(0x08080B24);
void * const CNWSMessage__SendServerToPlayerInventory_DropCancel = reinterpret_cast<void*>(0x08080B94);
void * const CNWSMessage__SendServerToPlayerInventory_Equip = reinterpret_cast<void*>(0x08080C04);
void * const CNWSMessage__SendServerToPlayerInventory_EquipCancel = reinterpret_cast<void*>(0x08080C84);
void * const CNWSMessage__SendServerToPlayerInventory_LearnScroll = reinterpret_cast<void*>(0x080828A4);
void * const CNWSMessage__SendServerToPlayerInventory_Pickup = reinterpret_cast<void*>(0x08080EC8);
void * const CNWSMessage__SendServerToPlayerInventory_PickupCancel = reinterpret_cast<void*>(0x08080F38);
void * const CNWSMessage__SendServerToPlayerInventory_RepositoryMove = reinterpret_cast<void*>(0x08080D08);
void * const CNWSMessage__SendServerToPlayerInventory_RepositoryMoveCancel = reinterpret_cast<void*>(0x08080D78);
void * const CNWSMessage__SendServerToPlayerInventory_SelectPage = reinterpret_cast<void*>(0x08080EC0);
void * const CNWSMessage__SendServerToPlayerInventory_SelectPanel = reinterpret_cast<void*>(0x08080E58);
void * const CNWSMessage__SendServerToPlayerInventory_Unequip = reinterpret_cast<void*>(0x08080FA8);
void * const CNWSMessage__SendServerToPlayerInventory_UnequipCancel = reinterpret_cast<void*>(0x08081018);
void * const CNWSMessage__SendServerToPlayerJournalAddQuest = reinterpret_cast<void*>(0x0807BD28);
void * const CNWSMessage__SendServerToPlayerJournalAddWorld = reinterpret_cast<void*>(0x0807BF24);
void * const CNWSMessage__SendServerToPlayerJournalAddWorldStrref = reinterpret_cast<void*>(0x08081BFC);
void * const CNWSMessage__SendServerToPlayerJournalDeleteWorld = reinterpret_cast<void*>(0x08081C98);
void * const CNWSMessage__SendServerToPlayerJournalDeleteWorldAll = reinterpret_cast<void*>(0x08081D78);
void * const CNWSMessage__SendServerToPlayerJournalDeleteWorldStrref = reinterpret_cast<void*>(0x08081D08);
void * const CNWSMessage__SendServerToPlayerJournalFullUpdate = reinterpret_cast<void*>(0x0807C09C);
void * const CNWSMessage__SendServerToPlayerJournalFullUpdateNotNeeded = reinterpret_cast<void*>(0x08081DE0);
void * const CNWSMessage__SendServerToPlayerJournalRemoveQuest = reinterpret_cast<void*>(0x08081A44);
void * const CNWSMessage__SendServerToPlayerJournalSetQuestPicture = reinterpret_cast<void*>(0x08081B18);
void * const CNWSMessage__SendServerToPlayerJournalUpdated = reinterpret_cast<void*>(0x08081E74);
void * const CNWSMessage__SendServerToPlayerLevelUp_Begin = reinterpret_cast<void*>(0x0807C59C);
void * const CNWSMessage__SendServerToPlayerLevelUp_Confirmation = reinterpret_cast<void*>(0x08081F54);
void * const CNWSMessage__SendServerToPlayerLoadBar_EndStallEvent = reinterpret_cast<void*>(0x0807F5F0);
void * const CNWSMessage__SendServerToPlayerLoadBar_StartStallEvent = reinterpret_cast<void*>(0x0807F510);
void * const CNWSMessage__SendServerToPlayerLoadBar_UpdateStallEvent = reinterpret_cast<void*>(0x0807F578);
void * const CNWSMessage__SendServerToPlayerLogin_CharacterQuery = reinterpret_cast<void*>(0x0807F364);
void * const CNWSMessage__SendServerToPlayerLogin_Confirm = reinterpret_cast<void*>(0x08081088);
void * const CNWSMessage__SendServerToPlayerLogin_Fail = reinterpret_cast<void*>(0x080810C8);
void * const CNWSMessage__SendServerToPlayerLogin_GetWaypoint = reinterpret_cast<void*>(0x080810A8);
void * const CNWSMessage__SendServerToPlayerLogin_NeedCharacter = reinterpret_cast<void*>(0x0807F414);
void * const CNWSMessage__SendServerToPlayerMapPinAdded = reinterpret_cast<void*>(0x0807CC80);
void * const CNWSMessage__SendServerToPlayerMapPinCreated = reinterpret_cast<void*>(0x0808207C);
void * const CNWSMessage__SendServerToPlayerMapPinEnabled = reinterpret_cast<void*>(0x0808200C);
void * const CNWSMessage__SendServerToPlayerMessage = reinterpret_cast<void*>(0x08076F10);
void * const CNWSMessage__SendServerToPlayerModule_DumpPlayer = reinterpret_cast<void*>(0x0807F7E4);
void * const CNWSMessage__SendServerToPlayerModule_EndGame = reinterpret_cast<void*>(0x0807F4A0);
void * const CNWSMessage__SendServerToPlayerModule_EndStartNewModule = reinterpret_cast<void*>(0x0807F780);
void * const CNWSMessage__SendServerToPlayerModule_ExportReply = reinterpret_cast<void*>(0x0807F668);
void * const CNWSMessage__SendServerToPlayerModule_Info = reinterpret_cast<void*>(0x08077004);
void * const CNWSMessage__SendServerToPlayerModule_Loading = reinterpret_cast<void*>(0x0807F6C0);
void * const CNWSMessage__SendServerToPlayerModule_SaveGameStatus = reinterpret_cast<void*>(0x0807F434);
void * const CNWSMessage__SendServerToPlayerModule_SetPauseState = reinterpret_cast<void*>(0x08064EE8);
void * const CNWSMessage__SendServerToPlayerModule_StartStartNewModule = reinterpret_cast<void*>(0x0807F75C);
void * const CNWSMessage__SendServerToPlayerModuleUpdate_Time = reinterpret_cast<void*>(0x0807C690);
void * const CNWSMessage__SendServerToPlayerOpenStoreInventory = reinterpret_cast<void*>(0x080708B4);
void * const CNWSMessage__SendServerToPlayerParty_Invite = reinterpret_cast<void*>(0x0808112C);
void * const CNWSMessage__SendServerToPlayerParty_List = reinterpret_cast<void*>(0x08081138);
void * const CNWSMessage__SendServerToPlayerParty_TransferObjectControl = reinterpret_cast<void*>(0x080811F4);
void * const CNWSMessage__SendServerToPlayerPartyBar_PanelButtonFlash = reinterpret_cast<void*>(0x08082914);
void * const CNWSMessage__SendServerToPlayerPlaceableUpdate_Useable = reinterpret_cast<void*>(0x0807EE10);
void * const CNWSMessage__SendServerToPlayerPlayerList_Add = reinterpret_cast<void*>(0x080770A8);
void * const CNWSMessage__SendServerToPlayerPlayerList_All = reinterpret_cast<void*>(0x080774E4);
void * const CNWSMessage__SendServerToPlayerPlayerList_Delete = reinterpret_cast<void*>(0x08081268);
void * const CNWSMessage__SendServerToPlayerPlayerList_ReauthorizeCDKey = reinterpret_cast<void*>(0x080812EC);
void * const CNWSMessage__SendServerToPlayerPlayModuleCharacterListResponse = reinterpret_cast<void*>(0x0807E44C);
void * const CNWSMessage__SendServerToPlayerPolymorph = reinterpret_cast<void*>(0x08082B78);
void * const CNWSMessage__SendServerToPlayerPopUpGUIPanel = reinterpret_cast<void*>(0x0807D6D0);
void * const CNWSMessage__SendServerToPlayerPVP_Attitude_Change = reinterpret_cast<void*>(0x0807DEA4);
void * const CNWSMessage__SendServerToPlayerQuickChat = reinterpret_cast<void*>(0x0807FEF0);
void * const CNWSMessage__SendServerToPlayerQuickChatMessage = reinterpret_cast<void*>(0x08068DEC);
void * const CNWSMessage__SendServerToPlayerSafeProjectile = reinterpret_cast<void*>(0x0807073C);
void * const CNWSMessage__SendServerToPlayerSaveLoad_Status = reinterpret_cast<void*>(0x0807F6E0);
void * const CNWSMessage__SendServerToPlayerServerStatus_Status = reinterpret_cast<void*>(0x08077A98);
void * const CNWSMessage__SendServerToPlayerSetCustomToken = reinterpret_cast<void*>(0x0807F8F4);
void * const CNWSMessage__SendServerToPlayerSetCustomTokenList = reinterpret_cast<void*>(0x08067D60);
void * const CNWSMessage__SendServerToPlayerShutDownServer = reinterpret_cast<void*>(0x08082990);
void * const CNWSMessage__SendServerToPlayerSoundObject_ChangePosition = reinterpret_cast<void*>(0x0807FCFC);
void * const CNWSMessage__SendServerToPlayerSoundObject_ChangeVolume = reinterpret_cast<void*>(0x0807FC88);
void * const CNWSMessage__SendServerToPlayerSoundObject_Play = reinterpret_cast<void*>(0x0807FBC0);
void * const CNWSMessage__SendServerToPlayerSoundObject_Stop = reinterpret_cast<void*>(0x0807FC24);
void * const CNWSMessage__SendServerToPlayerStoreConfirmTransaction = reinterpret_cast<void*>(0x08081F98);
void * const CNWSMessage__SendServerToPlayerStringMessage = reinterpret_cast<void*>(0x080805A0);
void * const CNWSMessage__SendServerToPlayerUpdateActiveItemProperties = reinterpret_cast<void*>(0x0807B5C8);
void * const CNWSMessage__SendServerToPlayerUpdateActiveItemPropertiesUses = reinterpret_cast<void*>(0x080815A0);
void * const CNWSMessage__SendServerToPlayerUpdateBlackoutEffect = reinterpret_cast<void*>(0x08082AB0);
void * const CNWSMessage__SendServerToPlayerUpdateCharResponse = reinterpret_cast<void*>(0x08066C40);
void * const CNWSMessage__SendServerToPlayerUpdateFogAmount = reinterpret_cast<void*>(0x0807BAFC);
void * const CNWSMessage__SendServerToPlayerUpdateFogColor = reinterpret_cast<void*>(0x0807B9BC);
void * const CNWSMessage__SendServerToPlayerUpdateItemName = reinterpret_cast<void*>(0x0807B704);
void * const CNWSMessage__SendServerToPlayerUpdateSkyBox = reinterpret_cast<void*>(0x0807B890);
void * const CNWSMessage__SendServerToPlayerVoiceChat_Play = reinterpret_cast<void*>(0x08081664);
void * const CNWSMessage__SendServerToPlayerWhirlwindAttack = reinterpret_cast<void*>(0x0807EB68);
void * const CNWSMessage__SendServerToPlayerWhirlwindAttackDamage = reinterpret_cast<void*>(0x0807ECC0);
void * const CNWSMessage__SendServerToServerAdminBannedList = reinterpret_cast<void*>(0x081E6030);
void * const CNWSMessage__SendServerToServerAdminMessage = reinterpret_cast<void*>(0x081E4BF4);
void * const CNWSMessage__SendServerToServerAdminModuleList = reinterpret_cast<void*>(0x081E4CF0);
void * const CNWSMessage__SendServerToServerAdminPlayerList = reinterpret_cast<void*>(0x081E5F38);
void * const CNWSMessage__SendServerToServerAdminPortalList = reinterpret_cast<void*>(0x081E6128);
void * const CNWSMessage__SendServerToServerAdminSaveGameList = reinterpret_cast<void*>(0x081E567C);
void * const CNWSMessage__SendServerToServerAdminSaveStatus = reinterpret_cast<void*>(0x081E8604);
void * const CNWSMessage__SendServerToServerAdminServerSettings = reinterpret_cast<void*>(0x081E6220);
void * const CNWSMessage__SendServerToServerAdminServerStatus = reinterpret_cast<void*>(0x081E5D50);
void * const CNWSMessage__SortObjectsForGameObjectUpdate = reinterpret_cast<void*>(0x0806B3A4);
void * const CNWSMessage__StoreValuesInLastPlayerUpdateObject = reinterpret_cast<void*>(0x0806FBEC);
void * const CNWSMessage__StoreValuesInLastUpdateObject = reinterpret_cast<void*>(0x08080400);
void * const CNWSMessage__StoreValuesInLastUpdatePartyObject = reinterpret_cast<void*>(0x080714D8);
void * const CNWSMessage__TestObjectUpdateDifferences = reinterpret_cast<void*>(0x08080444);
void * const CNWSMessage__TestObjectVisible = reinterpret_cast<void*>(0x0806C6E8);
void * const CNWSMessage__TestPartyObjectUpdateDifferences = reinterpret_cast<void*>(0x08070ED4);
void * const CNWSMessage__TestPlayerUpdateDifferences = reinterpret_cast<void*>(0x0806D744);
void * const CNWSMessage__UpdateLastUpdate_GuiEffectIcons = reinterpret_cast<void*>(0x0807DFA8);
void * const CNWSMessage__UpdateLastUpdateActionQueue = reinterpret_cast<void*>(0x0806497C);
void * const CNWSMessage__UpdateLastUpdateAutoMap = reinterpret_cast<void*>(0x08064784);
void * const CNWSMessage__UpdateLastUpdateInventory = reinterpret_cast<void*>(0x08077CB4);
void * const CNWSMessage__UpdateLastUpdateObject = reinterpret_cast<void*>(0x08077DBC);
void * const CNWSMessage__UpdateLastUpdateObjectAppearance = reinterpret_cast<void*>(0x08078968);
void * const CNWSMessage__UpdateLastUpdateVisibilityList = reinterpret_cast<void*>(0x080628EC);
void * const CNWSMessage__WriteCExoLocStringServer = reinterpret_cast<void*>(0x08052480);
void * const CNWSMessage__WriteGameObjUpdate_CharacterSheet = reinterpret_cast<void*>(0x08074DB8);
void * const CNWSMessage__WriteGameObjUpdate_DungeonMasterAIState = reinterpret_cast<void*>(0x08071898);
void * const CNWSMessage__WriteGameObjUpdate_MajorGUIPanels = reinterpret_cast<void*>(0x0806D040);
void * const CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_HenchmanInventoryData = reinterpret_cast<void*>(0x0806D618);
void * const CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_Inventory = reinterpret_cast<void*>(0x0806D174);
void * const CNWSMessage__WriteGameObjUpdate_MinorGUIPanels = reinterpret_cast<void*>(0x0806D468);
void * const CNWSMessage__WriteGameObjUpdate_PartyAIState = reinterpret_cast<void*>(0x08071704);
void * const CNWSMessage__WriteGameObjUpdate_PlayerUpdate = reinterpret_cast<void*>(0x0806DB28);
void * const CNWSMessage__WriteGameObjUpdate_UpdateAppearance = reinterpret_cast<void*>(0x0806A2A0);
void * const CNWSMessage__WriteGameObjUpdate_UpdateObject = reinterpret_cast<void*>(0x08071A24);
void * const CNWSMessage__WriteGameObjUpdate_UpdateQuickbarItemUseCount = reinterpret_cast<void*>(0x0807E82C);
void * const CNWSMessage__WriteGameObjUpdate_WorkRemaining = reinterpret_cast<void*>(0x08080374);
void * const CNWSMessage__WriteGameObjUpdate_WriteInventorySlotAdd = reinterpret_cast<void*>(0x0808011C);
void * const CNWSMessage__WriteGameObjUpdate_WriteInventorySlotDelete = reinterpret_cast<void*>(0x0808017C);
void * const CNWSMessage__WriteGameObjUpdate_WriteInventorySlotUpdate = reinterpret_cast<void*>(0x080801BC);
void * const CNWSMessage__WriteGuiEffectIconsUpdate = reinterpret_cast<void*>(0x0807E188);
void * const CNWSMessage__WriteOBJECTIDServer = reinterpret_cast<void*>(0x08052434);
void * const CNWSMessage__WriteRepositoryUpdate = reinterpret_cast<void*>(0x08070240);
void * const CNWSMessage__WriteStoreInventoryUpdate = reinterpret_cast<void*>(0x08070A90);

void * const CNWSModule__CNWSModuleCtor = reinterpret_cast<void*>(0x081B2DD0);
void * const CNWSModule__CNWSModuleDtor = reinterpret_cast<void*>(0x081B3718);
void * const CNWSModule__AddObjectToLimbo = reinterpret_cast<void*>(0x081C09F8);
void * const CNWSModule__AddObjectToLookupTable = reinterpret_cast<void*>(0x081BEAD4);
void * const CNWSModule__AddToTURDList = reinterpret_cast<void*>(0x081BF7F8);
void * const CNWSModule__AddTURDsToWorld = reinterpret_cast<void*>(0x081B8BC0);
void * const CNWSModule__AddWorldJournalEntry = reinterpret_cast<void*>(0x081BF134);
void * const CNWSModule__AddWorldJournalEntryStrref = reinterpret_cast<void*>(0x081BF3B8);
void * const CNWSModule__AIUpdate = reinterpret_cast<void*>(0x081B3DEC);
void * const CNWSModule__AsNWSModule = reinterpret_cast<void*>(0x081C103C);
void * const CNWSModule__CleanUpLimboList = reinterpret_cast<void*>(0x081C0AEC);
void * const CNWSModule__ClearAreaVisitedFlags = reinterpret_cast<void*>(0x081C0780);
void * const CNWSModule__ComputeInterAreaPath = reinterpret_cast<void*>(0x081B3D34);
void * const CNWSModule__DeleteWorldJournalAllEntries = reinterpret_cast<void*>(0x081BF748);
void * const CNWSModule__DeleteWorldJournalEntry = reinterpret_cast<void*>(0x081BF568);
void * const CNWSModule__DeleteWorldJournalEntryStrref = reinterpret_cast<void*>(0x081BF658);
void * const CNWSModule__DoUpdate = reinterpret_cast<void*>(0x081C05FC);
void * const CNWSModule__EventHandler = reinterpret_cast<void*>(0x081B3F0C);
void * const CNWSModule__FindObjectByTagOrdinal = reinterpret_cast<void*>(0x081BEE08);
void * const CNWSModule__FindObjectByTagTypeOrdinal = reinterpret_cast<void*>(0x081BEF74);
void * const CNWSModule__FindTagPositionInTable = reinterpret_cast<void*>(0x081C08D0);
void * const CNWSModule__GenerateInterAreaDFSSuccessors = reinterpret_cast<void*>(0x081B43CC);
void * const CNWSModule__GetArea__0 = reinterpret_cast<void*>(0x081C0690);
void * const CNWSModule__GetArea__1 = reinterpret_cast<void*>(0x081C0728);
void * const CNWSModule__GetAreaByName = reinterpret_cast<void*>(0x081B4458);
void * const CNWSModule__GetAreaByTag = reinterpret_cast<void*>(0x081B45E8);
void * const CNWSModule__GetAreaList = reinterpret_cast<void*>(0x081C1044);
void * const CNWSModule__GetCustomScriptEventId = reinterpret_cast<void*>(0x081C10F0);
void * const CNWSModule__GetDawnHour = reinterpret_cast<void*>(0x081C154C);
void * const CNWSModule__GetDuskHour = reinterpret_cast<void*>(0x081C155C);
void * const CNWSModule__GetEnableScriptDebugger = reinterpret_cast<void*>(0x081C16CC);
void * const CNWSModule__GetFullCipher = reinterpret_cast<void*>(0x081BFFD8);
void * const CNWSModule__GetInvisibleCreaturesList = reinterpret_cast<void*>(0x081C157C);
void * const CNWSModule__GetIsDigitalDistributionDemo = reinterpret_cast<void*>(0x081C15D8);
void * const CNWSModule__GetIsNWMFile = reinterpret_cast<void*>(0x081C15B4);
void * const CNWSModule__GetIsSaveGame = reinterpret_cast<void*>(0x081C14C8);
void * const CNWSModule__GetLastEnter = reinterpret_cast<void*>(0x081C1114);
void * const CNWSModule__GetLastExit = reinterpret_cast<void*>(0x081C1138);
void * const CNWSModule__GetLastItemAcquired = reinterpret_cast<void*>(0x081C115C);
void * const CNWSModule__GetLastItemAcquiredBy = reinterpret_cast<void*>(0x081C11A4);
void * const CNWSModule__GetLastItemAcquiredFrom = reinterpret_cast<void*>(0x081C1180);
void * const CNWSModule__GetLastItemAcquiredStackSize = reinterpret_cast<void*>(0x081C11C8);
void * const CNWSModule__GetLastItemActivated = reinterpret_cast<void*>(0x081C139C);
void * const CNWSModule__GetLastItemActivatedArea = reinterpret_cast<void*>(0x081C144C);
void * const CNWSModule__GetLastItemActivatedPosition = reinterpret_cast<void*>(0x081C1408);
void * const CNWSModule__GetLastItemActivatedTarget = reinterpret_cast<void*>(0x081C13E4);
void * const CNWSModule__GetLastItemActivator = reinterpret_cast<void*>(0x081C13C0);
void * const CNWSModule__GetLastItemLoser = reinterpret_cast<void*>(0x081C1354);
void * const CNWSModule__GetLastItemLost = reinterpret_cast<void*>(0x081C1330);
void * const CNWSModule__GetLastItemLostStackSize = reinterpret_cast<void*>(0x081C1378);
void * const CNWSModule__GetLastPCCancelCutscene = reinterpret_cast<void*>(0x081C1494);
void * const CNWSModule__GetLastPCLevellingUp = reinterpret_cast<void*>(0x081C1470);
void * const CNWSModule__GetLastPlayerChatMessage = reinterpret_cast<void*>(0x081C173C);
void * const CNWSModule__GetLastPlayerChatMessageType = reinterpret_cast<void*>(0x081C1764);
void * const CNWSModule__GetLastPlayerChatObject = reinterpret_cast<void*>(0x081C172C);
void * const CNWSModule__GetLastPlayerDied = reinterpret_cast<void*>(0x081C127C);
void * const CNWSModule__GetLastPlayerDying = reinterpret_cast<void*>(0x081C12A0);
void * const CNWSModule__GetLastRespawnButtonPresser = reinterpret_cast<void*>(0x081C12C4);
void * const CNWSModule__GetLastRested = reinterpret_cast<void*>(0x081C12E8);
void * const CNWSModule__GetLastRestEventType = reinterpret_cast<void*>(0x081C130C);
void * const CNWSModule__GetLimboArray = reinterpret_cast<void*>(0x081C156C);
void * const CNWSModule__GetMaxHenchmen = reinterpret_cast<void*>(0x081C14EC);
void * const CNWSModule__GetMinutesPerHour = reinterpret_cast<void*>(0x081C16DC);
void * const CNWSModule__GetModuleDescription = reinterpret_cast<void*>(0x081C1670);
void * const CNWSModule__GetModuleEntryInfo = reinterpret_cast<void*>(0x081C10D4);
void * const CNWSModule__GetModuleName = reinterpret_cast<void*>(0x081C1624);
void * const CNWSModule__GetNWMResName = reinterpret_cast<void*>(0x081C15FC);
void * const CNWSModule__GetPCItemLastEquipped = reinterpret_cast<void*>(0x081C11EC);
void * const CNWSModule__GetPCItemLastEquippedBy = reinterpret_cast<void*>(0x081C1210);
void * const CNWSModule__GetPCItemLastUnequipped = reinterpret_cast<void*>(0x081C1234);
void * const CNWSModule__GetPCItemLastUnequippedBy = reinterpret_cast<void*>(0x081C1258);
void * const CNWSModule__GetPlayerIndexInPlayerList = reinterpret_cast<void*>(0x081BE568);
void * const CNWSModule__GetPlayerPathfindRule = reinterpret_cast<void*>(0x081C16A8);
void * const CNWSModule__GetPlayerTURDFromList = reinterpret_cast<void*>(0x081BB068);
void * const CNWSModule__GetPrimaryPlayerIndex = reinterpret_cast<void*>(0x081C0864);
void * const CNWSModule__GetScriptName = reinterpret_cast<void*>(0x081C1050);
void * const CNWSModule__GetScriptVarTable = reinterpret_cast<void*>(0x081C10E0);
void * const CNWSModule__GetStartMovie = reinterpret_cast<void*>(0x081C164C);
void * const CNWSModule__GetTag = reinterpret_cast<void*>(0x081C158C);
void * const CNWSModule__GetTime = reinterpret_cast<void*>(0x081C09A8);
void * const CNWSModule__GetTimeOfDayState = reinterpret_cast<void*>(0x081C14B8);
void * const CNWSModule__GetWaypoint = reinterpret_cast<void*>(0x081C0670);
void * const CNWSModule__GetWorldJournalIndexUnique = reinterpret_cast<void*>(0x081C0944);
void * const CNWSModule__GetXPScale = reinterpret_cast<void*>(0x081C1528);
void * const CNWSModule__InterAreaDFS = reinterpret_cast<void*>(0x081B4810);
void * const CNWSModule__IsObjectInLimbo = reinterpret_cast<void*>(0x081C0AA4);
void * const CNWSModule__IsOfficialCampaign = reinterpret_cast<void*>(0x081BFDA8);
void * const CNWSModule__LoadLimboCreatures = reinterpret_cast<void*>(0x081BE2D8);
void * const CNWSModule__LoadModuleFinish = reinterpret_cast<void*>(0x081B87B8);
void * const CNWSModule__LoadModuleInProgress = reinterpret_cast<void*>(0x081B8584);
void * const CNWSModule__LoadModuleStart = reinterpret_cast<void*>(0x081B4A4C);
void * const CNWSModule__LoadTURDList = reinterpret_cast<void*>(0x081BAF90);
void * const CNWSModule__PackModuleIntoMessage = reinterpret_cast<void*>(0x081B8C84);
void * const CNWSModule__PackPlayerCharacterListIntoMessage = reinterpret_cast<void*>(0x081BE6B8);
void * const CNWSModule__PlotInterAreaPath = reinterpret_cast<void*>(0x081B8FB4);
void * const CNWSModule__PlotPath = reinterpret_cast<void*>(0x081B9124);
void * const CNWSModule__PlotPathInArea = reinterpret_cast<void*>(0x081B91F0);
void * const CNWSModule__PostProcess = reinterpret_cast<void*>(0x081B89F8);
void * const CNWSModule__RemoveFromTURDList = reinterpret_cast<void*>(0x081BF97C);
void * const CNWSModule__RemoveObjectFromLimbo = reinterpret_cast<void*>(0x081C0A58);
void * const CNWSModule__RemoveObjectFromLookupTable = reinterpret_cast<void*>(0x081BEC28);
void * const CNWSModule__SaveLimboCreatures = reinterpret_cast<void*>(0x081BE1D0);
void * const CNWSModule__SaveModuleFAC = reinterpret_cast<void*>(0x081BB37C);
void * const CNWSModule__SaveModuleFinish = reinterpret_cast<void*>(0x081BA01C);
void * const CNWSModule__SaveModuleIFOFinish = reinterpret_cast<void*>(0x081BB1C4);
void * const CNWSModule__SaveModuleIFOStart = reinterpret_cast<void*>(0x081BA420);
void * const CNWSModule__SaveModuleInProgress = reinterpret_cast<void*>(0x081BB7A8);
void * const CNWSModule__SaveModuleStart = reinterpret_cast<void*>(0x081B9C90);
void * const CNWSModule__SavePlayers = reinterpret_cast<void*>(0x081BBA0C);
void * const CNWSModule__SaveStatic = reinterpret_cast<void*>(0x081BDF5C);
void * const CNWSModule__SaveTURDList = reinterpret_cast<void*>(0x081C07D4);
void * const CNWSModule__SetCustomScriptEventId = reinterpret_cast<void*>(0x081C1100);
void * const CNWSModule__SetEnableScriptDebugger = reinterpret_cast<void*>(0x081C16B8);
void * const CNWSModule__SetIntraAreaGoal = reinterpret_cast<void*>(0x081BE92C);
void * const CNWSModule__SetIsNWMFile = reinterpret_cast<void*>(0x081C15C4);
void * const CNWSModule__SetIsSaveGame = reinterpret_cast<void*>(0x081C14D8);
void * const CNWSModule__SetLastEnter = reinterpret_cast<void*>(0x081C1124);
void * const CNWSModule__SetLastExit = reinterpret_cast<void*>(0x081C1148);
void * const CNWSModule__SetLastItemAcquired = reinterpret_cast<void*>(0x081C116C);
void * const CNWSModule__SetLastItemAcquiredBy = reinterpret_cast<void*>(0x081C11B4);
void * const CNWSModule__SetLastItemAcquiredFrom = reinterpret_cast<void*>(0x081C1190);
void * const CNWSModule__SetLastItemAcquiredStackSize = reinterpret_cast<void*>(0x081C11D8);
void * const CNWSModule__SetLastItemActivated = reinterpret_cast<void*>(0x081C13AC);
void * const CNWSModule__SetLastItemActivatedArea = reinterpret_cast<void*>(0x081C145C);
void * const CNWSModule__SetLastItemActivatedPosition = reinterpret_cast<void*>(0x081C142C);
void * const CNWSModule__SetLastItemActivatedTarget = reinterpret_cast<void*>(0x081C13F4);
void * const CNWSModule__SetLastItemActivator = reinterpret_cast<void*>(0x081C13D0);
void * const CNWSModule__SetLastItemLoser = reinterpret_cast<void*>(0x081C1364);
void * const CNWSModule__SetLastItemLost = reinterpret_cast<void*>(0x081C1340);
void * const CNWSModule__SetLastItemLostStackSize = reinterpret_cast<void*>(0x081C1388);
void * const CNWSModule__SetLastPCCancelCutscene = reinterpret_cast<void*>(0x081C14A4);
void * const CNWSModule__SetLastPCLevellingUp = reinterpret_cast<void*>(0x081C1480);
void * const CNWSModule__SetLastPlayerChatMessage = reinterpret_cast<void*>(0x081C1700);
void * const CNWSModule__SetLastPlayerChatMessageType = reinterpret_cast<void*>(0x081C1718);
void * const CNWSModule__SetLastPlayerChatObject = reinterpret_cast<void*>(0x081C16EC);
void * const CNWSModule__SetLastPlayerDied = reinterpret_cast<void*>(0x081C128C);
void * const CNWSModule__SetLastPlayerDying = reinterpret_cast<void*>(0x081C12B0);
void * const CNWSModule__SetLastRespawnButtonPresser = reinterpret_cast<void*>(0x081C12D4);
void * const CNWSModule__SetLastRested = reinterpret_cast<void*>(0x081C12F8);
void * const CNWSModule__SetLastRestEventType = reinterpret_cast<void*>(0x081C131C);
void * const CNWSModule__SetMaxHenchmen = reinterpret_cast<void*>(0x081C14FC);
void * const CNWSModule__SetNWMResName = reinterpret_cast<void*>(0x081C15E4);
void * const CNWSModule__SetPCItemLastEquipped = reinterpret_cast<void*>(0x081C11FC);
void * const CNWSModule__SetPCItemLastEquippedBy = reinterpret_cast<void*>(0x081C1220);
void * const CNWSModule__SetPCItemLastUnequipped = reinterpret_cast<void*>(0x081C1244);
void * const CNWSModule__SetPCItemLastUnequippedBy = reinterpret_cast<void*>(0x081C1268);
void * const CNWSModule__SetPlayerPathfindRule = reinterpret_cast<void*>(0x081C1694);
void * const CNWSModule__SetScriptName = reinterpret_cast<void*>(0x081C106C);
void * const CNWSModule__SetXPScale = reinterpret_cast<void*>(0x081C1538);
void * const CNWSModule__TimeStopSanityCheck = reinterpret_cast<void*>(0x081BFCDC);
void * const CNWSModule__UnloadModule = reinterpret_cast<void*>(0x081C08C8);
void * const CNWSModule__UpdateTime = reinterpret_cast<void*>(0x081BFAF8);

void * const CNWSObject__CNWSObjectCtor = reinterpret_cast<void*>(0x081C88F0);
void * const CNWSObject__CNWSObjectDtor = reinterpret_cast<void*>(0x081C8E94);
void * const CNWSObject__AddAction = reinterpret_cast<void*>(0x081C9384);
void * const CNWSObject__AddActionAfterFront = reinterpret_cast<void*>(0x081CADB0);
void * const CNWSObject__AddActionNodeParameter = reinterpret_cast<void*>(0x081D49E0);
void * const CNWSObject__AddActionToFront = reinterpret_cast<void*>(0x081CA5C0);
void * const CNWSObject__AddCloseDoorAction = reinterpret_cast<void*>(0x081D5590);
void * const CNWSObject__AddDoCommandAction = reinterpret_cast<void*>(0x081C861C);
void * const CNWSObject__AddEffectTarget = reinterpret_cast<void*>(0x081D5B6C);
void * const CNWSObject__AddGiveItemActions = reinterpret_cast<void*>(0x081C7BD8);
void * const CNWSObject__AddLockObjectAction = reinterpret_cast<void*>(0x081D565C);
void * const CNWSObject__AddLoopingVisualEffect = reinterpret_cast<void*>(0x081D4E98);
void * const CNWSObject__AddMatchedExpressionString = reinterpret_cast<void*>(0x081D5254);
void * const CNWSObject__AddOpenDoorAction = reinterpret_cast<void*>(0x081D552C);
void * const CNWSObject__AddTakeItemActions = reinterpret_cast<void*>(0x081C7C94);
void * const CNWSObject__AddUnlockObjectAction = reinterpret_cast<void*>(0x081D55F4);
void * const CNWSObject__AddUseObjectAction = reinterpret_cast<void*>(0x081C85B0);
void * const CNWSObject__AIActionCloseDoor = reinterpret_cast<void*>(0x081C4A58);
void * const CNWSObject__AIActionDialogObject = reinterpret_cast<void*>(0x081C3204);
void * const CNWSObject__AIActionDoCommand = reinterpret_cast<void*>(0x081C8448);
void * const CNWSObject__AIActionGiveItem = reinterpret_cast<void*>(0x081C43B8);
void * const CNWSObject__AIActionLockObject = reinterpret_cast<void*>(0x081C6398);
void * const CNWSObject__AIActionOpenDoor = reinterpret_cast<void*>(0x081C4D6C);
void * const CNWSObject__AIActionPauseDialog = reinterpret_cast<void*>(0x081C3A7C);
void * const CNWSObject__AIActionPlayAnimation = reinterpret_cast<void*>(0x081C4014);
void * const CNWSObject__AIActionPlaySound = reinterpret_cast<void*>(0x081C3E18);
void * const CNWSObject__AIActionResumeDialog = reinterpret_cast<void*>(0x081C3B88);
void * const CNWSObject__AIActionSetCommandable = reinterpret_cast<void*>(0x081C8568);
void * const CNWSObject__AIActionSpeak = reinterpret_cast<void*>(0x081C3CE8);
void * const CNWSObject__AIActionSpeakStrRef = reinterpret_cast<void*>(0x081C83C8);
void * const CNWSObject__AIActionTakeItem = reinterpret_cast<void*>(0x081C48B4);
void * const CNWSObject__AIActionUnlockObject = reinterpret_cast<void*>(0x081C53D0);
void * const CNWSObject__AIActionUseObject = reinterpret_cast<void*>(0x081C7274);
void * const CNWSObject__AIActionWait = reinterpret_cast<void*>(0x081C84A4);
void * const CNWSObject__AnimationStationary = reinterpret_cast<void*>(0x081D4CA8);
void * const CNWSObject__ApplyEffect = reinterpret_cast<void*>(0x081CE7D8);
void * const CNWSObject__AsNWSObject = reinterpret_cast<void*>(0x081D5838);
void * const CNWSObject__BroadcastCounterSpellData = reinterpret_cast<void*>(0x081D1CD4);
void * const CNWSObject__BroadcastDialog = reinterpret_cast<void*>(0x081D1604);
void * const CNWSObject__BroadcastFloatyData = reinterpret_cast<void*>(0x081D5338);
void * const CNWSObject__BroadcastFloatyDataSTRREF = reinterpret_cast<void*>(0x081D5340);
void * const CNWSObject__BroadcastSafeProjectile = reinterpret_cast<void*>(0x081D2390);
void * const CNWSObject__BroadcastSpellData = reinterpret_cast<void*>(0x081D1FEC);
void * const CNWSObject__CalculateLastSpellProjectileTime = reinterpret_cast<void*>(0x081D2CEC);
void * const CNWSObject__CalculateSpellRangedMissTarget = reinterpret_cast<void*>(0x081D2F9C);
void * const CNWSObject__ClearAction = reinterpret_cast<void*>(0x081D585C);
void * const CNWSObject__ClearAllActions = reinterpret_cast<void*>(0x081CB77C);
void * const CNWSObject__ClearAllPartyInvalidActions = reinterpret_cast<void*>(0x081CB908);
void * const CNWSObject__ClearMatchedExpressionStrings = reinterpret_cast<void*>(0x081D52B0);
void * const CNWSObject__ClearSpellEffectsOnOthers = reinterpret_cast<void*>(0x081CFF48);
void * const CNWSObject__CopyScriptVars = reinterpret_cast<void*>(0x081C9638);
void * const CNWSObject__DeleteCurrentAIAction = reinterpret_cast<void*>(0x081CB678);
void * const CNWSObject__DoDamage = reinterpret_cast<void*>(0x081D4D20);
void * const CNWSObject__DoDamageImmunity = reinterpret_cast<void*>(0x081CDC4C);
void * const CNWSObject__DoDamageReduction = reinterpret_cast<void*>(0x081CBD74);
void * const CNWSObject__DoDamageResistance = reinterpret_cast<void*>(0x081CC7BC);
void * const CNWSObject__DoSpellImmunity = reinterpret_cast<void*>(0x081CE490);
void * const CNWSObject__DoSpellLevelAbsorption = reinterpret_cast<void*>(0x081CDFBC);
void * const CNWSObject__GetAcceptableAction = reinterpret_cast<void*>(0x081C83A8);
void * const CNWSObject__GetActionByGroupId = reinterpret_cast<void*>(0x081D4770);
void * const CNWSObject__GetAILevel = reinterpret_cast<void*>(0x081D5868);
void * const CNWSObject__GetAILock = reinterpret_cast<void*>(0x081D5874);
void * const CNWSObject__GetAIPosList = reinterpret_cast<void*>(0x081D5880);
void * const CNWSObject__GetAIStateReaction = reinterpret_cast<void*>(0x081C8154);
void * const CNWSObject__GetAnimation = reinterpret_cast<void*>(0x081D588C);
void * const CNWSObject__GetAnimationSpeed = reinterpret_cast<void*>(0x081D589C);
void * const CNWSObject__GetAppliedEffects = reinterpret_cast<void*>(0x081D5B04);
void * const CNWSObject__GetApplyingPostProcessEffects = reinterpret_cast<void*>(0x081D62E4);
void * const CNWSObject__GetAQActionIDByID = reinterpret_cast<void*>(0x081C2D50);
void * const CNWSObject__GetArea = reinterpret_cast<void*>(0x081D5028);
void * const CNWSObject__GetAreaId = reinterpret_cast<void*>(0x081D60B0);
void * const CNWSObject__GetBaseHitPoints = reinterpret_cast<void*>(0x081D5A88);
void * const CNWSObject__GetConversationPlayHello = reinterpret_cast<void*>(0x081D5CCC);
void * const CNWSObject__GetCurrentHitPoints = reinterpret_cast<void*>(0x081D4CF8);
void * const CNWSObject__GetCustomScriptEventId = reinterpret_cast<void*>(0x081D5FB0);
void * const CNWSObject__GetDamageImmunity = reinterpret_cast<void*>(0x081D4D50);
void * const CNWSObject__GetDamageImmunityByFlags = reinterpret_cast<void*>(0x081CDEA4);
void * const CNWSObject__GetDamageLevel = reinterpret_cast<void*>(0x081CE6C8);
void * const CNWSObject__GetDead = reinterpret_cast<void*>(0x081D1C10);
void * const CNWSObject__GetDialogInterruptable = reinterpret_cast<void*>(0x081D5A40);
void * const CNWSObject__GetDialogOwner = reinterpret_cast<void*>(0x081D59E4);
void * const CNWSObject__GetDialogPrivate = reinterpret_cast<void*>(0x081D5980);
void * const CNWSObject__GetDialogResref = reinterpret_cast<void*>(0x081D5A1C);
void * const CNWSObject__GetDialogValid = reinterpret_cast<void*>(0x081D596C);
void * const CNWSObject__GetEffectArrayIndex = reinterpret_cast<void*>(0x081D62C0);
void * const CNWSObject__GetEffectSpellId = reinterpret_cast<void*>(0x081D5BBC);
void * const CNWSObject__GetEffectTargets = reinterpret_cast<void*>(0x081D5B5C);
void * const CNWSObject__GetExecutingAIAction = reinterpret_cast<void*>(0x081D5AD0);
void * const CNWSObject__GetExpressionStrings = reinterpret_cast<void*>(0x081D5ED8);
void * const CNWSObject__GetFirstName = reinterpret_cast<void*>(0x081D5A4C);
void * const CNWSObject__GetGender = reinterpret_cast<void*>(0x081D509C);
void * const CNWSObject__GetHasFeatEffectApplied = reinterpret_cast<void*>(0x081D56C0);
void * const CNWSObject__GetIDByAQActionID = reinterpret_cast<void*>(0x081C305C);
void * const CNWSObject__GetInventoryDisturbItem = reinterpret_cast<void*>(0x081D5E38);
void * const CNWSObject__GetInventoryDisturbType = reinterpret_cast<void*>(0x081D5E14);
void * const CNWSObject__GetIsDestroyable = reinterpret_cast<void*>(0x081D5FF8);
void * const CNWSObject__GetIsPCDying = reinterpret_cast<void*>(0x081D5498);
void * const CNWSObject__GetIsRaiseable = reinterpret_cast<void*>(0x081D601C);
void * const CNWSObject__GetKiller = reinterpret_cast<void*>(0x081D5D04);
void * const CNWSObject__GetLastAttacker = reinterpret_cast<void*>(0x081D5D14);
void * const CNWSObject__GetLastAttackMode = reinterpret_cast<void*>(0x081D5DA8);
void * const CNWSObject__GetLastAttackType = reinterpret_cast<void*>(0x081D5D84);
void * const CNWSObject__GetLastConversationResref = reinterpret_cast<void*>(0x081D5C28);
void * const CNWSObject__GetLastDamageAmountByFlags = reinterpret_cast<void*>(0x081D4DDC);
void * const CNWSObject__GetLastDamager = reinterpret_cast<void*>(0x081D5D4C);
void * const CNWSObject__GetLastDisturbed = reinterpret_cast<void*>(0x081D5DF0);
void * const CNWSObject__GetLastGroupID = reinterpret_cast<void*>(0x081D5850);
void * const CNWSObject__GetLastHostileActor = reinterpret_cast<void*>(0x081D5D74);
void * const CNWSObject__GetLastName = reinterpret_cast<void*>(0x081D5A58);
void * const CNWSObject__GetLastSpeaker = reinterpret_cast<void*>(0x081D5C04);
void * const CNWSObject__GetLastSpellCast = reinterpret_cast<void*>(0x081D6130);
void * const CNWSObject__GetLastSpellCastAtMe = reinterpret_cast<void*>(0x081D6170);
void * const CNWSObject__GetLastSpellCastAtMeCaster = reinterpret_cast<void*>(0x081D6160);
void * const CNWSObject__GetLastSpellCastAtMeHarmful = reinterpret_cast<void*>(0x081D6180);
void * const CNWSObject__GetLastSpellCastDomainLevel = reinterpret_cast<void*>(0x081D60EC);
void * const CNWSObject__GetLastSpellCastFeat = reinterpret_cast<void*>(0x081D6190);
void * const CNWSObject__GetLastSpellCastMetaType = reinterpret_cast<void*>(0x081D6150);
void * const CNWSObject__GetLastSpellCastMulticlass = reinterpret_cast<void*>(0x081D60CC);
void * const CNWSObject__GetLastSpellCastSpontaneous = reinterpret_cast<void*>(0x081D6140);
void * const CNWSObject__GetLastSpellId = reinterpret_cast<void*>(0x081D60DC);
void * const CNWSObject__GetLastSpellLocationTarget = reinterpret_cast<void*>(0x081D610C);
void * const CNWSObject__GetLastSpellObjectTarget = reinterpret_cast<void*>(0x081D60FC);
void * const CNWSObject__GetLastWeaponAttackedWith = reinterpret_cast<void*>(0x081D5DCC);
void * const CNWSObject__GetListenExpressionObj = reinterpret_cast<void*>(0x081D51FC);
void * const CNWSObject__GetListenExpressions = reinterpret_cast<void*>(0x081D5EC8);
void * const CNWSObject__GetLockOrientationToObject = reinterpret_cast<void*>(0x081D5FDC);
void * const CNWSObject__GetLoopingVisualEffects = reinterpret_cast<void*>(0x081D5BD0);
void * const CNWSObject__GetMatchedPos = reinterpret_cast<void*>(0x081D5EA4);
void * const CNWSObject__GetMaxHitPoints = reinterpret_cast<void*>(0x081D5A64);
void * const CNWSObject__GetMaximumDamageResistanceVsDamageFlag = reinterpret_cast<void*>(0x081CDB30);
void * const CNWSObject__GetNearestObjectByName = reinterpret_cast<void*>(0x081D103C);
void * const CNWSObject__GetNewGroupID = reinterpret_cast<void*>(0x081D49BC);
void * const CNWSObject__GetNodeById = reinterpret_cast<void*>(0x081D48A8);
void * const CNWSObject__GetNumActionGroups = reinterpret_cast<void*>(0x081D492C);
void * const CNWSObject__GetObjectToDialog = reinterpret_cast<void*>(0x081D59B8);
void * const CNWSObject__GetOpenDoorAnimationPlayed = reinterpret_cast<void*>(0x081D62B0);
void * const CNWSObject__GetOrientation = reinterpret_cast<void*>(0x081D58AC);
void * const CNWSObject__GetPendingEffectRemoval = reinterpret_cast<void*>(0x081D5B28);
void * const CNWSObject__GetPlotObject = reinterpret_cast<void*>(0x081D5E5C);
void * const CNWSObject__GetPortrait = reinterpret_cast<void*>(0x081D6064);
void * const CNWSObject__GetPortraitId = reinterpret_cast<void*>(0x081D60A4);
void * const CNWSObject__GetPosition = reinterpret_cast<void*>(0x081D58D0);
void * const CNWSObject__GetPositionByGroupIndex = reinterpret_cast<void*>(0x081D481C);
void * const CNWSObject__GetPrivateConversation = reinterpret_cast<void*>(0x081D5CA8);
void * const CNWSObject__GetQueuedActionsList = reinterpret_cast<void*>(0x081D5840);
void * const CNWSObject__GetReputation = reinterpret_cast<void*>(0x081C7E5C);
void * const CNWSObject__GetSavingThrowSpellId = reinterpret_cast<void*>(0x081D5B38);
void * const CNWSObject__GetScriptLocation = reinterpret_cast<void*>(0x081D1B90);
void * const CNWSObject__GetScriptVarTable = reinterpret_cast<void*>(0x081D5AF4);
void * const CNWSObject__GetSelectableWhenDead = reinterpret_cast<void*>(0x081D6040);
void * const CNWSObject__GetTag = reinterpret_cast<void*>(0x081D5F80);
void * const CNWSObject__GetTemplate = reinterpret_cast<void*>(0x081D5F8C);
void * const CNWSObject__GetTemporaryHitPoints = reinterpret_cast<void*>(0x081D5AAC);
void * const CNWSObject__HasSpellEffectApplied = reinterpret_cast<void*>(0x081D53DC);
void * const CNWSObject__IsAbleToModifyActionQueue = reinterpret_cast<void*>(0x081D5BF4);
void * const CNWSObject__IsDialogDelay = reinterpret_cast<void*>(0x081D50A8);
void * const CNWSObject__IsDialogPaused = reinterpret_cast<void*>(0x081D59F0);
void * const CNWSObject__IsListening = reinterpret_cast<void*>(0x081D5E94);
void * const CNWSObject__IsPCInDialog = reinterpret_cast<void*>(0x081D5998);
void * const CNWSObject__LoadActionQueue = reinterpret_cast<void*>(0x081C98BC);
void * const CNWSObject__LoadEffectList = reinterpret_cast<void*>(0x081CA0A0);
void * const CNWSObject__LoadListenData = reinterpret_cast<void*>(0x081CA264);
void * const CNWSObject__LoadObjectState = reinterpret_cast<void*>(0x081D4B40);
void * const CNWSObject__LoadVarTable = reinterpret_cast<void*>(0x081D4BC0);
void * const CNWSObject__PlaySoundSet = reinterpret_cast<void*>(0x081D1384);
void * const CNWSObject__RemoveEffect = reinterpret_cast<void*>(0x081CEDB8);
void * const CNWSObject__RemoveEffectByCreator = reinterpret_cast<void*>(0x081D4F44);
void * const CNWSObject__RemoveEffectById = reinterpret_cast<void*>(0x081CEEA0);
void * const CNWSObject__RemoveEffectBySpellId = reinterpret_cast<void*>(0x081D5434);
void * const CNWSObject__RemoveEffectTarget = reinterpret_cast<void*>(0x081CFE84);
void * const CNWSObject__RemoveGroup = reinterpret_cast<void*>(0x081C91EC);
void * const CNWSObject__RemoveLoopingVisualEffect = reinterpret_cast<void*>(0x081D4EE0);
void * const CNWSObject__RemoveObjectFromDialog = reinterpret_cast<void*>(0x081D0F8C);
void * const CNWSObject__RemoveSomeEffectsOfDurationType = reinterpret_cast<void*>(0x081D4FB0);
void * const CNWSObject__ReplyDialog = reinterpret_cast<void*>(0x081D5104);
void * const CNWSObject__ReportOverflow = reinterpret_cast<void*>(0x081D3EA4);
void * const CNWSObject__RunActions = reinterpret_cast<void*>(0x081C213C);
void * const CNWSObject__RunDialogOneLiner = reinterpret_cast<void*>(0x081D05CC);
void * const CNWSObject__SaveActionQueue = reinterpret_cast<void*>(0x081C9E44);
void * const CNWSObject__SaveEffectList = reinterpret_cast<void*>(0x081CA198);
void * const CNWSObject__SaveListenData = reinterpret_cast<void*>(0x081D4BF0);
void * const CNWSObject__SaveObjectState = reinterpret_cast<void*>(0x081D4B80);
void * const CNWSObject__SaveVarTable = reinterpret_cast<void*>(0x081D4BD8);
void * const CNWSObject__SendDialogEntry = reinterpret_cast<void*>(0x081D0A4C);
void * const CNWSObject__SendDialogReplies = reinterpret_cast<void*>(0x081D0B4C);
void * const CNWSObject__SetAbleToModifyActionQueue = reinterpret_cast<void*>(0x081D5BE0);
void * const CNWSObject__SetAILevel = reinterpret_cast<void*>(0x081D58F0);
void * const CNWSObject__SetAILock = reinterpret_cast<void*>(0x081D5900);
void * const CNWSObject__SetAIPosList = reinterpret_cast<void*>(0x081D5910);
void * const CNWSObject__SetAnimation = reinterpret_cast<void*>(0x081D4CE4);
void * const CNWSObject__SetAnimationSpeed = reinterpret_cast<void*>(0x081D5920);
void * const CNWSObject__SetApplyingPostProcessEffects = reinterpret_cast<void*>(0x081D62F4);
void * const CNWSObject__SetArea = reinterpret_cast<void*>(0x081D5078);
void * const CNWSObject__SetAreaId = reinterpret_cast<void*>(0x081D60BC);
void * const CNWSObject__SetBaseHitPoints = reinterpret_cast<void*>(0x081D5A98);
void * const CNWSObject__SetConversationPlayHello = reinterpret_cast<void*>(0x081D5CDC);
void * const CNWSObject__SetCurrentActionTarget = reinterpret_cast<void*>(0x081D5FE8);
void * const CNWSObject__SetCurrentHitPoints = reinterpret_cast<void*>(0x081D5A74);
void * const CNWSObject__SetCustomScriptEventId = reinterpret_cast<void*>(0x081D5FC0);
void * const CNWSObject__SetDamageImmunity = reinterpret_cast<void*>(0x081D4D84);
void * const CNWSObject__SetDialogAnimation = reinterpret_cast<void*>(0x081D5A0C);
void * const CNWSObject__SetDialogDelay = reinterpret_cast<void*>(0x081D0104);
void * const CNWSObject__SetDialogOwner = reinterpret_cast<void*>(0x081D51AC);
void * const CNWSObject__SetDialogPaused = reinterpret_cast<void*>(0x081D59FC);
void * const CNWSObject__SetEffectArrayIndex = reinterpret_cast<void*>(0x081D62D0);
void * const CNWSObject__SetEffectSpellId = reinterpret_cast<void*>(0x081D5BC8);
void * const CNWSObject__SetExecutingAIAction = reinterpret_cast<void*>(0x081D5AE0);
void * const CNWSObject__SetGroupInterruptable = reinterpret_cast<void*>(0x081D4AA4);
void * const CNWSObject__SetInventoryDisturbItem = reinterpret_cast<void*>(0x081D5E48);
void * const CNWSObject__SetInventoryDisturbType = reinterpret_cast<void*>(0x081D5E24);
void * const CNWSObject__SetIsDestroyable = reinterpret_cast<void*>(0x081D6008);
void * const CNWSObject__SetIsRaiseable = reinterpret_cast<void*>(0x081D602C);
void * const CNWSObject__SetKiller = reinterpret_cast<void*>(0x081D5CF0);
void * const CNWSObject__SetLastAnimationTimes = reinterpret_cast<void*>(0x081D5934);
void * const CNWSObject__SetLastAttacker = reinterpret_cast<void*>(0x081D5D24);
void * const CNWSObject__SetLastAttackMode = reinterpret_cast<void*>(0x081D5DB8);
void * const CNWSObject__SetLastAttackType = reinterpret_cast<void*>(0x081D5D94);
void * const CNWSObject__SetLastConversationResref = reinterpret_cast<void*>(0x081D5C50);
void * const CNWSObject__SetLastDamageAmount = reinterpret_cast<void*>(0x081D5D5C);
void * const CNWSObject__SetLastDamager = reinterpret_cast<void*>(0x081D5D38);
void * const CNWSObject__SetLastDisturbed = reinterpret_cast<void*>(0x081D5E00);
void * const CNWSObject__SetLastGroupID = reinterpret_cast<void*>(0x081D6308);
void * const CNWSObject__SetLastHostileActor = reinterpret_cast<void*>(0x081D40A0);
void * const CNWSObject__SetLastSpeaker = reinterpret_cast<void*>(0x081D5C14);
void * const CNWSObject__SetLastSpellCast = reinterpret_cast<void*>(0x081D6210);
void * const CNWSObject__SetLastSpellCastAtMe = reinterpret_cast<void*>(0x081D6260);
void * const CNWSObject__SetLastSpellCastAtMeCaster = reinterpret_cast<void*>(0x081D624C);
void * const CNWSObject__SetLastSpellCastAtMeHarmful = reinterpret_cast<void*>(0x081D6274);
void * const CNWSObject__SetLastSpellCastDomainLevel = reinterpret_cast<void*>(0x081D61C8);
void * const CNWSObject__SetLastSpellCastFeat = reinterpret_cast<void*>(0x081D6288);
void * const CNWSObject__SetLastSpellCastMetaType = reinterpret_cast<void*>(0x081D6238);
void * const CNWSObject__SetLastSpellCastMulticlass = reinterpret_cast<void*>(0x081D61A0);
void * const CNWSObject__SetLastSpellCastSpontaneous = reinterpret_cast<void*>(0x081D6224);
void * const CNWSObject__SetLastSpellId = reinterpret_cast<void*>(0x081D61B4);
void * const CNWSObject__SetLastSpellLocationTarget = reinterpret_cast<void*>(0x081D61F0);
void * const CNWSObject__SetLastSpellObjectTarget = reinterpret_cast<void*>(0x081D61DC);
void * const CNWSObject__SetLastWeaponAttackedWith = reinterpret_cast<void*>(0x081D5DDC);
void * const CNWSObject__SetListenExpression = reinterpret_cast<void*>(0x081D1438);
void * const CNWSObject__SetListening = reinterpret_cast<void*>(0x081D5E80);
void * const CNWSObject__SetLockOrientationToObject = reinterpret_cast<void*>(0x081D5FD4);
void * const CNWSObject__SetMatchedPos = reinterpret_cast<void*>(0x081D5EB4);
void * const CNWSObject__SetOpenDoorAnimationPlayed = reinterpret_cast<void*>(0x081D629C);
void * const CNWSObject__SetOrientation = reinterpret_cast<void*>(0x081D4E10);
void * const CNWSObject__SetPendingEffectRemoval = reinterpret_cast<void*>(0x081D5B14);
void * const CNWSObject__SetPlotObject = reinterpret_cast<void*>(0x081D5E6C);
void * const CNWSObject__SetPortrait = reinterpret_cast<void*>(0x081D6084);
void * const CNWSObject__SetPortraitId = reinterpret_cast<void*>(0x081CA41C);
void * const CNWSObject__SetPosition = reinterpret_cast<void*>(0x081D4E30);
void * const CNWSObject__SetPrivateConversation = reinterpret_cast<void*>(0x081D5CB8);
void * const CNWSObject__SetSavingThrowSpellId = reinterpret_cast<void*>(0x081D5B48);
void * const CNWSObject__SetSelectableWhenDead = reinterpret_cast<void*>(0x081D6050);
void * const CNWSObject__SetStartActionTimer = reinterpret_cast<void*>(0x081D5950);
void * const CNWSObject__SetTag = reinterpret_cast<void*>(0x081D5EE8);
void * const CNWSObject__SetTemplate = reinterpret_cast<void*>(0x081D5F98);
void * const CNWSObject__SetTemporaryHitPoints = reinterpret_cast<void*>(0x081D5ABC);
void * const CNWSObject__SpawnBodyBag = reinterpret_cast<void*>(0x081D3AA8);
void * const CNWSObject__SpellCastAndImpact = reinterpret_cast<void*>(0x081D261C);
void * const CNWSObject__StartDialog = reinterpret_cast<void*>(0x081D0198);
void * const CNWSObject__StopDialog = reinterpret_cast<void*>(0x081D0E8C);
void * const CNWSObject__TerminateAISliceAfterAction = reinterpret_cast<void*>(0x081C8380);
void * const CNWSObject__TestActionList = reinterpret_cast<void*>(0x081D4AFC);
void * const CNWSObject__TestListenExpression = reinterpret_cast<void*>(0x081D1540);
void * const CNWSObject__UpdateAttributesOnEffect = reinterpret_cast<void*>(0x081D6320);
void * const CNWSObject__UpdateDialog = reinterpret_cast<void*>(0x081D0C38);
void * const CNWSObject__UpdateEffectList = reinterpret_cast<void*>(0x081CF014);
void * const CNWSObject__UpdateEffectPtrs = reinterpret_cast<void*>(0x081D6318);

void * const CNWSObjectActionNode__CNWSObjectActionNodeCtor = reinterpret_cast<void*>(0x081D468C);
void * const CNWSObjectActionNode__CNWSObjectActionNodeDtor = reinterpret_cast<void*>(0x081D46BC);

void * const CNWSpell__CNWSpellCtor = reinterpret_cast<void*>(0x081D85A0);
void * const CNWSpell__CNWSpellDtor = reinterpret_cast<void*>(0x081DB698);
void * const CNWSpell__GetSpellHasSomaticComponent = reinterpret_cast<void*>(0x081DB788);
void * const CNWSpell__GetSpellHasVerbalComponent = reinterpret_cast<void*>(0x081DB70C);
void * const CNWSpell__GetSpellLevel = reinterpret_cast<void*>(0x081D8920);
void * const CNWSpell__GetSpellNameText = reinterpret_cast<void*>(0x081D897C);
void * const CNWSpell__GetSubRadialSpell = reinterpret_cast<void*>(0x081DB804);
void * const CNWSpell__SetSubRadialSpell = reinterpret_cast<void*>(0x081DB82C);
void * const CNWSpell__SetSubRadialSpellCount = reinterpret_cast<void*>(0x081DB850);

void * const CNWSpellArray__CNWSpellArrayCtor = reinterpret_cast<void*>(0x081DB8AC);
void * const CNWSpellArray__CNWSpellArrayDtor = reinterpret_cast<void*>(0x081D8A30);
void * const CNWSpellArray____vc = reinterpret_cast<void*>(0x081DAF38);
void * const CNWSpellArray__GetSpell = reinterpret_cast<void*>(0x081DB8C4);
void * const CNWSpellArray__Load = reinterpret_cast<void*>(0x081D8AF0);

void * const CNWSPlaceable__CNWSPlaceableCtor = reinterpret_cast<void*>(0x081DB8F0);
void * const CNWSPlaceable__CNWSPlaceableDtor = reinterpret_cast<void*>(0x081DBE10);
void * const CNWSPlaceable__AcquireItem = reinterpret_cast<void*>(0x081E0860);
void * const CNWSPlaceable__AcquireItemsFromObject = reinterpret_cast<void*>(0x081E0A0C);
void * const CNWSPlaceable__AddCastSpellActions = reinterpret_cast<void*>(0x081E15BC);
void * const CNWSPlaceable__AddToArea = reinterpret_cast<void*>(0x081DF174);
void * const CNWSPlaceable__AIActionCastSpell = reinterpret_cast<void*>(0x081E16B8);
void * const CNWSPlaceable__AIUpdate = reinterpret_cast<void*>(0x081E0614);
void * const CNWSPlaceable__AsNWSPlaceable = reinterpret_cast<void*>(0x081E1E6C);
void * const CNWSPlaceable__CalculateActionPoints = reinterpret_cast<void*>(0x081DF588);
void * const CNWSPlaceable__CloseInventory = reinterpret_cast<void*>(0x081E11D0);
void * const CNWSPlaceable__ClosePlaceableForAllPlayers = reinterpret_cast<void*>(0x081E1B48);
void * const CNWSPlaceable__DoDamage = reinterpret_cast<void*>(0x081E1C94);
void * const CNWSPlaceable__DropItemsIntoArea = reinterpret_cast<void*>(0x081E1330);
void * const CNWSPlaceable__EventHandler = reinterpret_cast<void*>(0x081DF88C);
void * const CNWSPlaceable__GetActive = reinterpret_cast<void*>(0x081E26B0);
void * const CNWSPlaceable__GetAppearance = reinterpret_cast<void*>(0x081E1FB0);
void * const CNWSPlaceable__GetAutoRemoveKey = reinterpret_cast<void*>(0x081E223C);
void * const CNWSPlaceable__GetBaseType = reinterpret_cast<void*>(0x081E25FC);
void * const CNWSPlaceable__GetBearing = reinterpret_cast<void*>(0x081E214C);
void * const CNWSPlaceable__GetBodyBag = reinterpret_cast<void*>(0x081E2924);
void * const CNWSPlaceable__GetBodyBagAppearance = reinterpret_cast<void*>(0x081E1958);
void * const CNWSPlaceable__GetCloseLockDC = reinterpret_cast<void*>(0x081E2284);
void * const CNWSPlaceable__GetCreatureList = reinterpret_cast<void*>(0x081E256C);
void * const CNWSPlaceable__GetCurrentItemContainer = reinterpret_cast<void*>(0x081E27F0);
void * const CNWSPlaceable__GetDescription = reinterpret_cast<void*>(0x081E201C);
void * const CNWSPlaceable__GetDescriptionOverride = reinterpret_cast<void*>(0x081E2084);
void * const CNWSPlaceable__GetDetectable = reinterpret_cast<void*>(0x081E2644);
void * const CNWSPlaceable__GetDetectDC = reinterpret_cast<void*>(0x081E25C4);
void * const CNWSPlaceable__GetDialogResref = reinterpret_cast<void*>(0x081E272C);
void * const CNWSPlaceable__GetDieWhenEmpty = reinterpret_cast<void*>(0x081E2784);
void * const CNWSPlaceable__GetDisarmable = reinterpret_cast<void*>(0x081E2620);
void * const CNWSPlaceable__GetDisarmDC = reinterpret_cast<void*>(0x081E26E4);
void * const CNWSPlaceable__GetDisplayName = reinterpret_cast<void*>(0x081E1F00);
void * const CNWSPlaceable__GetEffectSpellId = reinterpret_cast<void*>(0x081E28DC);
void * const CNWSPlaceable__GetFactionId = reinterpret_cast<void*>(0x081E2104);
void * const CNWSPlaceable__GetFirstName = reinterpret_cast<void*>(0x081E1E98);
void * const CNWSPlaceable__GetFlagged = reinterpret_cast<void*>(0x081E2708);
void * const CNWSPlaceable__GetFortSave = reinterpret_cast<void*>(0x081E22A8);
void * const CNWSPlaceable__GetHardness = reinterpret_cast<void*>(0x081E2128);
void * const CNWSPlaceable__GetHasInventory = reinterpret_cast<void*>(0x081E235C);
void * const CNWSPlaceable__GetIsBodyBag = reinterpret_cast<void*>(0x081E29B4);
void * const CNWSPlaceable__GetIsGroundPile = reinterpret_cast<void*>(0x081E200C);
void * const CNWSPlaceable__GetItemContainerArrayIndex = reinterpret_cast<void*>(0x081E27CC);
void * const CNWSPlaceable__GetItemCount = reinterpret_cast<void*>(0x081E1AB4);
void * const CNWSPlaceable__GetItemRepository = reinterpret_cast<void*>(0x081E2774);
void * const CNWSPlaceable__GetKeyName = reinterpret_cast<void*>(0x081E2170);
void * const CNWSPlaceable__GetKeyRequired = reinterpret_cast<void*>(0x081E2198);
void * const CNWSPlaceable__GetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x081E2214);
void * const CNWSPlaceable__GetLastClosed = reinterpret_cast<void*>(0x081E2548);
void * const CNWSPlaceable__GetLastDefaultClickedBy = reinterpret_cast<void*>(0x081E2524);
void * const CNWSPlaceable__GetLastDisarmed = reinterpret_cast<void*>(0x081E2494);
void * const CNWSPlaceable__GetLastLocked = reinterpret_cast<void*>(0x081E24B8);
void * const CNWSPlaceable__GetLastOpened = reinterpret_cast<void*>(0x081E244C);
void * const CNWSPlaceable__GetLastTriggered = reinterpret_cast<void*>(0x081E2470);
void * const CNWSPlaceable__GetLastUnlocked = reinterpret_cast<void*>(0x081E24DC);
void * const CNWSPlaceable__GetLastUser = reinterpret_cast<void*>(0x081E2500);
void * const CNWSPlaceable__GetLightIsOn = reinterpret_cast<void*>(0x081E1D74);
void * const CNWSPlaceable__GetLightStateChange = reinterpret_cast<void*>(0x081E2900);
void * const CNWSPlaceable__GetLockable = reinterpret_cast<void*>(0x081E2338);
void * const CNWSPlaceable__GetLocked = reinterpret_cast<void*>(0x081E2314);
void * const CNWSPlaceable__GetLootableCreatureId = reinterpret_cast<void*>(0x081E2990);
void * const CNWSPlaceable__GetNearestActionPoint = reinterpret_cast<void*>(0x081E142C);
void * const CNWSPlaceable__GetNeverMakeIntoStaticObject = reinterpret_cast<void*>(0x081E296C);
void * const CNWSPlaceable__GetOneShot = reinterpret_cast<void*>(0x081E2668);
void * const CNWSPlaceable__GetOpenLockDC = reinterpret_cast<void*>(0x081E2260);
void * const CNWSPlaceable__GetPickable = reinterpret_cast<void*>(0x081E23A4);
void * const CNWSPlaceable__GetPortalInfo = reinterpret_cast<void*>(0x081E28B4);
void * const CNWSPlaceable__GetRecoverable = reinterpret_cast<void*>(0x081E268C);
void * const CNWSPlaceable__GetReflexSave = reinterpret_cast<void*>(0x081E22F0);
void * const CNWSPlaceable__GetRepositoryArrayIndex = reinterpret_cast<void*>(0x081E27A8);
void * const CNWSPlaceable__GetScriptName = reinterpret_cast<void*>(0x081E23C8);
void * const CNWSPlaceable__GetSittingCreature = reinterpret_cast<void*>(0x081E1E74);
void * const CNWSPlaceable__GetStaticObject = reinterpret_cast<void*>(0x081E2948);
void * const CNWSPlaceable__GetTemplateResRef = reinterpret_cast<void*>(0x081E2814);
void * const CNWSPlaceable__GetTrapCreator = reinterpret_cast<void*>(0x081E257C);
void * const CNWSPlaceable__GetTrapFaction = reinterpret_cast<void*>(0x081E26D4);
void * const CNWSPlaceable__GetTrapped = reinterpret_cast<void*>(0x081E25A0);
void * const CNWSPlaceable__GetType = reinterpret_cast<void*>(0x081E1FD4);
void * const CNWSPlaceable__GetUpdateDisplayName = reinterpret_cast<void*>(0x081E1F8C);
void * const CNWSPlaceable__GetUseable = reinterpret_cast<void*>(0x081E2380);
void * const CNWSPlaceable__GetWillSave = reinterpret_cast<void*>(0x081E22CC);
void * const CNWSPlaceable__LoadBodyBag = reinterpret_cast<void*>(0x081DDB44);
void * const CNWSPlaceable__LoadFromTemplate = reinterpret_cast<void*>(0x081DBF94);
void * const CNWSPlaceable__LoadPlaceable = reinterpret_cast<void*>(0x081DC150);
void * const CNWSPlaceable__OpenInventory = reinterpret_cast<void*>(0x081E0FF0);
void * const CNWSPlaceable__PostProcess = reinterpret_cast<void*>(0x081DEFBC);
void * const CNWSPlaceable__RemoveFromArea = reinterpret_cast<void*>(0x081DF7C0);
void * const CNWSPlaceable__RemoveItem = reinterpret_cast<void*>(0x081E1C30);
void * const CNWSPlaceable__SavePlaceable = reinterpret_cast<void*>(0x081DE414);
void * const CNWSPlaceable__SetActive = reinterpret_cast<void*>(0x081E269C);
void * const CNWSPlaceable__SetAppearance = reinterpret_cast<void*>(0x081E1FC0);
void * const CNWSPlaceable__SetAutoRemoveKey = reinterpret_cast<void*>(0x081E224C);
void * const CNWSPlaceable__SetBaseType = reinterpret_cast<void*>(0x081E25E8);
void * const CNWSPlaceable__SetBearing = reinterpret_cast<void*>(0x081E215C);
void * const CNWSPlaceable__SetBodyBag = reinterpret_cast<void*>(0x081E2934);
void * const CNWSPlaceable__SetCloseLockDC = reinterpret_cast<void*>(0x081E2294);
void * const CNWSPlaceable__SetCurrentItemContainer = reinterpret_cast<void*>(0x081E2800);
void * const CNWSPlaceable__SetDescription = reinterpret_cast<void*>(0x081E202C);
void * const CNWSPlaceable__SetDescriptionOverride = reinterpret_cast<void*>(0x081E20AC);
void * const CNWSPlaceable__SetDetectable = reinterpret_cast<void*>(0x081E2630);
void * const CNWSPlaceable__SetDetectDC = reinterpret_cast<void*>(0x081E25D4);
void * const CNWSPlaceable__SetDialogResref = reinterpret_cast<void*>(0x081E2750);
void * const CNWSPlaceable__SetDieWhenEmpty = reinterpret_cast<void*>(0x081E2794);
void * const CNWSPlaceable__SetDisarmable = reinterpret_cast<void*>(0x081E260C);
void * const CNWSPlaceable__SetDisarmDC = reinterpret_cast<void*>(0x081E26F4);
void * const CNWSPlaceable__SetDisplayName = reinterpret_cast<void*>(0x081E1F28);
void * const CNWSPlaceable__SetEffectSpellId = reinterpret_cast<void*>(0x081E28EC);
void * const CNWSPlaceable__SetFactionId = reinterpret_cast<void*>(0x081E2114);
void * const CNWSPlaceable__SetFirstName = reinterpret_cast<void*>(0x081E1EA8);
void * const CNWSPlaceable__SetFlagged = reinterpret_cast<void*>(0x081E2718);
void * const CNWSPlaceable__SetFortSave = reinterpret_cast<void*>(0x081E22B8);
void * const CNWSPlaceable__SetHardness = reinterpret_cast<void*>(0x081E2138);
void * const CNWSPlaceable__SetHasInventory = reinterpret_cast<void*>(0x081E236C);
void * const CNWSPlaceable__SetIsBodyBag = reinterpret_cast<void*>(0x081E29C4);
void * const CNWSPlaceable__SetIsGroundPile = reinterpret_cast<void*>(0x081E1FF8);
void * const CNWSPlaceable__SetItemContainerArrayIndex = reinterpret_cast<void*>(0x081E27DC);
void * const CNWSPlaceable__SetKeyName = reinterpret_cast<void*>(0x081E2180);
void * const CNWSPlaceable__SetKeyRequired = reinterpret_cast<void*>(0x081E21A8);
void * const CNWSPlaceable__SetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x081E21BC);
void * const CNWSPlaceable__SetLastClosed = reinterpret_cast<void*>(0x081E2558);
void * const CNWSPlaceable__SetLastDefaultClickedBy = reinterpret_cast<void*>(0x081E2534);
void * const CNWSPlaceable__SetLastDisarmed = reinterpret_cast<void*>(0x081E24A4);
void * const CNWSPlaceable__SetLastLocked = reinterpret_cast<void*>(0x081E24C8);
void * const CNWSPlaceable__SetLastOpened = reinterpret_cast<void*>(0x081E245C);
void * const CNWSPlaceable__SetLastTriggered = reinterpret_cast<void*>(0x081E2480);
void * const CNWSPlaceable__SetLastUnlocked = reinterpret_cast<void*>(0x081E24EC);
void * const CNWSPlaceable__SetLastUser = reinterpret_cast<void*>(0x081E2510);
void * const CNWSPlaceable__SetLightIsOn = reinterpret_cast<void*>(0x081E1CC8);
void * const CNWSPlaceable__SetLightStateChange = reinterpret_cast<void*>(0x081E2910);
void * const CNWSPlaceable__SetLockable = reinterpret_cast<void*>(0x081E2348);
void * const CNWSPlaceable__SetLocked = reinterpret_cast<void*>(0x081E2324);
void * const CNWSPlaceable__SetLootableCreatureId = reinterpret_cast<void*>(0x081E29A0);
void * const CNWSPlaceable__SetNeverMakeIntoStaticObject = reinterpret_cast<void*>(0x081E297C);
void * const CNWSPlaceable__SetOneShot = reinterpret_cast<void*>(0x081E2654);
void * const CNWSPlaceable__SetOpenLockDC = reinterpret_cast<void*>(0x081E2270);
void * const CNWSPlaceable__SetOrientation = reinterpret_cast<void*>(0x081DF084);
void * const CNWSPlaceable__SetPickable = reinterpret_cast<void*>(0x081E23B4);
void * const CNWSPlaceable__SetPortalInfo = reinterpret_cast<void*>(0x081E285C);
void * const CNWSPlaceable__SetRecoverable = reinterpret_cast<void*>(0x081E2678);
void * const CNWSPlaceable__SetReflexSave = reinterpret_cast<void*>(0x081E2300);
void * const CNWSPlaceable__SetRepositoryArrayIndex = reinterpret_cast<void*>(0x081E27B8);
void * const CNWSPlaceable__SetScriptName = reinterpret_cast<void*>(0x081E23E4);
void * const CNWSPlaceable__SetSittingCreature = reinterpret_cast<void*>(0x081E1E84);
void * const CNWSPlaceable__SetStaticObject = reinterpret_cast<void*>(0x081E2958);
void * const CNWSPlaceable__SetTemplateResRef = reinterpret_cast<void*>(0x081E2838);
void * const CNWSPlaceable__SetTrapCreator = reinterpret_cast<void*>(0x081E258C);
void * const CNWSPlaceable__SetTrapFaction = reinterpret_cast<void*>(0x081E26C0);
void * const CNWSPlaceable__SetTrapped = reinterpret_cast<void*>(0x081E25B0);
void * const CNWSPlaceable__SetType = reinterpret_cast<void*>(0x081E1FE4);
void * const CNWSPlaceable__SetUpdateDisplayName = reinterpret_cast<void*>(0x081E1F9C);
void * const CNWSPlaceable__SetUseable = reinterpret_cast<void*>(0x081E2390);
void * const CNWSPlaceable__SetWillSave = reinterpret_cast<void*>(0x081E22DC);

void * const CNWSPlayer__CNWSPlayerCtor = reinterpret_cast<void*>(0x0805397C);
void * const CNWSPlayer__CNWSPlayerDtor = reinterpret_cast<void*>(0x08053C9C);
void * const CNWSPlayer__AddArea = reinterpret_cast<void*>(0x0805E944);
void * const CNWSPlayer__AddDMAbilities = reinterpret_cast<void*>(0x08055758);
void * const CNWSPlayer__AllocateAreas = reinterpret_cast<void*>(0x0805E8F0);
void * const CNWSPlayer__AsNWSPlayer = reinterpret_cast<void*>(0x0805EBA4);
void * const CNWSPlayer__BackupServerCharacter = reinterpret_cast<void*>(0x08057EF0);
void * const CNWSPlayer__CleanMyTURDs = reinterpret_cast<void*>(0x0805E6C4);
void * const CNWSPlayer__ClearPlayerLastUpdateObject = reinterpret_cast<void*>(0x0805EA54);
void * const CNWSPlayer__ClearPlayerOnDestroyGame = reinterpret_cast<void*>(0x08053E48);
void * const CNWSPlayer__CreateNewPlayerLastUpdateObject = reinterpret_cast<void*>(0x0805E9DC);
void * const CNWSPlayer__DropTURD = reinterpret_cast<void*>(0x08054150);
void * const CNWSPlayer__EatTURD = reinterpret_cast<void*>(0x08054468);
void * const CNWSPlayer__GetAlwaysRun = reinterpret_cast<void*>(0x0805ED4C);
void * const CNWSPlayer__GetArea = reinterpret_cast<void*>(0x0805ED1C);
void * const CNWSPlayer__GetAreaNum = reinterpret_cast<void*>(0x0805ED10);
void * const CNWSPlayer__GetAreaTransitionBMP = reinterpret_cast<void*>(0x0805ECC4);
void * const CNWSPlayer__GetAreaTransitionName = reinterpret_cast<void*>(0x0805ECD0);
void * const CNWSPlayer__GetCharacterInfoFromIFO = reinterpret_cast<void*>(0x08055380);
void * const CNWSPlayer__GetCharacterType = reinterpret_cast<void*>(0x0805ED68);
void * const CNWSPlayer__GetCharSheetGUIInfo = reinterpret_cast<void*>(0x0805EC90);
void * const CNWSPlayer__GetCommunityNameAuthorized = reinterpret_cast<void*>(0x0805EDC8);
void * const CNWSPlayer__GetContainerGUIInfo = reinterpret_cast<void*>(0x0805ECB4);
void * const CNWSPlayer__GetCutsceneState = reinterpret_cast<void*>(0x0805EE78);
void * const CNWSPlayer__GetFileName = reinterpret_cast<void*>(0x0805ED94);
void * const CNWSPlayer__GetFloatyEffects = reinterpret_cast<void*>(0x0805ECF4);
void * const CNWSPlayer__GetFromSaveGame = reinterpret_cast<void*>(0x0805EC24);
void * const CNWSPlayer__GetFromTURD = reinterpret_cast<void*>(0x0805EC5C);
void * const CNWSPlayer__GetGameObject = reinterpret_cast<void*>(0x0805E8B8);
void * const CNWSPlayer__GetIFOCharacterIndex = reinterpret_cast<void*>(0x0805EDD8);
void * const CNWSPlayer__GetInventoryGUIInfo = reinterpret_cast<void*>(0x0805EC9C);
void * const CNWSPlayer__GetIsAllowedToSave = reinterpret_cast<void*>(0x0805E768);
void * const CNWSPlayer__GetIsPrimaryPlayer = reinterpret_cast<void*>(0x0805EC08);
void * const CNWSPlayer__GetJournalQuestInfo = reinterpret_cast<void*>(0x0805EC78);
void * const CNWSPlayer__GetLastObjectControlled = reinterpret_cast<void*>(0x0805EBC8);
void * const CNWSPlayer__GetLastUpdatedTime = reinterpret_cast<void*>(0x0805EBE4);
void * const CNWSPlayer__GetLastUpdateObject = reinterpret_cast<void*>(0x0805E710);
void * const CNWSPlayer__GetLoginState = reinterpret_cast<void*>(0x0805EBAC);
void * const CNWSPlayer__GetModuleInfoSucceeded = reinterpret_cast<void*>(0x0805EE10);
void * const CNWSPlayer__GetOtherInventoryGUIInfo = reinterpret_cast<void*>(0x0805ECA8);
void * const CNWSPlayer__GetPCObject = reinterpret_cast<void*>(0x0805EE30);
void * const CNWSPlayer__GetPlayerLastUpdateObject = reinterpret_cast<void*>(0x0805EE3C);
void * const CNWSPlayer__GetPlayerListIndex = reinterpret_cast<void*>(0x0805EC40);
void * const CNWSPlayer__GetPlayerName = reinterpret_cast<void*>(0x0805E980);
void * const CNWSPlayer__GetPlayModuleListingCharacters = reinterpret_cast<void*>(0x0805EE58);
void * const CNWSPlayer__GetStoreGUIInfo = reinterpret_cast<void*>(0x0805EC84);
void * const CNWSPlayer__HasExpansionPack = reinterpret_cast<void*>(0x0805EA80);
void * const CNWSPlayer__LoadCharacterFromIFO = reinterpret_cast<void*>(0x0805489C);
void * const CNWSPlayer__LoadCreatureData = reinterpret_cast<void*>(0x08055FEC);
void * const CNWSPlayer__LoadDMCharacter = reinterpret_cast<void*>(0x08055514);
void * const CNWSPlayer__LoadLocalCharacter = reinterpret_cast<void*>(0x080547E0);
void * const CNWSPlayer__LoadServerCharacter = reinterpret_cast<void*>(0x080555F4);
void * const CNWSPlayer__LoadTURDInfoFromIFO = reinterpret_cast<void*>(0x0805507C);
void * const CNWSPlayer__PackCreatureIntoMessage = reinterpret_cast<void*>(0x0805D910);
void * const CNWSPlayer__PermittedToDisplayCharacterSheet = reinterpret_cast<void*>(0x0805E1F4);
void * const CNWSPlayer__RestoreCameraSettings = reinterpret_cast<void*>(0x0805EB14);
void * const CNWSPlayer__SaveServerCharacter = reinterpret_cast<void*>(0x080569D4);
void * const CNWSPlayer__SetAlwaysRun = reinterpret_cast<void*>(0x0805ED3C);
void * const CNWSPlayer__SetAreaTransitionBMP = reinterpret_cast<void*>(0x0805E794);
void * const CNWSPlayer__SetCharacterType = reinterpret_cast<void*>(0x0805ED58);
void * const CNWSPlayer__SetCommunityNameAuthorized = reinterpret_cast<void*>(0x0805EDB4);
void * const CNWSPlayer__SetCutsceneState = reinterpret_cast<void*>(0x0805EE64);
void * const CNWSPlayer__SetFileName = reinterpret_cast<void*>(0x0805ED74);
void * const CNWSPlayer__SetFloatyEffects = reinterpret_cast<void*>(0x0805ED00);
void * const CNWSPlayer__SetFromSaveGame = reinterpret_cast<void*>(0x0805EC30);
void * const CNWSPlayer__SetFromTURD = reinterpret_cast<void*>(0x0805EC68);
void * const CNWSPlayer__SetGameObject = reinterpret_cast<void*>(0x0805DF90);
void * const CNWSPlayer__SetIFOCharacterIndex = reinterpret_cast<void*>(0x0805EDE8);
void * const CNWSPlayer__SetIsPrimaryPlayer = reinterpret_cast<void*>(0x0805EC14);
void * const CNWSPlayer__SetLastObjectControlled = reinterpret_cast<void*>(0x0805EBD4);
void * const CNWSPlayer__SetLastUpdatedTime = reinterpret_cast<void*>(0x0805EBF4);
void * const CNWSPlayer__SetLoginState = reinterpret_cast<void*>(0x0805EBB8);
void * const CNWSPlayer__SetModuleInfoSucceeded = reinterpret_cast<void*>(0x0805EDFC);
void * const CNWSPlayer__SetPCObject = reinterpret_cast<void*>(0x0805EE20);
void * const CNWSPlayer__SetPlayerListIndex = reinterpret_cast<void*>(0x0805EC4C);
void * const CNWSPlayer__SetPlayModuleListingCharacters = reinterpret_cast<void*>(0x0805EE48);
void * const CNWSPlayer__StoreCameraSettings = reinterpret_cast<void*>(0x0805EAE8);
void * const CNWSPlayer__StripAllInvalidItemPropertiesInInventory = reinterpret_cast<void*>(0x0805E278);
void * const CNWSPlayer__StripAllInvalidItemPropertiesOnItem = reinterpret_cast<void*>(0x0805E338);
void * const CNWSPlayer__ValidateCharacter = reinterpret_cast<void*>(0x080580BC);
void * const CNWSPlayer__ValidateCharacter_SetNormalBonusFlags = reinterpret_cast<void*>(0x0805E800);

void * const CNWSPlayerCharSheetGUI__ComputeCharacterSheetUpdateRequired = reinterpret_cast<void*>(0x08053054);
void * const CNWSPlayerCharSheetGUI__SetCreatureDisplayed = reinterpret_cast<void*>(0x0805E4F8);

void * const CNWSPlayerContainerGUI__CNWSPlayerContainerGUICtor = reinterpret_cast<void*>(0x0805E6A8);
void * const CNWSPlayerContainerGUI__SetNextPage = reinterpret_cast<void*>(0x0805385C);
void * const CNWSPlayerContainerGUI__SetOpen = reinterpret_cast<void*>(0x08053928);
void * const CNWSPlayerContainerGUI__SetPreviousPage = reinterpret_cast<void*>(0x080538C8);

void * const CNWSPlayerInventoryGUI__CNWSPlayerInventoryGUICtor = reinterpret_cast<void*>(0x0805376C);
void * const CNWSPlayerInventoryGUI__CNWSPlayerInventoryGUIDtor = reinterpret_cast<void*>(0x0805E568);
void * const CNWSPlayerInventoryGUI__SetOpen = reinterpret_cast<void*>(0x08053804);
void * const CNWSPlayerInventoryGUI__SetOwner = reinterpret_cast<void*>(0x0805E5B8);
void * const CNWSPlayerInventoryGUI__SetPanel = reinterpret_cast<void*>(0x0805E62C);

void * const CNWSPlayerLastUpdateObject__CNWSPlayerLastUpdateObjectCtor = reinterpret_cast<void*>(0x081E30D8);
void * const CNWSPlayerLastUpdateObject__CNWSPlayerLastUpdateObjectDtor = reinterpret_cast<void*>(0x081E36C8);
void * const CNWSPlayerLastUpdateObject__AddKnownSpell = reinterpret_cast<void*>(0x081E43F4);
void * const CNWSPlayerLastUpdateObject__ClearActionQueue = reinterpret_cast<void*>(0x081E4768);
void * const CNWSPlayerLastUpdateObject__ClearAutoMapData = reinterpret_cast<void*>(0x081E47D8);
void * const CNWSPlayerLastUpdateObject__ClearEffectIcons = reinterpret_cast<void*>(0x081E4364);
void * const CNWSPlayerLastUpdateObject__ClearKnownSpells = reinterpret_cast<void*>(0x081E4314);
void * const CNWSPlayerLastUpdateObject__ClearKnownSpellUsesLeft = reinterpret_cast<void*>(0x081E4670);
void * const CNWSPlayerLastUpdateObject__ClearMemorizedSpells = reinterpret_cast<void*>(0x081E3928);
void * const CNWSPlayerLastUpdateObject__ClearSpellAddDeleteLists = reinterpret_cast<void*>(0x081E3BD8);
void * const CNWSPlayerLastUpdateObject__ClearVisibilityList = reinterpret_cast<void*>(0x081E4710);
void * const CNWSPlayerLastUpdateObject__GetIsDomainSpell = reinterpret_cast<void*>(0x081E4548);
void * const CNWSPlayerLastUpdateObject__GetKnownSpell = reinterpret_cast<void*>(0x081E4430);
void * const CNWSPlayerLastUpdateObject__GetKnownSpellUsesLeft = reinterpret_cast<void*>(0x081E46AC);
void * const CNWSPlayerLastUpdateObject__GetMemorizedSpell = reinterpret_cast<void*>(0x081E4480);
void * const CNWSPlayerLastUpdateObject__GetMemorizedSpellMetaType = reinterpret_cast<void*>(0x081E45AC);
void * const CNWSPlayerLastUpdateObject__GetMemorizedSpellReadied = reinterpret_cast<void*>(0x081E44E4);
void * const CNWSPlayerLastUpdateObject__InitializeAutoMapData = reinterpret_cast<void*>(0x081E4810);
void * const CNWSPlayerLastUpdateObject__ResetAutoMapData = reinterpret_cast<void*>(0x081E485C);
void * const CNWSPlayerLastUpdateObject__SetKnownSpellUsesLeft = reinterpret_cast<void*>(0x081E46E0);
void * const CNWSPlayerLastUpdateObject__SetMemorizedSpellReadied = reinterpret_cast<void*>(0x081E4610);
void * const CNWSPlayerLastUpdateObject__SetMemorizedSpellSlot = reinterpret_cast<void*>(0x081E39D8);
void * const CNWSPlayerLastUpdateObject__SetNumberMemorizedSpellSlots = reinterpret_cast<void*>(0x081E3AD8);

void * const CNWSPlayerLUOInventory__CNWSPlayerLUOInventoryCtor = reinterpret_cast<void*>(0x081E29D8);
void * const CNWSPlayerLUOInventory__CNWSPlayerLUOInventoryDtor = reinterpret_cast<void*>(0x081E3D38);
void * const CNWSPlayerLUOInventory__ClearBarter = reinterpret_cast<void*>(0x081E3E90);
void * const CNWSPlayerLUOInventory__ClearContainer = reinterpret_cast<void*>(0x081E3E00);
void * const CNWSPlayerLUOInventory__ClearRepository = reinterpret_cast<void*>(0x081E3DC4);
void * const CNWSPlayerLUOInventory__ClearSlots = reinterpret_cast<void*>(0x081E3ECC);
void * const CNWSPlayerLUOInventory__ClearStore = reinterpret_cast<void*>(0x081E3E44);
void * const CNWSPlayerLUOInventory__ItemListAddHead = reinterpret_cast<void*>(0x081E41CC);
void * const CNWSPlayerLUOInventory__ItemListGetItem = reinterpret_cast<void*>(0x081E2AD4);
void * const CNWSPlayerLUOInventory__ItemListGetItemObjectID = reinterpret_cast<void*>(0x081E3EF8);
void * const CNWSPlayerLUOInventory__ItemListGetNext = reinterpret_cast<void*>(0x081E408C);
void * const CNWSPlayerLUOInventory__ItemListGetNumber = reinterpret_cast<void*>(0x081E416C);
void * const CNWSPlayerLUOInventory__ItemListGetPrev = reinterpret_cast<void*>(0x081E40FC);
void * const CNWSPlayerLUOInventory__ItemListGetUpdateItem = reinterpret_cast<void*>(0x081E3F6C);
void * const CNWSPlayerLUOInventory__ItemListRemove = reinterpret_cast<void*>(0x081E2B7C);
void * const CNWSPlayerLUOInventory__ItemListSetEnd = reinterpret_cast<void*>(0x081E4030);
void * const CNWSPlayerLUOInventory__ItemListSetStart = reinterpret_cast<void*>(0x081E3FD4);

void * const CNWSPlayerStoreGUI__CNWSPlayerStoreGUICtor = reinterpret_cast<void*>(0x0805E4C4);
void * const CNWSPlayerStoreGUI__CloseStore = reinterpret_cast<void*>(0x08052F60);
void * const CNWSPlayerStoreGUI__OpenStore = reinterpret_cast<void*>(0x08052DE4);

void * const CNWSPlayerTURD__CNWSPlayerTURDCtor = reinterpret_cast<void*>(0x0805F628);
void * const CNWSPlayerTURD__CNWSPlayerTURDDtor = reinterpret_cast<void*>(0x0805F734);
void * const CNWSPlayerTURD__AddToArea = reinterpret_cast<void*>(0x08060924);
void * const CNWSPlayerTURD__AIUpdate = reinterpret_cast<void*>(0x08060914);
void * const CNWSPlayerTURD__AsNWSPlayerTURD = reinterpret_cast<void*>(0x08060CE4);
void * const CNWSPlayerTURD__ClearAutomapData = reinterpret_cast<void*>(0x08060A60);
void * const CNWSPlayerTURD__CopyAutomapData = reinterpret_cast<void*>(0x080605E4);
void * const CNWSPlayerTURD__CopyEffectList = reinterpret_cast<void*>(0x080609D4);
void * const CNWSPlayerTURD__EventHandler = reinterpret_cast<void*>(0x0806091C);
void * const CNWSPlayerTURD__GetAutoMapAreasList = reinterpret_cast<void*>(0x08060E18);
void * const CNWSPlayerTURD__GetAutoMapTileData = reinterpret_cast<void*>(0x08060E28);
void * const CNWSPlayerTURD__GetCalendarDay = reinterpret_cast<void*>(0x08060DA0);
void * const CNWSPlayerTURD__GetCalendarTimeOfDay = reinterpret_cast<void*>(0x08060DC4);
void * const CNWSPlayerTURD__GetCommunityName = reinterpret_cast<void*>(0x08060CEC);
void * const CNWSPlayerTURD__GetFirstName = reinterpret_cast<void*>(0x08060D2C);
void * const CNWSPlayerTURD__GetLastName = reinterpret_cast<void*>(0x08060D54);
void * const CNWSPlayerTURD__GetNumAutoMapAreas = reinterpret_cast<void*>(0x08060E08);
void * const CNWSPlayerTURD__GetPersonalReputation = reinterpret_cast<void*>(0x08060DF8);
void * const CNWSPlayerTURD__GetPlayerID = reinterpret_cast<void*>(0x08060D7C);
void * const CNWSPlayerTURD__GetReputation = reinterpret_cast<void*>(0x08060DE8);
void * const CNWSPlayerTURD__LoadAutoMapData = reinterpret_cast<void*>(0x080606F8);
void * const CNWSPlayerTURD__LoadTURD = reinterpret_cast<void*>(0x0805F858);
void * const CNWSPlayerTURD__RemoveFromArea = reinterpret_cast<void*>(0x08060990);
void * const CNWSPlayerTURD__SaveAutoMapData = reinterpret_cast<void*>(0x08060AF8);
void * const CNWSPlayerTURD__SaveTURD = reinterpret_cast<void*>(0x0805FF5C);
void * const CNWSPlayerTURD__SetCalendarDay = reinterpret_cast<void*>(0x08060DB0);
void * const CNWSPlayerTURD__SetCalendarTimeOfDay = reinterpret_cast<void*>(0x08060DD4);
void * const CNWSPlayerTURD__SetCommunityName = reinterpret_cast<void*>(0x08060D14);
void * const CNWSPlayerTURD__SetFirstName = reinterpret_cast<void*>(0x08060D3C);
void * const CNWSPlayerTURD__SetLastName = reinterpret_cast<void*>(0x08060D64);
void * const CNWSPlayerTURD__SetPersonalReputation = reinterpret_cast<void*>(0x080604F0);
void * const CNWSPlayerTURD__SetPlayerID = reinterpret_cast<void*>(0x08060D8C);
void * const CNWSPlayerTURD__SetReputation = reinterpret_cast<void*>(0x08060430);

void * const CNWSRules__CNWSRulesCtor = reinterpret_cast<void*>(0x081E4B5C);
void * const CNWSRules__CNWSRulesDtor = reinterpret_cast<void*>(0x081E4B80);

void * const CNWSScriptVarTable__CNWSScriptVarTableDtor = reinterpret_cast<void*>(0x081F426C);
void * const CNWSScriptVarTable__DeleteIndex = reinterpret_cast<void*>(0x081F3F5C);
void * const CNWSScriptVarTable__DestroyFloat = reinterpret_cast<void*>(0x081F4320);
void * const CNWSScriptVarTable__DestroyInt = reinterpret_cast<void*>(0x081F362C);
void * const CNWSScriptVarTable__DestroyLocation = reinterpret_cast<void*>(0x081F4458);
void * const CNWSScriptVarTable__DestroyObject = reinterpret_cast<void*>(0x081F43F0);
void * const CNWSScriptVarTable__DestroyString = reinterpret_cast<void*>(0x081F4388);
void * const CNWSScriptVarTable__GetFloat = reinterpret_cast<void*>(0x081F3FF0);
void * const CNWSScriptVarTable__GetInt = reinterpret_cast<void*>(0x081F3FC8);
void * const CNWSScriptVarTable__GetLocation = reinterpret_cast<void*>(0x081F40E8);
void * const CNWSScriptVarTable__GetObject = reinterpret_cast<void*>(0x081F40BC);
void * const CNWSScriptVarTable__GetString = reinterpret_cast<void*>(0x081F4020);
void * const CNWSScriptVarTable__LoadVarTable = reinterpret_cast<void*>(0x081F3740);
void * const CNWSScriptVarTable__MatchIndex = reinterpret_cast<void*>(0x081F32B4);
void * const CNWSScriptVarTable__SaveVarTable = reinterpret_cast<void*>(0x081F3B3C);
void * const CNWSScriptVarTable__SetFloat = reinterpret_cast<void*>(0x081F4190);
void * const CNWSScriptVarTable__SetInt = reinterpret_cast<void*>(0x081F3454);
void * const CNWSScriptVarTable__SetLocation = reinterpret_cast<void*>(0x081F4204);
void * const CNWSScriptVarTable__SetObject = reinterpret_cast<void*>(0x081F41E0);
void * const CNWSScriptVarTable__SetString = reinterpret_cast<void*>(0x081F41B4);

void * const CNWSSoundObject__CNWSSoundObjectCtor = reinterpret_cast<void*>(0x081E88F4);
void * const CNWSSoundObject__CNWSSoundObjectDtor = reinterpret_cast<void*>(0x081E9948);
void * const CNWSSoundObject__AddToArea = reinterpret_cast<void*>(0x081E99A4);
void * const CNWSSoundObject__AIUpdate = reinterpret_cast<void*>(0x081E9994);
void * const CNWSSoundObject__AsNWSSoundObject = reinterpret_cast<void*>(0x081E9B28);
void * const CNWSSoundObject__ChangePosition = reinterpret_cast<void*>(0x081E97B4);
void * const CNWSSoundObject__ChangeVolume = reinterpret_cast<void*>(0x081E96BC);
void * const CNWSSoundObject__EventHandler = reinterpret_cast<void*>(0x081E999C);
void * const CNWSSoundObject__GetContinuous = reinterpret_cast<void*>(0x081E9D68);
void * const CNWSSoundObject__GetHours = reinterpret_cast<void*>(0x081E9D08);
void * const CNWSSoundObject__GetInterval = reinterpret_cast<void*>(0x081E9D28);
void * const CNWSSoundObject__GetIntervalVariance = reinterpret_cast<void*>(0x081E9D38);
void * const CNWSSoundObject__GetIsActive = reinterpret_cast<void*>(0x081E9C98);
void * const CNWSSoundObject__GetLooping = reinterpret_cast<void*>(0x081E9CB8);
void * const CNWSSoundObject__GetMaxDistance = reinterpret_cast<void*>(0x081E9D58);
void * const CNWSSoundObject__GetMinDistance = reinterpret_cast<void*>(0x081E9D48);
void * const CNWSSoundObject__GetPeopleInSoundRange = reinterpret_cast<void*>(0x081E9A54);
void * const CNWSSoundObject__GetPitchVariation = reinterpret_cast<void*>(0x081E9CF8);
void * const CNWSSoundObject__GetPositional = reinterpret_cast<void*>(0x081E9CA8);
void * const CNWSSoundObject__GetPriority = reinterpret_cast<void*>(0x081E9D18);
void * const CNWSSoundObject__GetRandom = reinterpret_cast<void*>(0x081E9D78);
void * const CNWSSoundObject__GetRandomPosition = reinterpret_cast<void*>(0x081E9DB0);
void * const CNWSSoundObject__GetRandomXRange = reinterpret_cast<void*>(0x081E9DC0);
void * const CNWSSoundObject__GetRandomYRange = reinterpret_cast<void*>(0x081E9DD0);
void * const CNWSSoundObject__GetSoundList = reinterpret_cast<void*>(0x081E9D88);
void * const CNWSSoundObject__GetTimeofDay = reinterpret_cast<void*>(0x081E9CE8);
void * const CNWSSoundObject__GetVolume = reinterpret_cast<void*>(0x081E9CC8);
void * const CNWSSoundObject__GetVolumeVariation = reinterpret_cast<void*>(0x081E9CD8);
void * const CNWSSoundObject__Load = reinterpret_cast<void*>(0x081E8A0C);
void * const CNWSSoundObject__PackIntoMessage = reinterpret_cast<void*>(0x081E929C);
void * const CNWSSoundObject__Play = reinterpret_cast<void*>(0x081E9524);
void * const CNWSSoundObject__RemoveFromArea = reinterpret_cast<void*>(0x081E9A10);
void * const CNWSSoundObject__Save = reinterpret_cast<void*>(0x081E8FD4);
void * const CNWSSoundObject__SetContinuous = reinterpret_cast<void*>(0x081E9C34);
void * const CNWSSoundObject__SetHours = reinterpret_cast<void*>(0x081E9BBC);
void * const CNWSSoundObject__SetInterval = reinterpret_cast<void*>(0x081E9BE4);
void * const CNWSSoundObject__SetIntervalVariance = reinterpret_cast<void*>(0x081E9BF8);
void * const CNWSSoundObject__SetIsActive = reinterpret_cast<void*>(0x081E9B30);
void * const CNWSSoundObject__SetLooping = reinterpret_cast<void*>(0x081E9B58);
void * const CNWSSoundObject__SetMaxDistance = reinterpret_cast<void*>(0x081E9C20);
void * const CNWSSoundObject__SetMinDistance = reinterpret_cast<void*>(0x081E9C0C);
void * const CNWSSoundObject__SetPitchVariation = reinterpret_cast<void*>(0x081E9BA8);
void * const CNWSSoundObject__SetPositional = reinterpret_cast<void*>(0x081E9B44);
void * const CNWSSoundObject__SetPriority = reinterpret_cast<void*>(0x081E9BD0);
void * const CNWSSoundObject__SetRandom = reinterpret_cast<void*>(0x081E9C48);
void * const CNWSSoundObject__SetRandomPosition = reinterpret_cast<void*>(0x081E9C5C);
void * const CNWSSoundObject__SetRandomXRange = reinterpret_cast<void*>(0x081E9C70);
void * const CNWSSoundObject__SetRandomYRange = reinterpret_cast<void*>(0x081E9C84);
void * const CNWSSoundObject__SetTimeofDay = reinterpret_cast<void*>(0x081E9B94);
void * const CNWSSoundObject__SetVolume = reinterpret_cast<void*>(0x081E9B6C);
void * const CNWSSoundObject__SetVolumeVariation = reinterpret_cast<void*>(0x081E9B80);
void * const CNWSSoundObject__Stop = reinterpret_cast<void*>(0x081E95F0);

void * const CNWSSpellScriptData__LoadData = reinterpret_cast<void*>(0x0813758C);
void * const CNWSSpellScriptData__SaveData = reinterpret_cast<void*>(0x0813D098);

void * const CNWSStats_Spell__CNWSStats_SpellCtor = reinterpret_cast<void*>(0x08163BE4);

void * const CNWSStats_SpellLikeAbility__CNWSStats_SpellLikeAbilityCtor = reinterpret_cast<void*>(0x08163C04);

void * const CNWSStore__CNWSStoreCtor = reinterpret_cast<void*>(0x08083C0C);
void * const CNWSStore__CNWSStoreDtor = reinterpret_cast<void*>(0x08083E88);
void * const CNWSStore__AcquireItem = reinterpret_cast<void*>(0x08085404);
void * const CNWSStore__AddCustomer = reinterpret_cast<void*>(0x08085DA0);
void * const CNWSStore__AddGold = reinterpret_cast<void*>(0x08086374);
void * const CNWSStore__AddItemToInventory = reinterpret_cast<void*>(0x08085690);
void * const CNWSStore__AddToArea = reinterpret_cast<void*>(0x08085B0C);
void * const CNWSStore__AIUpdate = reinterpret_cast<void*>(0x08085BB8);
void * const CNWSStore__AsNWSStore = reinterpret_cast<void*>(0x08086144);
void * const CNWSStore__CalculateItemBuyPrice = reinterpret_cast<void*>(0x08085BC0);
void * const CNWSStore__CalculateItemSellPrice = reinterpret_cast<void*>(0x08085C60);
void * const CNWSStore__EventHandler = reinterpret_cast<void*>(0x080852CC);
void * const CNWSStore__GetAppropriateListId = reinterpret_cast<void*>(0x08085D14);
void * const CNWSStore__GetBlackMarket = reinterpret_cast<void*>(0x08086218);
void * const CNWSStore__GetBlackMarketMarkDown = reinterpret_cast<void*>(0x0808623C);
void * const CNWSStore__GetCustomer = reinterpret_cast<void*>(0x08085EB4);
void * const CNWSStore__GetCustomerBuyRate = reinterpret_cast<void*>(0x08085F88);
void * const CNWSStore__GetCustomerSellRate = reinterpret_cast<void*>(0x08085F0C);
void * const CNWSStore__GetGold = reinterpret_cast<void*>(0x08086328);
void * const CNWSStore__GetIdentifyCost = reinterpret_cast<void*>(0x08086390);
void * const CNWSStore__GetIsRestrictedBuyItem = reinterpret_cast<void*>(0x08085D40);
void * const CNWSStore__GetItemInInventory__0 = reinterpret_cast<void*>(0x08086018);
void * const CNWSStore__GetItemInInventory__1 = reinterpret_cast<void*>(0x08086080);
void * const CNWSStore__GetLastClosed = reinterpret_cast<void*>(0x080861F4);
void * const CNWSStore__GetLastOpened = reinterpret_cast<void*>(0x080861D0);
void * const CNWSStore__GetMarkDown = reinterpret_cast<void*>(0x08086260);
void * const CNWSStore__GetMarkUp = reinterpret_cast<void*>(0x08086284);
void * const CNWSStore__GetMaxBuyPrice = reinterpret_cast<void*>(0x080863B4);
void * const CNWSStore__GetName = reinterpret_cast<void*>(0x08086300);
void * const CNWSStore__GetRepository = reinterpret_cast<void*>(0x08086420);
void * const CNWSStore__GetRepositoryArrayIndex = reinterpret_cast<void*>(0x08086438);
void * const CNWSStore__GetRepositoryListNumber = reinterpret_cast<void*>(0x0808645C);
void * const CNWSStore__GetScriptName = reinterpret_cast<void*>(0x080861B4);
void * const CNWSStore__GetWillNotBuyItem = reinterpret_cast<void*>(0x080863F8);
void * const CNWSStore__GetWillNotBuyListSize = reinterpret_cast<void*>(0x080863D8);
void * const CNWSStore__GetWillOnlyBuyItem = reinterpret_cast<void*>(0x0808640C);
void * const CNWSStore__GetWillOnlyBuyListSize = reinterpret_cast<void*>(0x080863E8);
void * const CNWSStore__LoadFromTemplate = reinterpret_cast<void*>(0x08084074);
void * const CNWSStore__LoadStore = reinterpret_cast<void*>(0x08084230);
void * const CNWSStore__RemoveCustomer = reinterpret_cast<void*>(0x08085E28);
void * const CNWSStore__RemoveFromArea = reinterpret_cast<void*>(0x08085B74);
void * const CNWSStore__RemoveGold = reinterpret_cast<void*>(0x0808634C);
void * const CNWSStore__RemoveItem = reinterpret_cast<void*>(0x08085CD8);
void * const CNWSStore__RemoveItemFromInventory = reinterpret_cast<void*>(0x080859BC);
void * const CNWSStore__SaveStore = reinterpret_cast<void*>(0x08084DB8);
void * const CNWSStore__SellItem = reinterpret_cast<void*>(0x08085594);
void * const CNWSStore__SetBlackMarket = reinterpret_cast<void*>(0x08086228);
void * const CNWSStore__SetBlackMarketMarkDown = reinterpret_cast<void*>(0x0808624C);
void * const CNWSStore__SetGold = reinterpret_cast<void*>(0x08086338);
void * const CNWSStore__SetIdentifyCost = reinterpret_cast<void*>(0x080863A0);
void * const CNWSStore__SetLastClosed = reinterpret_cast<void*>(0x08086204);
void * const CNWSStore__SetLastOpened = reinterpret_cast<void*>(0x080861E0);
void * const CNWSStore__SetMarkDown = reinterpret_cast<void*>(0x08086270);
void * const CNWSStore__SetMarkUp = reinterpret_cast<void*>(0x08086294);
void * const CNWSStore__SetMaxBuyPrice = reinterpret_cast<void*>(0x080863C4);
void * const CNWSStore__SetName = reinterpret_cast<void*>(0x080862A8);
void * const CNWSStore__SetRepositoryArrayIndex = reinterpret_cast<void*>(0x08086448);
void * const CNWSStore__SetRepositoryListNumber = reinterpret_cast<void*>(0x0808646C);
void * const CNWSStore__SetScriptName = reinterpret_cast<void*>(0x0808614C);

void * const CNWSSysAdmin__CNWSSysAdminCtor = reinterpret_cast<void*>(0x081ECFF0);
void * const CNWSSysAdmin__CNWSSysAdminDtor = reinterpret_cast<void*>(0x081ED014);
void * const CNWSSysAdmin__AsNWSSysAdmin = reinterpret_cast<void*>(0x081ED0B4);

void * const CNWSTile__CNWSTileCtor = reinterpret_cast<void*>(0x081ED8E4);
void * const CNWSTile__CNWSTileDtor = reinterpret_cast<void*>(0x081ED970);
void * const CNWSTile__AddDoor = reinterpret_cast<void*>(0x081EE0D4);
void * const CNWSTile__AddTrigger = reinterpret_cast<void*>(0x081ED9CC);
void * const CNWSTile__ClearLineOfSight = reinterpret_cast<void*>(0x081ED0BC);
void * const CNWSTile__ClippedLineSegmentWalkable = reinterpret_cast<void*>(0x081EDA58);
void * const CNWSTile__ComputeClippedLineSegment = reinterpret_cast<void*>(0x081ED254);
void * const CNWSTile__ComputeHeight = reinterpret_cast<void*>(0x081EDB30);
void * const CNWSTile__FindClosestRegion = reinterpret_cast<void*>(0x081EDBBC);
void * const CNWSTile__GetDoorsList = reinterpret_cast<void*>(0x081EE104);
void * const CNWSTile__GetExit = reinterpret_cast<void*>(0x081EDC14);
void * const CNWSTile__GetExitNumber = reinterpret_cast<void*>(0x081EDC70);
void * const CNWSTile__GetFlaggedAsProblem = reinterpret_cast<void*>(0x081EE158);
void * const CNWSTile__GetHasPlaceableWithWalkMesh = reinterpret_cast<void*>(0x081EE174);
void * const CNWSTile__GetMainLightColorChange = reinterpret_cast<void*>(0x081EE110);
void * const CNWSTile__GetNumTriggers = reinterpret_cast<void*>(0x081EE0C8);
void * const CNWSTile__GetRegionCoords = reinterpret_cast<void*>(0x081EDCC0);
void * const CNWSTile__GetRegionEntrance = reinterpret_cast<void*>(0x081EDD1C);
void * const CNWSTile__GetSourceLightColorChange = reinterpret_cast<void*>(0x081EE12C);
void * const CNWSTile__GetSurfaceMaterial = reinterpret_cast<void*>(0x081EDE94);
void * const CNWSTile__GetTileData = reinterpret_cast<void*>(0x081EDD70);
void * const CNWSTile__GetTotalExits = reinterpret_cast<void*>(0x081EDD7C);
void * const CNWSTile__GetTriggerData = reinterpret_cast<void*>(0x081EE0BC);
void * const CNWSTile__GetWalkMesh = reinterpret_cast<void*>(0x081EDE6C);
void * const CNWSTile__IntersectLineSegments = reinterpret_cast<void*>(0x081ED4BC);
void * const CNWSTile__InTrigger = reinterpret_cast<void*>(0x081EDDA0);
void * const CNWSTile__LoadWalkMesh = reinterpret_cast<void*>(0x081EDE54);
void * const CNWSTile__NoNonWalkPolysOnTile = reinterpret_cast<void*>(0x081EDF08);
void * const CNWSTile__PlotIntraTilePath = reinterpret_cast<void*>(0x081ED634);
void * const CNWSTile__RemoveDoor = reinterpret_cast<void*>(0x081EE0EC);
void * const CNWSTile__SetFlaggedAsProblem = reinterpret_cast<void*>(0x081EE148);
void * const CNWSTile__SetHasPlaceableWithWalkMesh = reinterpret_cast<void*>(0x081EE164);
void * const CNWSTile__SetMainLightColor = reinterpret_cast<void*>(0x081EE000);
void * const CNWSTile__SetMainLightColorChange = reinterpret_cast<void*>(0x081EE11C);
void * const CNWSTile__SetSourceLightColor = reinterpret_cast<void*>(0x081EE02C);
void * const CNWSTile__SetSourceLightColorChange = reinterpret_cast<void*>(0x081EE138);
void * const CNWSTile__SetTileData = reinterpret_cast<void*>(0x081EDFF0);

void * const CNWSTrigger__CNWSTriggerCtor = reinterpret_cast<void*>(0x081EE180);
void * const CNWSTrigger__CNWSTriggerDtor = reinterpret_cast<void*>(0x081EE514);
void * const CNWSTrigger__AddToArea = reinterpret_cast<void*>(0x081EE668);
void * const CNWSTrigger__AIUpdate = reinterpret_cast<void*>(0x081F2880);
void * const CNWSTrigger__AsNWSTrigger = reinterpret_cast<void*>(0x081F2D5C);
void * const CNWSTrigger__CalculateNearestPoint = reinterpret_cast<void*>(0x081EEAA0);
void * const CNWSTrigger__ComputeBoundingBox = reinterpret_cast<void*>(0x081F2A80);
void * const CNWSTrigger__CreateNewGeometry__0 = reinterpret_cast<void*>(0x081F1D18);
void * const CNWSTrigger__CreateNewGeometry__1 = reinterpret_cast<void*>(0x081F1F94);
void * const CNWSTrigger__EventHandler = reinterpret_cast<void*>(0x081EEDFC);
void * const CNWSTrigger__GetActive = reinterpret_cast<void*>(0x081F31F4);
void * const CNWSTrigger__GetAutoRemoveKey = reinterpret_cast<void*>(0x081F3068);
void * const CNWSTrigger__GetBaseType = reinterpret_cast<void*>(0x081F3140);
void * const CNWSTrigger__GetCanFireTrapOnObject = reinterpret_cast<void*>(0x081F24D4);
void * const CNWSTrigger__GetClosestPointWithinTrigger = reinterpret_cast<void*>(0x081EE868);
void * const CNWSTrigger__GetCreator = reinterpret_cast<void*>(0x081F3020);
void * const CNWSTrigger__GetCreatureList = reinterpret_cast<void*>(0x081F3204);
void * const CNWSTrigger__GetCursor = reinterpret_cast<void*>(0x081F3238);
void * const CNWSTrigger__GetCustomScriptEventId = reinterpret_cast<void*>(0x081F3214);
void * const CNWSTrigger__GetDescriptionOverride = reinterpret_cast<void*>(0x081F2D74);
void * const CNWSTrigger__GetDetectable = reinterpret_cast<void*>(0x081F30D4);
void * const CNWSTrigger__GetDetectDC = reinterpret_cast<void*>(0x081F3188);
void * const CNWSTrigger__GetDisarmable = reinterpret_cast<void*>(0x081F30F8);
void * const CNWSTrigger__GetDisarmDC = reinterpret_cast<void*>(0x081F31AC);
void * const CNWSTrigger__GetFacingPosition = reinterpret_cast<void*>(0x081F2948);
void * const CNWSTrigger__GetFactionId = reinterpret_cast<void*>(0x081F30B0);
void * const CNWSTrigger__GetFirstName = reinterpret_cast<void*>(0x081F3280);
void * const CNWSTrigger__GetFlagged = reinterpret_cast<void*>(0x081F311C);
void * const CNWSTrigger__GetIsAreaTransition = reinterpret_cast<void*>(0x081F2D64);
void * const CNWSTrigger__GetIsTrap = reinterpret_cast<void*>(0x081F308C);
void * const CNWSTrigger__GetKeyName = reinterpret_cast<void*>(0x081F2FFC);
void * const CNWSTrigger__GetLastDisarmed = reinterpret_cast<void*>(0x081F2EB8);
void * const CNWSTrigger__GetLastEntered = reinterpret_cast<void*>(0x081F2E70);
void * const CNWSTrigger__GetLastLeft = reinterpret_cast<void*>(0x081F2E94);
void * const CNWSTrigger__GetLinkedFlags = reinterpret_cast<void*>(0x081F3270);
void * const CNWSTrigger__GetLinkedTo = reinterpret_cast<void*>(0x081F2FBC);
void * const CNWSTrigger__GetLoadScreenID = reinterpret_cast<void*>(0x081F32A4);
void * const CNWSTrigger__GetNumVertices = reinterpret_cast<void*>(0x081F2F10);
void * const CNWSTrigger__GetObjectArrayIndex = reinterpret_cast<void*>(0x081F2EDC);
void * const CNWSTrigger__GetOneShot = reinterpret_cast<void*>(0x081F3164);
void * const CNWSTrigger__GetRecoverable = reinterpret_cast<void*>(0x081F31D0);
void * const CNWSTrigger__GetScriptName = reinterpret_cast<void*>(0x081F2CDC);
void * const CNWSTrigger__GetTargetArea = reinterpret_cast<void*>(0x081F29F8);
void * const CNWSTrigger__GetTriggerHeight = reinterpret_cast<void*>(0x081F3044);
void * const CNWSTrigger__GetVertices = reinterpret_cast<void*>(0x081F2F00);
void * const CNWSTrigger__InTrigger = reinterpret_cast<void*>(0x081EF0A0);
void * const CNWSTrigger__LineSegmentIntersectTrigger = reinterpret_cast<void*>(0x081F2C18);
void * const CNWSTrigger__LoadFromTemplate = reinterpret_cast<void*>(0x081EF2A4);
void * const CNWSTrigger__LoadTrigger = reinterpret_cast<void*>(0x081F0138);
void * const CNWSTrigger__OnEnterTrap = reinterpret_cast<void*>(0x081F25CC);
void * const CNWSTrigger__RemoveFromArea = reinterpret_cast<void*>(0x081F2418);
void * const CNWSTrigger__SaveTrigger = reinterpret_cast<void*>(0x081F1610);
void * const CNWSTrigger__SetActive = reinterpret_cast<void*>(0x081F31E0);
void * const CNWSTrigger__SetAutoRemoveKey = reinterpret_cast<void*>(0x081F3054);
void * const CNWSTrigger__SetBaseType = reinterpret_cast<void*>(0x081F312C);
void * const CNWSTrigger__SetCreator = reinterpret_cast<void*>(0x081F300C);
void * const CNWSTrigger__SetCursor = reinterpret_cast<void*>(0x081F3248);
void * const CNWSTrigger__SetCustomScriptEventId = reinterpret_cast<void*>(0x081F3224);
void * const CNWSTrigger__SetDescriptionOverride = reinterpret_cast<void*>(0x081F2D9C);
void * const CNWSTrigger__SetDetectable = reinterpret_cast<void*>(0x081F30C0);
void * const CNWSTrigger__SetDetectDC = reinterpret_cast<void*>(0x081F3174);
void * const CNWSTrigger__SetDisarmable = reinterpret_cast<void*>(0x081F30E4);
void * const CNWSTrigger__SetDisarmDC = reinterpret_cast<void*>(0x081F3198);
void * const CNWSTrigger__SetFactionId = reinterpret_cast<void*>(0x081F309C);
void * const CNWSTrigger__SetFirstName = reinterpret_cast<void*>(0x081F3290);
void * const CNWSTrigger__SetFlagged = reinterpret_cast<void*>(0x081F3108);
void * const CNWSTrigger__SetIsAreaTransition = reinterpret_cast<void*>(0x081F2E5C);
void * const CNWSTrigger__SetIsTrap = reinterpret_cast<void*>(0x081F3078);
void * const CNWSTrigger__SetKeyName = reinterpret_cast<void*>(0x081F2FE4);
void * const CNWSTrigger__SetLastDisarmed = reinterpret_cast<void*>(0x081F2EC8);
void * const CNWSTrigger__SetLastEntered = reinterpret_cast<void*>(0x081F2E80);
void * const CNWSTrigger__SetLastLeft = reinterpret_cast<void*>(0x081F2EA4);
void * const CNWSTrigger__SetLinkedFlags = reinterpret_cast<void*>(0x081F325C);
void * const CNWSTrigger__SetLinkedTo = reinterpret_cast<void*>(0x081F2F20);
void * const CNWSTrigger__SetObjectArrayIndex = reinterpret_cast<void*>(0x081F2EEC);
void * const CNWSTrigger__SetOneShot = reinterpret_cast<void*>(0x081F3150);
void * const CNWSTrigger__SetRecoverable = reinterpret_cast<void*>(0x081F31BC);
void * const CNWSTrigger__SetScriptName = reinterpret_cast<void*>(0x081F2DF4);
void * const CNWSTrigger__SetTriggerHeight = reinterpret_cast<void*>(0x081F3030);

void * const CNWSWaypoint__CNWSWaypointCtor = reinterpret_cast<void*>(0x081F4648);
void * const CNWSWaypoint__CNWSWaypointDtor = reinterpret_cast<void*>(0x081F46F8);
void * const CNWSWaypoint__AddToArea = reinterpret_cast<void*>(0x081F505C);
void * const CNWSWaypoint__AIUpdate = reinterpret_cast<void*>(0x081F5108);
void * const CNWSWaypoint__AsNWSWaypoint = reinterpret_cast<void*>(0x081F521C);
void * const CNWSWaypoint__EventHandler = reinterpret_cast<void*>(0x081F5110);
void * const CNWSWaypoint__GetFirstName = reinterpret_cast<void*>(0x081F52D4);
void * const CNWSWaypoint__GetIsMapNote = reinterpret_cast<void*>(0x081F5238);
void * const CNWSWaypoint__GetMapNoteEnabled = reinterpret_cast<void*>(0x081F525C);
void * const CNWSWaypoint__GetMapNoteString = reinterpret_cast<void*>(0x081F52C4);
void * const CNWSWaypoint__LoadFromTemplate = reinterpret_cast<void*>(0x081F47A8);
void * const CNWSWaypoint__LoadWaypoint = reinterpret_cast<void*>(0x081F4964);
void * const CNWSWaypoint__RemoveFromArea = reinterpret_cast<void*>(0x081F5150);
void * const CNWSWaypoint__SaveWaypoint = reinterpret_cast<void*>(0x081F4E70);
void * const CNWSWaypoint__SetIsMapNote = reinterpret_cast<void*>(0x081F5224);
void * const CNWSWaypoint__SetMapNoteEnabled = reinterpret_cast<void*>(0x081F5248);
void * const CNWSWaypoint__SetMapNoteString = reinterpret_cast<void*>(0x081F526C);

void * const CNWTile__CNWTileCtor = reinterpret_cast<void*>(0x08086758);
void * const CNWTile__CNWTileDtor = reinterpret_cast<void*>(0x080867EC);
void * const CNWTile__GetAnimLoop = reinterpret_cast<void*>(0x08086A78);
void * const CNWTile__GetHeight = reinterpret_cast<void*>(0x08086B48);
void * const CNWTile__GetID = reinterpret_cast<void*>(0x08086B54);
void * const CNWTile__GetLocation = reinterpret_cast<void*>(0x08086810);
void * const CNWTile__GetMainLightColor = reinterpret_cast<void*>(0x08086A40);
void * const CNWTile__GetModelPosition = reinterpret_cast<void*>(0x08086B28);
void * const CNWTile__GetOrientation = reinterpret_cast<void*>(0x08086B60);
void * const CNWTile__GetReplaceTexture = reinterpret_cast<void*>(0x08086B6C);
void * const CNWTile__GetSourceLightColor = reinterpret_cast<void*>(0x08086A5C);
void * const CNWTile__RotateCanonicalToReal = reinterpret_cast<void*>(0x080868EC);
void * const CNWTile__RotateCanonicalToRealTile = reinterpret_cast<void*>(0x08086834);
void * const CNWTile__RotateRealToCanonical = reinterpret_cast<void*>(0x08086950);
void * const CNWTile__RotateRealToCanonicalTile = reinterpret_cast<void*>(0x08086890);
void * const CNWTile__SetAnimLoop = reinterpret_cast<void*>(0x08086AD4);
void * const CNWTile__SetID = reinterpret_cast<void*>(0x080869B4);
void * const CNWTile__SetMainLightColor = reinterpret_cast<void*>(0x08086A9C);
void * const CNWTile__SetOrientation = reinterpret_cast<void*>(0x08086A30);
void * const CNWTile__SetPosition = reinterpret_cast<void*>(0x080869C4);
void * const CNWTile__SetReplaceTexture = reinterpret_cast<void*>(0x08086AC4);
void * const CNWTile__SetSourceLightColor = reinterpret_cast<void*>(0x08086AB0);

void * const CNWTileData__CNWTileDataCtor = reinterpret_cast<void*>(0x081F52E4);
void * const CNWTileData__CNWTileDataDtor = reinterpret_cast<void*>(0x081F5600);
void * const CNWTileData__AddPropertyMethodString = reinterpret_cast<void*>(0x081F5750);
void * const CNWTileData__GetCornerType = reinterpret_cast<void*>(0x081F59D8);
void * const CNWTileData__GetEdgeType = reinterpret_cast<void*>(0x081F5B00);
void * const CNWTileData__GetMapIcon = reinterpret_cast<void*>(0x081F5B88);
void * const CNWTileData__GetModelResRef = reinterpret_cast<void*>(0x081F5998);
void * const CNWTileData__GetNumDoors = reinterpret_cast<void*>(0x081F5C00);
void * const CNWTileData__GetPropertyMethodStringList = reinterpret_cast<void*>(0x081F597C);
void * const CNWTileData__GetSurfaceMesh = reinterpret_cast<void*>(0x081F5BF4);
void * const CNWTileData__SetCornerType = reinterpret_cast<void*>(0x081F5844);
void * const CNWTileData__SetEdgeType = reinterpret_cast<void*>(0x081F5A60);
void * const CNWTileData__SetMapIcon = reinterpret_cast<void*>(0x081F5BA8);
void * const CNWTileData__SetModelResRef = reinterpret_cast<void*>(0x081F59B8);
void * const CNWTileData__SetNumDoors = reinterpret_cast<void*>(0x081F5C0C);

void * const CNWTileSet__CNWTileSetCtor = reinterpret_cast<void*>(0x08088B70);
void * const CNWTileSet__CNWTileSetDtor = reinterpret_cast<void*>(0x08089EA0);
void * const CNWTileSet__GetCornerType = reinterpret_cast<void*>(0x08089EF0);
void * const CNWTileSet__GetEdgeType = reinterpret_cast<void*>(0x08089F3C);
void * const CNWTileSet__GetEnvMapResRef = reinterpret_cast<void*>(0x08089F88);
void * const CNWTileSet__GetGrassAmbientColor = reinterpret_cast<void*>(0x0808A220);
void * const CNWTileSet__GetGrassDensity = reinterpret_cast<void*>(0x0808A208);
void * const CNWTileSet__GetGrassDiffuseColor = reinterpret_cast<void*>(0x0808A240);
void * const CNWTileSet__GetGrassHeight = reinterpret_cast<void*>(0x0808A214);
void * const CNWTileSet__GetGrassTexture = reinterpret_cast<void*>(0x0808A260);
void * const CNWTileSet__GetHasGrass = reinterpret_cast<void*>(0x0808A1FC);
void * const CNWTileSet__GetHeightTransition = reinterpret_cast<void*>(0x08089FA8);
void * const CNWTileSet__GetTileData = reinterpret_cast<void*>(0x08088CF8);
void * const CNWTileSet__GetTileSetName = reinterpret_cast<void*>(0x0808A1DC);
void * const CNWTileSet__LoadTileSet = reinterpret_cast<void*>(0x08088DD8);
void * const CNWTileSet__ParseLine = reinterpret_cast<void*>(0x0808990C);
void * const CNWTileSet__SetTileValue = reinterpret_cast<void*>(0x08089AB0);
void * const CNWTileSet__UnloadTileSet = reinterpret_cast<void*>(0x08089FB4);

void * const CNWTileSetManager__CNWTileSetManagerCtor = reinterpret_cast<void*>(0x080888F8);
void * const CNWTileSetManager__CNWTileSetManagerDtor = reinterpret_cast<void*>(0x0808892C);
void * const CNWTileSetManager__ClearTilePathNodes = reinterpret_cast<void*>(0x08086CBC);
void * const CNWTileSetManager__ComputePathNodeInformation = reinterpret_cast<void*>(0x08086D70);
void * const CNWTileSetManager__ComputePathNodeRotation = reinterpret_cast<void*>(0x08088AC0);
void * const CNWTileSetManager__GetTilePathNode = reinterpret_cast<void*>(0x08088A44);
void * const CNWTileSetManager__InitializeTilePathNodes = reinterpret_cast<void*>(0x08088A10);
void * const CNWTileSetManager__RegisterTileSet = reinterpret_cast<void*>(0x08086BA4);
void * const CNWTileSetManager__UnregisterTileSet = reinterpret_cast<void*>(0x080889A8);

void * const CNWTileSurfaceMesh__CNWTileSurfaceMeshCtor = reinterpret_cast<void*>(0x0808A37C);
void * const CNWTileSurfaceMesh__CNWTileSurfaceMeshDtor = reinterpret_cast<void*>(0x0808A558);
void * const CNWTileSurfaceMesh__CheckAABBNode = reinterpret_cast<void*>(0x0808B6C0);
void * const CNWTileSurfaceMesh__CheckAABBNodeOneWay = reinterpret_cast<void*>(0x0808BBCC);
void * const CNWTileSurfaceMesh__ClearLineOfSight = reinterpret_cast<void*>(0x08093540);
void * const CNWTileSurfaceMesh__ClearLineOfSightOneWay = reinterpret_cast<void*>(0x080935B0);
void * const CNWTileSurfaceMesh__ClearSubdivision = reinterpret_cast<void*>(0x0808B5FC);
void * const CNWTileSurfaceMesh__ClippedLineSegmentWalkable = reinterpret_cast<void*>(0x0808A790);
void * const CNWTileSurfaceMesh__ComputeClippedLineSegment = reinterpret_cast<void*>(0x0808AFCC);
void * const CNWTileSurfaceMesh__ComputeHeight = reinterpret_cast<void*>(0x0808B410);
void * const CNWTileSurfaceMesh__ComputePathNodes = reinterpret_cast<void*>(0x08093620);
void * const CNWTileSurfaceMesh__ComputeTriangleAdjacency = reinterpret_cast<void*>(0x0808BD98);
void * const CNWTileSurfaceMesh__ConvertToTileOrientation = reinterpret_cast<void*>(0x08093E64);
void * const CNWTileSurfaceMesh__EstimateDistanceToTarget = reinterpret_cast<void*>(0x08093680);
void * const CNWTileSurfaceMesh__FindClosestRegion = reinterpret_cast<void*>(0x0808C1E8);
void * const CNWTileSurfaceMesh__FindRegionViaTriangle = reinterpret_cast<void*>(0x0808C3F4);
void * const CNWTileSurfaceMesh__FindTriangle = reinterpret_cast<void*>(0x0808C4E0);
void * const CNWTileSurfaceMesh__GenerateBestIntraTileExit = reinterpret_cast<void*>(0x0808C788);
void * const CNWTileSurfaceMesh__GetDoorVisNode = reinterpret_cast<void*>(0x0809424C);
void * const CNWTileSurfaceMesh__GetDoorVisNodeOrientation = reinterpret_cast<void*>(0x08094264);
void * const CNWTileSurfaceMesh__GetExit = reinterpret_cast<void*>(0x08093718);
void * const CNWTileSurfaceMesh__GetExitNumber = reinterpret_cast<void*>(0x0808D6C0);
void * const CNWTileSurfaceMesh__GetLOSMaterials = reinterpret_cast<void*>(0x0808A6D0);
void * const CNWTileSurfaceMesh__GetNumTriangles = reinterpret_cast<void*>(0x08094104);
void * const CNWTileSurfaceMesh__GetPathNode = reinterpret_cast<void*>(0x08093794);
void * const CNWTileSurfaceMesh__GetPathNodeOrientation = reinterpret_cast<void*>(0x080937A0);
void * const CNWTileSurfaceMesh__GetRegionCoords = reinterpret_cast<void*>(0x080937AC);
void * const CNWTileSurfaceMesh__GetRegionEntrance = reinterpret_cast<void*>(0x0809380C);
void * const CNWTileSurfaceMesh__GetSurfaceMaterial = reinterpret_cast<void*>(0x080934EC);
void * const CNWTileSurfaceMesh__GetTopLevelVertexGeometry = reinterpret_cast<void*>(0x080938CC);
void * const CNWTileSurfaceMesh__GetTotalExits = reinterpret_cast<void*>(0x0809392C);
void * const CNWTileSurfaceMesh__GetTriangleAdjacency = reinterpret_cast<void*>(0x08093958);
void * const CNWTileSurfaceMesh__GetTriangleCentroid = reinterpret_cast<void*>(0x080939C0);
void * const CNWTileSurfaceMesh__GetTriangleVertices = reinterpret_cast<void*>(0x08093A44);
void * const CNWTileSurfaceMesh__GetVertexGeometry__0 = reinterpret_cast<void*>(0x08093AA4);
void * const CNWTileSurfaceMesh__GetVertexGeometry__1 = reinterpret_cast<void*>(0x08093AE0);
void * const CNWTileSurfaceMesh__GetVisibilityNode = reinterpret_cast<void*>(0x08094240);
void * const CNWTileSurfaceMesh__GetVisibilityNodeOrientation = reinterpret_cast<void*>(0x08094258);
void * const CNWTileSurfaceMesh__GetWalkMesh = reinterpret_cast<void*>(0x08093B18);
void * const CNWTileSurfaceMesh__GetWalkTileHashTable = reinterpret_cast<void*>(0x08094110);
void * const CNWTileSurfaceMesh__IntersectLineSegments = reinterpret_cast<void*>(0x0808D818);
void * const CNWTileSurfaceMesh__IntraTileDFS = reinterpret_cast<void*>(0x0808DCFC);
void * const CNWTileSurfaceMesh__IntraTileDFSGenerateSuccessors = reinterpret_cast<void*>(0x0808E1CC);
void * const CNWTileSurfaceMesh__LoadDefaultWalkMesh = reinterpret_cast<void*>(0x0808FD50);
void * const CNWTileSurfaceMesh__LoadWalkMesh = reinterpret_cast<void*>(0x08090134);
void * const CNWTileSurfaceMesh__LoadWalkMeshString = reinterpret_cast<void*>(0x08093DDC);
void * const CNWTileSurfaceMesh__NoNonWalkPolysOnTile = reinterpret_cast<void*>(0x08092148);
void * const CNWTileSurfaceMesh__PlotIntraTilePath = reinterpret_cast<void*>(0x080929E8);
void * const CNWTileSurfaceMesh__PolyHit = reinterpret_cast<void*>(0x0808B940);
void * const CNWTileSurfaceMesh__PrintAABBTreeToPrintLog = reinterpret_cast<void*>(0x0808FFDC);
void * const CNWTileSurfaceMesh__RunSubdivision = reinterpret_cast<void*>(0x08092F88);
void * const CNWTileSurfaceMesh__SetDoorVisNode = reinterpret_cast<void*>(0x08094130);
void * const CNWTileSurfaceMesh__SetDoorVisNodeOrientation = reinterpret_cast<void*>(0x080941C0);
void * const CNWTileSurfaceMesh__SetPathNode = reinterpret_cast<void*>(0x08093E54);
void * const CNWTileSurfaceMesh__SetPathNodeOrientation = reinterpret_cast<void*>(0x08094270);
void * const CNWTileSurfaceMesh__SetVisibilityNode = reinterpret_cast<void*>(0x08094120);
void * const CNWTileSurfaceMesh__SetVisibilityNodeOrientation = reinterpret_cast<void*>(0x08094140);
void * const CNWTileSurfaceMesh__SetWalkMesh = reinterpret_cast<void*>(0x08093ED8);
void * const CNWTileSurfaceMesh__SetWalkTileHashTable = reinterpret_cast<void*>(0x080942F0);
void * const CNWTileSurfaceMesh__Subdivide = reinterpret_cast<void*>(0x0809329C);
void * const CNWTileSurfaceMesh__TestLineForWalkableOnArea = reinterpret_cast<void*>(0x08093CB0);
void * const CNWTileSurfaceMesh__TestLineForWalkableOnTile = reinterpret_cast<void*>(0x08093B38);

void * const CNWTileSurfaceMeshAABBNode__CNWTileSurfaceMeshAABBNodeDtor = reinterpret_cast<void*>(0x08094080);

void * const CNWTileSurfaceMeshHashTableEntry__CNWTileSurfaceMeshHashTableEntryCtor = reinterpret_cast<void*>(0x08093478);
void * const CNWTileSurfaceMeshHashTableEntry__Fetch = reinterpret_cast<void*>(0x0809349C);
void * const CNWTileSurfaceMeshHashTableEntry__Store = reinterpret_cast<void*>(0x080934C0);

void * const CNWVirtualMachineCommands__CNWVirtualMachineCommandsDtor = reinterpret_cast<void*>(0x082319E4);
void * const CNWVirtualMachineCommands__CopyGameDefinedStructure = reinterpret_cast<void*>(0x081FB82C);
void * const CNWVirtualMachineCommands__CreateGameDefinedStructure = reinterpret_cast<void*>(0x081FBC2C);
void * const CNWVirtualMachineCommands__DebugGUIGetMessageFrom = reinterpret_cast<void*>(0x08231C8C);
void * const CNWVirtualMachineCommands__DebugGUISendMessageTo = reinterpret_cast<void*>(0x08231C5C);
void * const CNWVirtualMachineCommands__DebugGUIStart = reinterpret_cast<void*>(0x081FD150);
void * const CNWVirtualMachineCommands__DebugGUIStop = reinterpret_cast<void*>(0x08231C2C);
void * const CNWVirtualMachineCommands__DebugGUIUpdate = reinterpret_cast<void*>(0x08231CEC);
void * const CNWVirtualMachineCommands__DestroyGameDefinedStructure = reinterpret_cast<void*>(0x08231B28);
void * const CNWVirtualMachineCommands__ExecuteCommand = reinterpret_cast<void*>(0x08231A34);
void * const CNWVirtualMachineCommands__ExecuteCommandActionCounterSpell = reinterpret_cast<void*>(0x08235484);
void * const CNWVirtualMachineCommands__ExecuteCommandActionDoCommand = reinterpret_cast<void*>(0x082331E8);
void * const CNWVirtualMachineCommands__ExecuteCommandActionEquipMostDamagingMelee = reinterpret_cast<void*>(0x08233E0C);
void * const CNWVirtualMachineCommands__ExecuteCommandActionEquipMostDamagingRanged = reinterpret_cast<void*>(0x08233E98);
void * const CNWVirtualMachineCommands__ExecuteCommandActionEquipMostEffectiveArmor = reinterpret_cast<void*>(0x08233F7C);
void * const CNWVirtualMachineCommands__ExecuteCommandActionExamine = reinterpret_cast<void*>(0x08235FD4);
void * const CNWVirtualMachineCommands__ExecuteCommandActionExchangeItem = reinterpret_cast<void*>(0x082113B8);
void * const CNWVirtualMachineCommands__ExecuteCommandActionFollowObject = reinterpret_cast<void*>(0x0820AB20);
void * const CNWVirtualMachineCommands__ExecuteCommandActionInteractObject = reinterpret_cast<void*>(0x08233690);
void * const CNWVirtualMachineCommands__ExecuteCommandActionJumpToObject = reinterpret_cast<void*>(0x081FF804);
void * const CNWVirtualMachineCommands__ExecuteCommandActionJumpToPoint = reinterpret_cast<void*>(0x081FF91C);
void * const CNWVirtualMachineCommands__ExecuteCommandActionLockActions = reinterpret_cast<void*>(0x082346D4);
void * const CNWVirtualMachineCommands__ExecuteCommandActionMoveAwayFromLocation = reinterpret_cast<void*>(0x08215BFC);
void * const CNWVirtualMachineCommands__ExecuteCommandActionPauseConversation = reinterpret_cast<void*>(0x08232C00);
void * const CNWVirtualMachineCommands__ExecuteCommandActionRandomWalk = reinterpret_cast<void*>(0x081FE9B4);
void * const CNWVirtualMachineCommands__ExecuteCommandActionRest = reinterpret_cast<void*>(0x08233F08);
void * const CNWVirtualMachineCommands__ExecuteCommandActionResumeConversation = reinterpret_cast<void*>(0x08232C90);
void * const CNWVirtualMachineCommands__ExecuteCommandActionSit = reinterpret_cast<void*>(0x08234EEC);
void * const CNWVirtualMachineCommands__ExecuteCommandActionStartConversation = reinterpret_cast<void*>(0x0820D030);
void * const CNWVirtualMachineCommands__ExecuteCommandActionUseFeat = reinterpret_cast<void*>(0x08212B6C);
void * const CNWVirtualMachineCommands__ExecuteCommandActionUseSkill = reinterpret_cast<void*>(0x08212C4C);
void * const CNWVirtualMachineCommands__ExecuteCommandActionUseTalent = reinterpret_cast<void*>(0x08213738);
void * const CNWVirtualMachineCommands__ExecuteCommandActivatePortal = reinterpret_cast<void*>(0x08219F08);
void * const CNWVirtualMachineCommands__ExecuteCommandAddItemProperty = reinterpret_cast<void*>(0x08226FC4);
void * const CNWVirtualMachineCommands__ExecuteCommandAddJournalQuestEntry = reinterpret_cast<void*>(0x082164B0);
void * const CNWVirtualMachineCommands__ExecuteCommandAddToParty = reinterpret_cast<void*>(0x0821F21C);
void * const CNWVirtualMachineCommands__ExecuteCommandAdjustAlignment = reinterpret_cast<void*>(0x08211D3C);
void * const CNWVirtualMachineCommands__ExecuteCommandAdjustReputation = reinterpret_cast<void*>(0x0820D628);
void * const CNWVirtualMachineCommands__ExecuteCommandAmbientSound = reinterpret_cast<void*>(0x082193A0);
void * const CNWVirtualMachineCommands__ExecuteCommandApplyEffectAtPoint = reinterpret_cast<void*>(0x0820DA10);
void * const CNWVirtualMachineCommands__ExecuteCommandApplyEffectOnObject = reinterpret_cast<void*>(0x0820DB94);
void * const CNWVirtualMachineCommands__ExecuteCommandAssignCommand = reinterpret_cast<void*>(0x081FDC8C);
void * const CNWVirtualMachineCommands__ExecuteCommandAssociateAccess = reinterpret_cast<void*>(0x08216330);
void * const CNWVirtualMachineCommands__ExecuteCommandAttack = reinterpret_cast<void*>(0x082321E8);
void * const CNWVirtualMachineCommands__ExecuteCommandBeginConversation = reinterpret_cast<void*>(0x08210150);
void * const CNWVirtualMachineCommands__ExecuteCommandBlackScreen = reinterpret_cast<void*>(0x08235A9C);
void * const CNWVirtualMachineCommands__ExecuteCommandBootPC = reinterpret_cast<void*>(0x08235404);
void * const CNWVirtualMachineCommands__ExecuteCommandCastSpell = reinterpret_cast<void*>(0x081FED80);
void * const CNWVirtualMachineCommands__ExecuteCommandChangeFaction = reinterpret_cast<void*>(0x0820B704);
void * const CNWVirtualMachineCommands__ExecuteCommandClearAllActions = reinterpret_cast<void*>(0x081FDF94);
void * const CNWVirtualMachineCommands__ExecuteCommandCloseDoor = reinterpret_cast<void*>(0x08203304);
void * const CNWVirtualMachineCommands__ExecuteCommandCopyItem = reinterpret_cast<void*>(0x0821FCB0);
void * const CNWVirtualMachineCommands__ExecuteCommandCopyItemAndModify = reinterpret_cast<void*>(0x0821FFE8);
void * const CNWVirtualMachineCommands__ExecuteCommandCopyObject = reinterpret_cast<void*>(0x08229E4C);
void * const CNWVirtualMachineCommands__ExecuteCommandCreateItemOnObject = reinterpret_cast<void*>(0x082007E4);
void * const CNWVirtualMachineCommands__ExecuteCommandCreateObject = reinterpret_cast<void*>(0x0820E908);
void * const CNWVirtualMachineCommands__ExecuteCommandCreateTrapAtLocation = reinterpret_cast<void*>(0x0822E05C);
void * const CNWVirtualMachineCommands__ExecuteCommandCreateTrapOnObject = reinterpret_cast<void*>(0x0822EAA0);
void * const CNWVirtualMachineCommands__ExecuteCommandDayNightCycle = reinterpret_cast<void*>(0x0822B548);
void * const CNWVirtualMachineCommands__ExecuteCommandDecrementFeatUses = reinterpret_cast<void*>(0x0821F584);
void * const CNWVirtualMachineCommands__ExecuteCommandDecrementSpellUses = reinterpret_cast<void*>(0x0821F650);
void * const CNWVirtualMachineCommands__ExecuteCommandDelayCommand = reinterpret_cast<void*>(0x081FDD44);
void * const CNWVirtualMachineCommands__ExecuteCommandDeleteCampaignVariable = reinterpret_cast<void*>(0x08224DC4);
void * const CNWVirtualMachineCommands__ExecuteCommandDeleteVar = reinterpret_cast<void*>(0x082115C4);
void * const CNWVirtualMachineCommands__ExecuteCommandDestroyCampaignDatabase = reinterpret_cast<void*>(0x08222B94);
void * const CNWVirtualMachineCommands__ExecuteCommandDestroyObject = reinterpret_cast<void*>(0x0820E84C);
void * const CNWVirtualMachineCommands__ExecuteCommandDistanceConversions = reinterpret_cast<void*>(0x08232E98);
void * const CNWVirtualMachineCommands__ExecuteCommandDoDoorAction = reinterpret_cast<void*>(0x082146B0);
void * const CNWVirtualMachineCommands__ExecuteCommandDoSinglePlayerAutoSave = reinterpret_cast<void*>(0x0821CD90);
void * const CNWVirtualMachineCommands__ExecuteCommandDoTouchAttack = reinterpret_cast<void*>(0x08209E94);
void * const CNWVirtualMachineCommands__ExecuteCommandDoWhirlwindAttack = reinterpret_cast<void*>(0x08229460);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAbilityDecrease = reinterpret_cast<void*>(0x0820579C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAbilityIncrease = reinterpret_cast<void*>(0x08205654);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectACDecrease = reinterpret_cast<void*>(0x08207548);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectACIncrease = reinterpret_cast<void*>(0x082073B8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAppear = reinterpret_cast<void*>(0x0821B304);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAreaEffect = reinterpret_cast<void*>(0x0820B27C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAttackDecrease = reinterpret_cast<void*>(0x08207C34);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectAttackIncrease = reinterpret_cast<void*>(0x08207ADC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectBeam = reinterpret_cast<void*>(0x0820D2A4);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectBlindness = reinterpret_cast<void*>(0x0821B038);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectComplex = reinterpret_cast<void*>(0x082092FC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectConcealment = reinterpret_cast<void*>(0x0821ABAC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectCutsceneGhost = reinterpret_cast<void*>(0x08236598);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamage = reinterpret_cast<void*>(0x08205458);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageDecrease = reinterpret_cast<void*>(0x082080A0);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageImmunityDecrease = reinterpret_cast<void*>(0x082124D8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageImmunityIncrease = reinterpret_cast<void*>(0x082123A8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageIncrease = reinterpret_cast<void*>(0x08207F18);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageReduction = reinterpret_cast<void*>(0x08207D8C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageResistance = reinterpret_cast<void*>(0x0820717C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDamageShield = reinterpret_cast<void*>(0x0821B86C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDarkness = reinterpret_cast<void*>(0x0821AD04);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDisappear = reinterpret_cast<void*>(0x0821B22C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDisappearAppear = reinterpret_cast<void*>(0x0821B0E8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectDisease = reinterpret_cast<void*>(0x08210078);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectEthereal = reinterpret_cast<void*>(0x08229D6C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectHeal = reinterpret_cast<void*>(0x08205318);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectHitPointChangeWhenDying = reinterpret_cast<void*>(0x08218534);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectImmunity = reinterpret_cast<void*>(0x08211EF4);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectInvisibility = reinterpret_cast<void*>(0x0821A584);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectLinkEffects = reinterpret_cast<void*>(0x0821148C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectMissChance = reinterpret_cast<void*>(0x0821AE4C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectModifyAttacks = reinterpret_cast<void*>(0x0821B3DC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectMovementSpeedDecrease = reinterpret_cast<void*>(0x0820A94C);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectMovementSpeedIncrease = reinterpret_cast<void*>(0x0820A830);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectNegativeLevel = reinterpret_cast<void*>(0x0821B734);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectPetrify = reinterpret_cast<void*>(0x0821FBCC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectPoison = reinterpret_cast<void*>(0x0820FFA0);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectResurrection = reinterpret_cast<void*>(0x082058E4);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSanctuary = reinterpret_cast<void*>(0x0821A440);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSavingThrowDecrease = reinterpret_cast<void*>(0x08207958);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSavingThrowIncrease = reinterpret_cast<void*>(0x082077D4);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSeeInvisible = reinterpret_cast<void*>(0x0821AF94);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSkillDecrease = reinterpret_cast<void*>(0x082161BC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSkillIncrease = reinterpret_cast<void*>(0x08216048);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSpellFailure = reinterpret_cast<void*>(0x08228B10);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSpellImmunity = reinterpret_cast<void*>(0x0821B4CC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSpellLevelAbsorption = reinterpret_cast<void*>(0x0821B5CC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSpellResistanceDecrease = reinterpret_cast<void*>(0x0820D7D8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSpellResistanceIncrease = reinterpret_cast<void*>(0x0820D700);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSummonCreature = reinterpret_cast<void*>(0x082059BC);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectSwarm = reinterpret_cast<void*>(0x0821C878);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectTemporaryHP = reinterpret_cast<void*>(0x082139E0);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectTrueSeeing = reinterpret_cast<void*>(0x0821ADA8);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectTurnResistance = reinterpret_cast<void*>(0x0821E8E4);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectUltravision = reinterpret_cast<void*>(0x0821CE58);
void * const CNWVirtualMachineCommands__ExecuteCommandEffectVisualEffect = reinterpret_cast<void*>(0x0820BD38);
void * const CNWVirtualMachineCommands__ExecuteCommandEndGame = reinterpret_cast<void*>(0x08234DA8);
void * const CNWVirtualMachineCommands__ExecuteCommandEquipItem = reinterpret_cast<void*>(0x082010A8);
void * const CNWVirtualMachineCommands__ExecuteCommandEventActivateItem = reinterpret_cast<void*>(0x0821907C);
void * const CNWVirtualMachineCommands__ExecuteCommandEventConversation = reinterpret_cast<void*>(0x08233264);
void * const CNWVirtualMachineCommands__ExecuteCommandEventSpellCastAt = reinterpret_cast<void*>(0x0820F85C);
void * const CNWVirtualMachineCommands__ExecuteCommandEventUserDefined = reinterpret_cast<void*>(0x082099EC);
void * const CNWVirtualMachineCommands__ExecuteCommandExecuteScript = reinterpret_cast<void*>(0x081FDE94);
void * const CNWVirtualMachineCommands__ExecuteCommandExploreAreaForPlayer = reinterpret_cast<void*>(0x08218E40);
void * const CNWVirtualMachineCommands__ExecuteCommandExportAllCharacters = reinterpret_cast<void*>(0x082351D8);
void * const CNWVirtualMachineCommands__ExecuteCommandExportSingleCharacter = reinterpret_cast<void*>(0x082351F4);
void * const CNWVirtualMachineCommands__ExecuteCommandFindSubString = reinterpret_cast<void*>(0x08204EB8);
void * const CNWVirtualMachineCommands__ExecuteCommandFloatingText = reinterpret_cast<void*>(0x0821D6AC);
void * const CNWVirtualMachineCommands__ExecuteCommandFloatToInt = reinterpret_cast<void*>(0x08232F7C);
void * const CNWVirtualMachineCommands__ExecuteCommandFloatToString = reinterpret_cast<void*>(0x0820A368);
void * const CNWVirtualMachineCommands__ExecuteCommandForceRest = reinterpret_cast<void*>(0x0822BDAC);
void * const CNWVirtualMachineCommands__ExecuteCommandGet2DAString = reinterpret_cast<void*>(0x08229A7C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAbilityModifier = reinterpret_cast<void*>(0x082142F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAbilityScore = reinterpret_cast<void*>(0x08211844);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAC = reinterpret_cast<void*>(0x082076D8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetActionMode = reinterpret_cast<void*>(0x081FE228);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAge = reinterpret_cast<void*>(0x0823486C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAILevel = reinterpret_cast<void*>(0x08235DD4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAlignment = reinterpret_cast<void*>(0x08208228);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAnimalCompanionCreatureType = reinterpret_cast<void*>(0x082349D8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAnimalCompanionName = reinterpret_cast<void*>(0x0821C59C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAOEObjectCreator = reinterpret_cast<void*>(0x08211794);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAppearanceType = reinterpret_cast<void*>(0x0821F4AC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetArcaneSpellFailure = reinterpret_cast<void*>(0x0822B3F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetArea = reinterpret_cast<void*>(0x081FFFB4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAreaSize = reinterpret_cast<void*>(0x0822F948);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAssociate = reinterpret_cast<void*>(0x08215F58);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAssociateType = reinterpret_cast<void*>(0x082363C0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAttackTarget = reinterpret_cast<void*>(0x08233400);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAttemptedAttackTarget = reinterpret_cast<void*>(0x08233B64);
void * const CNWVirtualMachineCommands__ExecuteCommandGetAttemptedSpellTarget = reinterpret_cast<void*>(0x08233BBC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetBaseAttackBonus = reinterpret_cast<void*>(0x08235B00);
void * const CNWVirtualMachineCommands__ExecuteCommandGetBaseItemType = reinterpret_cast<void*>(0x08233D98);
void * const CNWVirtualMachineCommands__ExecuteCommandGetBattleTrack = reinterpret_cast<void*>(0x082354DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetBlockingDoor = reinterpret_cast<void*>(0x08233858);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCalendarDay = reinterpret_cast<void*>(0x08231E24);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCalendarMonth = reinterpret_cast<void*>(0x08231DC4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCalendarYear = reinterpret_cast<void*>(0x08231D64);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCampaignFloat = reinterpret_cast<void*>(0x08222C80);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCampaignInt = reinterpret_cast<void*>(0x082232AC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCampaignLocation = reinterpret_cast<void*>(0x08223F50);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCampaignString = reinterpret_cast<void*>(0x082246B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCampaignVector = reinterpret_cast<void*>(0x082238CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCasterLevel = reinterpret_cast<void*>(0x08205C40);
void * const CNWVirtualMachineCommands__ExecuteCommandGetChallengeRating = reinterpret_cast<void*>(0x082347F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetClassInformation = reinterpret_cast<void*>(0x08215080);
void * const CNWVirtualMachineCommands__ExecuteCommandGetColor = reinterpret_cast<void*>(0x08231634);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCommandable = reinterpret_cast<void*>(0x08232978);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureBodyPart = reinterpret_cast<void*>(0x0822CB90);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureHasTalent = reinterpret_cast<void*>(0x0821349C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureSize = reinterpret_cast<void*>(0x08234660);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureTailType = reinterpret_cast<void*>(0x0822CF84);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureTalent = reinterpret_cast<void*>(0x0821355C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCreatureWingType = reinterpret_cast<void*>(0x0822C96C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCurrentAction = reinterpret_cast<void*>(0x0821D320);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCutsceneCameraMoveRate = reinterpret_cast<void*>(0x082360DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetCutsceneMode = reinterpret_cast<void*>(0x08228E3C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDamageDealtByType = reinterpret_cast<void*>(0x08215220);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDayTrack = reinterpret_cast<void*>(0x08235278);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDeity = reinterpret_cast<void*>(0x0821BC24);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDescription = reinterpret_cast<void*>(0x082302DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDialogSoundLength = reinterpret_cast<void*>(0x08228EE8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDistanceBetween = reinterpret_cast<void*>(0x0820A580);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDistanceBetweenLocations = reinterpret_cast<void*>(0x08212F94);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDistanceToObject = reinterpret_cast<void*>(0x082030A0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetDroppableFlag = reinterpret_cast<void*>(0x08235590);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffect = reinterpret_cast<void*>(0x08205E54);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffectCreator = reinterpret_cast<void*>(0x08232694);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffectDurationType = reinterpret_cast<void*>(0x0823253C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffectSpellId = reinterpret_cast<void*>(0x082332DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffectSubType = reinterpret_cast<void*>(0x082325B0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEffectType = reinterpret_cast<void*>(0x08232624);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEmotions = reinterpret_cast<void*>(0x0820E1A4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEncounterData = reinterpret_cast<void*>(0x0821260C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetEnteringObject = reinterpret_cast<void*>(0x08200100);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFacing = reinterpret_cast<void*>(0x0820056C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageGoodEvilAlignment = reinterpret_cast<void*>(0x0820C38C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageLawChaosAlignment = reinterpret_cast<void*>(0x0820C440);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageLevel = reinterpret_cast<void*>(0x0820C4F4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageReputation = reinterpret_cast<void*>(0x0820C2BC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionAverageXP = reinterpret_cast<void*>(0x0820C5A8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionBestAC = reinterpret_cast<void*>(0x0820C7F4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionEqual = reinterpret_cast<void*>(0x0820B654);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionGold = reinterpret_cast<void*>(0x0820C208);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionLeader = reinterpret_cast<void*>(0x08235368);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionLeastDamagedMember = reinterpret_cast<void*>(0x0820C124);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionMember = reinterpret_cast<void*>(0x082182CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionMostDamagedMember = reinterpret_cast<void*>(0x0820C040);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionMostFrequentClass = reinterpret_cast<void*>(0x0820C65C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionNthNearestMember = reinterpret_cast<void*>(0x08232BF8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionStrongestMember = reinterpret_cast<void*>(0x0820BF5C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionWeakestMember = reinterpret_cast<void*>(0x0820BE78);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFactionWorstAC = reinterpret_cast<void*>(0x0820C710);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFamiliarCreatureType = reinterpret_cast<void*>(0x0823495C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFamiliarName = reinterpret_cast<void*>(0x0821C44C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFogAmount = reinterpret_cast<void*>(0x0822C600);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFogColor = reinterpret_cast<void*>(0x0822C308);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFootstepType = reinterpret_cast<void*>(0x0822C750);
void * const CNWVirtualMachineCommands__ExecuteCommandGetFortitudeSavingThrow = reinterpret_cast<void*>(0x0821C14C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetGameDifficulty = reinterpret_cast<void*>(0x08234E64);
void * const CNWVirtualMachineCommands__ExecuteCommandGetGoingToBeAttackedBy = reinterpret_cast<void*>(0x08234FB8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetGold = reinterpret_cast<void*>(0x08218F18);
void * const CNWVirtualMachineCommands__ExecuteCommandGetGoldPieceValue = reinterpret_cast<void*>(0x08233348);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHardness = reinterpret_cast<void*>(0x0822D1A8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasFeat = reinterpret_cast<void*>(0x08212874);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasFeatEffect = reinterpret_cast<void*>(0x0821E74C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasInventory = reinterpret_cast<void*>(0x0821F130);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasSkill = reinterpret_cast<void*>(0x08212984);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasSpell = reinterpret_cast<void*>(0x08217E70);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHasSpellEffect = reinterpret_cast<void*>(0x082133DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHenchman = reinterpret_cast<void*>(0x08215688);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHitDice = reinterpret_cast<void*>(0x0820AA68);
void * const CNWVirtualMachineCommands__ExecuteCommandGetHitpoints = reinterpret_cast<void*>(0x08203B60);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIdentified = reinterpret_cast<void*>(0x08233704);
void * const CNWVirtualMachineCommands__ExecuteCommandGetImmortal = reinterpret_cast<void*>(0x08235D64);
void * const CNWVirtualMachineCommands__ExecuteCommandGetInfiniteFlag = reinterpret_cast<void*>(0x082369B0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetInPersistentObject = reinterpret_cast<void*>(0x08210850);
void * const CNWVirtualMachineCommands__ExecuteCommandGetInventoryDisturbItem = reinterpret_cast<void*>(0x082339E8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetInventoryDisturbType = reinterpret_cast<void*>(0x08233964);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsAreaAboveGround = reinterpret_cast<void*>(0x08234C6C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsAreaInterior = reinterpret_cast<void*>(0x08235EBC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsAreaNatural = reinterpret_cast<void*>(0x08234BEC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsCreatureDisarmable = reinterpret_cast<void*>(0x0822BCF8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsDawn = reinterpret_cast<void*>(0x08234060);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsDay = reinterpret_cast<void*>(0x08233FB0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsDMPossessed = reinterpret_cast<void*>(0x08232E10);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsDoorActionPossible = reinterpret_cast<void*>(0x082143EC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsDusk = reinterpret_cast<void*>(0x082340B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsEncounterCreature = reinterpret_cast<void*>(0x08234110);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsImmune = reinterpret_cast<void*>(0x08211FF4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsInCombat = reinterpret_cast<void*>(0x082334EC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsInTrigger = reinterpret_cast<void*>(0x0822BC58);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsNight = reinterpret_cast<void*>(0x08234008);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsOpen = reinterpret_cast<void*>(0x08219708);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsPossessedFamiliar = reinterpret_cast<void*>(0x08235E40);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsRacialTypePlayable = reinterpret_cast<void*>(0x082138DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsReactionType = reinterpret_cast<void*>(0x08219DE8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsResting = reinterpret_cast<void*>(0x08234A54);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsSkillSuccessful = reinterpret_cast<void*>(0x082286D4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsTalentValid = reinterpret_cast<void*>(0x08233AF4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsTrapped = reinterpret_cast<void*>(0x0821E80C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetIsWeaponEffective = reinterpret_cast<void*>(0x08234330);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemACValue = reinterpret_cast<void*>(0x08218D94);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemAppearance = reinterpret_cast<void*>(0x0822098C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemCharges = reinterpret_cast<void*>(0x0823582C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemCursedFlag = reinterpret_cast<void*>(0x082361F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemHasItemProperty = reinterpret_cast<void*>(0x08218CA4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemInInventory = reinterpret_cast<void*>(0x082149B4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemInSlot = reinterpret_cast<void*>(0x0820A698);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemPossessedBy = reinterpret_cast<void*>(0x08200CC8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemPossessor = reinterpret_cast<void*>(0x082006CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemProperty = reinterpret_cast<void*>(0x08227378);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyDurationType = reinterpret_cast<void*>(0x082359A8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyInfo = reinterpret_cast<void*>(0x082275DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemPropertyType = reinterpret_cast<void*>(0x0823591C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetItemStackSize = reinterpret_cast<void*>(0x082357B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetJournalQuestExperience = reinterpret_cast<void*>(0x08217B94);
void * const CNWVirtualMachineCommands__ExecuteCommandGetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x0822F4CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastAssociateCommand = reinterpret_cast<void*>(0x0823355C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastAttacker = reinterpret_cast<void*>(0x08232144);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastAttackMode = reinterpret_cast<void*>(0x08213C84);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastAttackType = reinterpret_cast<void*>(0x08213B0C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastClosedBy = reinterpret_cast<void*>(0x0821EDCC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastDamager = reinterpret_cast<void*>(0x082338B0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastDisarmed = reinterpret_cast<void*>(0x082153A4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastDisturbed = reinterpret_cast<void*>(0x08215474);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastEquipped = reinterpret_cast<void*>(0x08235F3C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastHostileActor = reinterpret_cast<void*>(0x0821E9E0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastKiller = reinterpret_cast<void*>(0x082343CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastLocked = reinterpret_cast<void*>(0x08215520);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastOpenedBy = reinterpret_cast<void*>(0x08214224);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastPCRested = reinterpret_cast<void*>(0x08234AD0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastPerceived = reinterpret_cast<void*>(0x0823315C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastPerception = reinterpret_cast<void*>(0x0821055C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastRestEventType = reinterpret_cast<void*>(0x08234B24);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastSpeaker = reinterpret_cast<void*>(0x082330CC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastSpellCastClass = reinterpret_cast<void*>(0x0822B8E4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastTrapDetected = reinterpret_cast<void*>(0x0823477C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastUnlocked = reinterpret_cast<void*>(0x082155D4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastUsedBy = reinterpret_cast<void*>(0x0821415C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLastWeaponUsed = reinterpret_cast<void*>(0x0823361C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLeavingObject = reinterpret_cast<void*>(0x08200230);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLocation = reinterpret_cast<void*>(0x08200420);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLocked = reinterpret_cast<void*>(0x08214080);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLockInfo = reinterpret_cast<void*>(0x0821E488);
void * const CNWVirtualMachineCommands__ExecuteCommandGetLootable = reinterpret_cast<void*>(0x08236068);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMaster = reinterpret_cast<void*>(0x08233474);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMatchedString = reinterpret_cast<void*>(0x0820BBAC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMatchedStringsCount = reinterpret_cast<void*>(0x08232B18);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMatchedStringsNum = reinterpret_cast<void*>(0x08232B88);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMaxHenchmen = reinterpret_cast<void*>(0x0823636C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMetaMagicFeat = reinterpret_cast<void*>(0x0823277C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetModeState = reinterpret_cast<void*>(0x0821F3F8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetModule = reinterpret_cast<void*>(0x08232FE4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetModuleItemStuff = reinterpret_cast<void*>(0x082127A0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetModuleName = reinterpret_cast<void*>(0x0821ECA4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetMovementRate = reinterpret_cast<void*>(0x082348E4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetName = reinterpret_cast<void*>(0x08206620);
void * const CNWVirtualMachineCommands__ExecuteCommandGetNearestObject = reinterpret_cast<void*>(0x082012F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetNearestTrap = reinterpret_cast<void*>(0x0821B9B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetNightTrack = reinterpret_cast<void*>(0x082352F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetNumStackedItems = reinterpret_cast<void*>(0x08234568);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectByTag = reinterpret_cast<void*>(0x0820CBA4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectInArea = reinterpret_cast<void*>(0x0820631C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectInShape = reinterpret_cast<void*>(0x08208338);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectType = reinterpret_cast<void*>(0x08206DC0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectValid = reinterpret_cast<void*>(0x08232298);
void * const CNWVirtualMachineCommands__ExecuteCommandGetObjectVisibility = reinterpret_cast<void*>(0x08210734);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPC = reinterpret_cast<void*>(0x0823516C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCChatMessage = reinterpret_cast<void*>(0x082312F4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCChatSpeaker = reinterpret_cast<void*>(0x08236BF8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCChatVolume = reinterpret_cast<void*>(0x082313FC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCIPAddress = reinterpret_cast<void*>(0x08217660);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCLevellingUp = reinterpret_cast<void*>(0x08235030);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCPlayerName = reinterpret_cast<void*>(0x082177DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCPublicCDKey = reinterpret_cast<void*>(0x08217268);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPCSpeaker = reinterpret_cast<void*>(0x0820E320);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPhenoType = reinterpret_cast<void*>(0x0823673C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPickpocketableFlag = reinterpret_cast<void*>(0x082367C4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPlaceableIllumination = reinterpret_cast<void*>(0x082350F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPlotFlag = reinterpret_cast<void*>(0x082344C8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPortraitId = reinterpret_cast<void*>(0x08236AC0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPortraitResRef = reinterpret_cast<void*>(0x0822FF30);
void * const CNWVirtualMachineCommands__ExecuteCommandGetPosition = reinterpret_cast<void*>(0x08200348);
void * const CNWVirtualMachineCommands__ExecuteCommandGetRacialType = reinterpret_cast<void*>(0x08206EB0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetReflexAdjustedDamage = reinterpret_cast<void*>(0x08213070);
void * const CNWVirtualMachineCommands__ExecuteCommandGetReflexSavingThrow = reinterpret_cast<void*>(0x0821C34C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetReputation = reinterpret_cast<void*>(0x0820D564);
void * const CNWVirtualMachineCommands__ExecuteCommandGetResRef = reinterpret_cast<void*>(0x0821FA18);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSittingCreature = reinterpret_cast<void*>(0x08234F44);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSkillRank = reinterpret_cast<void*>(0x08212A5C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSkyBox = reinterpret_cast<void*>(0x0822C1F8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellCast = reinterpret_cast<void*>(0x0820F960);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellCasterItem = reinterpret_cast<void*>(0x0823444C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellId = reinterpret_cast<void*>(0x0823303C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellResistance = reinterpret_cast<void*>(0x08236440);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellSaveDC = reinterpret_cast<void*>(0x082070AC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellTargetLoc = reinterpret_cast<void*>(0x0820DD68);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSpellTargetObject = reinterpret_cast<void*>(0x0823230C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStartingPackage = reinterpret_cast<void*>(0x0823662C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStat = reinterpret_cast<void*>(0x08233A70);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStolenFlag = reinterpret_cast<void*>(0x082356B0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStrByStrRef = reinterpret_cast<void*>(0x0820E3E0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStringLeft = reinterpret_cast<void*>(0x082048A0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStringLength = reinterpret_cast<void*>(0x082323B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStringLowerCase = reinterpret_cast<void*>(0x08204530);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStringRight = reinterpret_cast<void*>(0x082046BC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStringUpperCase = reinterpret_cast<void*>(0x082043A4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetStrRefSoundDuration = reinterpret_cast<void*>(0x08219CB0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSubRace = reinterpret_cast<void*>(0x0821BEB8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetSubString = reinterpret_cast<void*>(0x08204C80);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTag = reinterpret_cast<void*>(0x0820AC58);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTileLightColor = reinterpret_cast<void*>(0x0821D0FC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTimeHour = reinterpret_cast<void*>(0x08231E84);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTimeMillisecond = reinterpret_cast<void*>(0x08231FA4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTimeMinute = reinterpret_cast<void*>(0x08231EE4);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTimeSecond = reinterpret_cast<void*>(0x08231F44);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTotalDamageDealt = reinterpret_cast<void*>(0x082152F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTrapInfo = reinterpret_cast<void*>(0x0821D984);
void * const CNWVirtualMachineCommands__ExecuteCommandGetTurnResistanceHD = reinterpret_cast<void*>(0x082345DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetUseableFlag = reinterpret_cast<void*>(0x08235618);
void * const CNWVirtualMachineCommands__ExecuteCommandGetUserDefinedEventNumber = reinterpret_cast<void*>(0x0820FAFC);
void * const CNWVirtualMachineCommands__ExecuteCommandGetVar = reinterpret_cast<void*>(0x08203C90);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWaypointByTag = reinterpret_cast<void*>(0x0820C8D8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWaypointByTrigger = reinterpret_cast<void*>(0x0820C9F0);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWeaponRanged = reinterpret_cast<void*>(0x0821CD00);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWeather = reinterpret_cast<void*>(0x08234B74);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWeight = reinterpret_cast<void*>(0x082293B8);
void * const CNWVirtualMachineCommands__ExecuteCommandGetWillSavingThrow = reinterpret_cast<void*>(0x0821C24C);
void * const CNWVirtualMachineCommands__ExecuteCommandGetXP = reinterpret_cast<void*>(0x08218C04);
void * const CNWVirtualMachineCommands__ExecuteCommandGetXPScale = reinterpret_cast<void*>(0x082368DC);
void * const CNWVirtualMachineCommands__ExecuteCommandGiveGoldToCreature = reinterpret_cast<void*>(0x08218A20);
void * const CNWVirtualMachineCommands__ExecuteCommandGiveXPToCreature = reinterpret_cast<void*>(0x08218ABC);
void * const CNWVirtualMachineCommands__ExecuteCommandIncrementRemainingFeatUses = reinterpret_cast<void*>(0x0822B220);
void * const CNWVirtualMachineCommands__ExecuteCommandInsertString = reinterpret_cast<void*>(0x08204A84);
void * const CNWVirtualMachineCommands__ExecuteCommandIntToFloat = reinterpret_cast<void*>(0x08232F28);
void * const CNWVirtualMachineCommands__ExecuteCommandIntToHexString = reinterpret_cast<void*>(0x08233CAC);
void * const CNWVirtualMachineCommands__ExecuteCommandIntToString = reinterpret_cast<void*>(0x082061FC);
void * const CNWVirtualMachineCommands__ExecuteCommandIsAIState = reinterpret_cast<void*>(0x08209C48);
void * const CNWVirtualMachineCommands__ExecuteCommandIsDM = reinterpret_cast<void*>(0x08232D88);
void * const CNWVirtualMachineCommands__ExecuteCommandIsEffectValid = reinterpret_cast<void*>(0x0823249C);
void * const CNWVirtualMachineCommands__ExecuteCommandIsInConversation = reinterpret_cast<void*>(0x08219BD8);
void * const CNWVirtualMachineCommands__ExecuteCommandIsItemPropertyValid = reinterpret_cast<void*>(0x082358A0);
void * const CNWVirtualMachineCommands__ExecuteCommandIsListening = reinterpret_cast<void*>(0x08232A10);
void * const CNWVirtualMachineCommands__ExecuteCommandIsPC = reinterpret_cast<void*>(0x08232D20);
void * const CNWVirtualMachineCommands__ExecuteCommandItemActivated = reinterpret_cast<void*>(0x082194F0);
void * const CNWVirtualMachineCommands__ExecuteCommandItemPropertyEffect = reinterpret_cast<void*>(0x082276BC);
void * const CNWVirtualMachineCommands__ExecuteCommandLevelUpHenchman = reinterpret_cast<void*>(0x08229260);
void * const CNWVirtualMachineCommands__ExecuteCommandLineOfSight = reinterpret_cast<void*>(0x0822B5EC);
void * const CNWVirtualMachineCommands__ExecuteCommandLocation = reinterpret_cast<void*>(0x0820D8B0);
void * const CNWVirtualMachineCommands__ExecuteCommandLocationAccess = reinterpret_cast<void*>(0x0820DF1C);
void * const CNWVirtualMachineCommands__ExecuteCommandLockCamera = reinterpret_cast<void*>(0x0822F834);
void * const CNWVirtualMachineCommands__ExecuteCommandMath = reinterpret_cast<void*>(0x082050C8);
void * const CNWVirtualMachineCommands__ExecuteCommandModuleAccess = reinterpret_cast<void*>(0x08212DB8);
void * const CNWVirtualMachineCommands__ExecuteCommandMoveAwayFromObject = reinterpret_cast<void*>(0x081FFE10);
void * const CNWVirtualMachineCommands__ExecuteCommandMoveToObject = reinterpret_cast<void*>(0x081FFB78);
void * const CNWVirtualMachineCommands__ExecuteCommandMoveToPoint = reinterpret_cast<void*>(0x081FEACC);
void * const CNWVirtualMachineCommands__ExecuteCommandMusicBackground = reinterpret_cast<void*>(0x082191D4);
void * const CNWVirtualMachineCommands__ExecuteCommandMusicBattle = reinterpret_cast<void*>(0x082192C8);
void * const CNWVirtualMachineCommands__ExecuteCommandObjectToString = reinterpret_cast<void*>(0x08211C2C);
void * const CNWVirtualMachineCommands__ExecuteCommandOpenDoor = reinterpret_cast<void*>(0x08203244);
void * const CNWVirtualMachineCommands__ExecuteCommandOpenInventory = reinterpret_cast<void*>(0x082290F8);
void * const CNWVirtualMachineCommands__ExecuteCommandOpenStore = reinterpret_cast<void*>(0x082181A8);
void * const CNWVirtualMachineCommands__ExecuteCommandPersonalReputationAccess = reinterpret_cast<void*>(0x08218898);
void * const CNWVirtualMachineCommands__ExecuteCommandPickUpItem = reinterpret_cast<void*>(0x08232004);
void * const CNWVirtualMachineCommands__ExecuteCommandPlayAnimation = reinterpret_cast<void*>(0x082027D8);
void * const CNWVirtualMachineCommands__ExecuteCommandPlaySound = reinterpret_cast<void*>(0x08203544);
void * const CNWVirtualMachineCommands__ExecuteCommandPlaySoundByStrRef = reinterpret_cast<void*>(0x082036A0);
void * const CNWVirtualMachineCommands__ExecuteCommandPopUpGUIPanel = reinterpret_cast<void*>(0x08218634);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintFloat = reinterpret_cast<void*>(0x081FD844);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintInteger = reinterpret_cast<void*>(0x081FDA18);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintLogEntry = reinterpret_cast<void*>(0x0821EB68);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintObject = reinterpret_cast<void*>(0x081FDAD4);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintString = reinterpret_cast<void*>(0x081FD6DC);
void * const CNWVirtualMachineCommands__ExecuteCommandPrintVector = reinterpret_cast<void*>(0x081FDB90);
void * const CNWVirtualMachineCommands__ExecuteCommandPutDownItem = reinterpret_cast<void*>(0x08232090);
void * const CNWVirtualMachineCommands__ExecuteCommandRandom = reinterpret_cast<void*>(0x08231CF4);
void * const CNWVirtualMachineCommands__ExecuteCommandRandomName = reinterpret_cast<void*>(0x0820FBF0);
void * const CNWVirtualMachineCommands__ExecuteCommandRecomputeStaticLighting = reinterpret_cast<void*>(0x08234EA4);
void * const CNWVirtualMachineCommands__ExecuteCommandRemoveEffect = reinterpret_cast<void*>(0x0820608C);
void * const CNWVirtualMachineCommands__ExecuteCommandRemoveFromParty = reinterpret_cast<void*>(0x0821F348);
void * const CNWVirtualMachineCommands__ExecuteCommandRemoveItemProperty = reinterpret_cast<void*>(0x082271E0);
void * const CNWVirtualMachineCommands__ExecuteCommandRemoveJournalQuestEntry = reinterpret_cast<void*>(0x08216C88);
void * const CNWVirtualMachineCommands__ExecuteCommandResistSpell = reinterpret_cast<void*>(0x0820AE3C);
void * const CNWVirtualMachineCommands__ExecuteCommandRestoreBaseAttackBonus = reinterpret_cast<void*>(0x08236548);
void * const CNWVirtualMachineCommands__ExecuteCommandRestoreCameraFacing = reinterpret_cast<void*>(0x08235C6C);
void * const CNWVirtualMachineCommands__ExecuteCommandRetrieveCampaignObject = reinterpret_cast<void*>(0x08225DC8);
void * const CNWVirtualMachineCommands__ExecuteCommandRollDice = reinterpret_cast<void*>(0x08206CE0);
void * const CNWVirtualMachineCommands__ExecuteCommandSavingThrow = reinterpret_cast<void*>(0x08206F58);
void * const CNWVirtualMachineCommands__ExecuteCommandSendMessageToAllDMs = reinterpret_cast<void*>(0x0821F01C);
void * const CNWVirtualMachineCommands__ExecuteCommandSendMessageToPC = reinterpret_cast<void*>(0x0821EE98);
void * const CNWVirtualMachineCommands__ExecuteCommandSendMessageToPCByStrRef = reinterpret_cast<void*>(0x0822B088);
void * const CNWVirtualMachineCommands__ExecuteCommandSetActionMode = reinterpret_cast<void*>(0x081FE174);
void * const CNWVirtualMachineCommands__ExecuteCommandSetAILevel = reinterpret_cast<void*>(0x0822AE54);
void * const CNWVirtualMachineCommands__ExecuteCommandSetAreaTransitionBMP = reinterpret_cast<void*>(0x0820CD98);
void * const CNWVirtualMachineCommands__ExecuteCommandSetAssociateListenPatterns = reinterpret_cast<void*>(0x082335CC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetBaseAttackBonus = reinterpret_cast<void*>(0x082364C0);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCalendar = reinterpret_cast<void*>(0x081FE668);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCameraHeight = reinterpret_cast<void*>(0x082366AC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCameraLocation = reinterpret_cast<void*>(0x082033A8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCameraMode = reinterpret_cast<void*>(0x0821C6EC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCampaignFloat = reinterpret_cast<void*>(0x08220B48);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCampaignInt = reinterpret_cast<void*>(0x0822116C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCampaignLocation = reinterpret_cast<void*>(0x08221DCC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCampaignString = reinterpret_cast<void*>(0x082224CC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCampaignVector = reinterpret_cast<void*>(0x08221790);
void * const CNWVirtualMachineCommands__ExecuteCommandSetColor = reinterpret_cast<void*>(0x082317A8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCommandable = reinterpret_cast<void*>(0x0820A798);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCreatureAppearanceType = reinterpret_cast<void*>(0x0822BAFC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCreatureBodyPart = reinterpret_cast<void*>(0x0822CD54);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCreatureTailType = reinterpret_cast<void*>(0x0822D014);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCreatureWingType = reinterpret_cast<void*>(0x0822C9FC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCustomToken = reinterpret_cast<void*>(0x0820CEAC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCutsceneCameraMoveRate = reinterpret_cast<void*>(0x08236154);
void * const CNWVirtualMachineCommands__ExecuteCommandSetCutsceneMode = reinterpret_cast<void*>(0x08228C14);
void * const CNWVirtualMachineCommands__ExecuteCommandSetDeity = reinterpret_cast<void*>(0x0821BD74);
void * const CNWVirtualMachineCommands__ExecuteCommandSetDescription = reinterpret_cast<void*>(0x08230DEC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetDislike = reinterpret_cast<void*>(0x08217A68);
void * const CNWVirtualMachineCommands__ExecuteCommandSetDroppableFlag = reinterpret_cast<void*>(0x08235CEC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetEncounterData = reinterpret_cast<void*>(0x082126D0);
void * const CNWVirtualMachineCommands__ExecuteCommandSetFacing = reinterpret_cast<void*>(0x081FE2E8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetFade = reinterpret_cast<void*>(0x08229018);
void * const CNWVirtualMachineCommands__ExecuteCommandSetFogAmount = reinterpret_cast<void*>(0x0822C480);
void * const CNWVirtualMachineCommands__ExecuteCommandSetFogColor = reinterpret_cast<void*>(0x0822C070);
void * const CNWVirtualMachineCommands__ExecuteCommandSetFootstepType = reinterpret_cast<void*>(0x0822C860);
void * const CNWVirtualMachineCommands__ExecuteCommandSetHardness = reinterpret_cast<void*>(0x0822D270);
void * const CNWVirtualMachineCommands__ExecuteCommandSetIdentified = reinterpret_cast<void*>(0x08233778);
void * const CNWVirtualMachineCommands__ExecuteCommandSetImmortal = reinterpret_cast<void*>(0x08235B84);
void * const CNWVirtualMachineCommands__ExecuteCommandSetInfiniteFlag = reinterpret_cast<void*>(0x08236A38);
void * const CNWVirtualMachineCommands__ExecuteCommandSetIsDestroyable = reinterpret_cast<void*>(0x08213DA8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetItemCharges = reinterpret_cast<void*>(0x08226EF8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetItemCursedFlag = reinterpret_cast<void*>(0x08236278);
void * const CNWVirtualMachineCommands__ExecuteCommandSetItemStackSize = reinterpret_cast<void*>(0x08226DA0);
void * const CNWVirtualMachineCommands__ExecuteCommandSetKeyRequiredFeedbackMessage = reinterpret_cast<void*>(0x0822F680);
void * const CNWVirtualMachineCommands__ExecuteCommandSetLike = reinterpret_cast<void*>(0x0821793C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetListening = reinterpret_cast<void*>(0x08232A9C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetListenString = reinterpret_cast<void*>(0x0820B88C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetLocked = reinterpret_cast<void*>(0x08213F24);
void * const CNWVirtualMachineCommands__ExecuteCommandSetLockInfo = reinterpret_cast<void*>(0x0822D5C4);
void * const CNWVirtualMachineCommands__ExecuteCommandSetLootable = reinterpret_cast<void*>(0x0822B494);
void * const CNWVirtualMachineCommands__ExecuteCommandSetMapPinEnabled = reinterpret_cast<void*>(0x0821841C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetMaxHenchmen = reinterpret_cast<void*>(0x082362F0);
void * const CNWVirtualMachineCommands__ExecuteCommandSetName = reinterpret_cast<void*>(0x0822FA8C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPanelButtonFlash = reinterpret_cast<void*>(0x0821D444);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPCChatMessage = reinterpret_cast<void*>(0x08231490);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPCChatVolume = reinterpret_cast<void*>(0x08231564);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPhenoType = reinterpret_cast<void*>(0x0822BFC8);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPickpocketableFlag = reinterpret_cast<void*>(0x08236864);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPlaceableIllumination = reinterpret_cast<void*>(0x08235084);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPlotFlag = reinterpret_cast<void*>(0x08219B0C);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPortraitId = reinterpret_cast<void*>(0x08236B64);
void * const CNWVirtualMachineCommands__ExecuteCommandSetPortraitResRef = reinterpret_cast<void*>(0x08230074);
void * const CNWVirtualMachineCommands__ExecuteCommandSetSavingThrow = reinterpret_cast<void*>(0x0822F2EC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetSkyBox = reinterpret_cast<void*>(0x0822BE94);
void * const CNWVirtualMachineCommands__ExecuteCommandSetStolenFlag = reinterpret_cast<void*>(0x08235738);
void * const CNWVirtualMachineCommands__ExecuteCommandSetSubRace = reinterpret_cast<void*>(0x0821C008);
void * const CNWVirtualMachineCommands__ExecuteCommandSetSubType = reinterpret_cast<void*>(0x082072EC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetTileLightColor = reinterpret_cast<void*>(0x0821CEFC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetTime = reinterpret_cast<void*>(0x081FE864);
void * const CNWVirtualMachineCommands__ExecuteCommandSetTrapInfo = reinterpret_cast<void*>(0x0822D994);
void * const CNWVirtualMachineCommands__ExecuteCommandSetUseableFlag = reinterpret_cast<void*>(0x082301CC);
void * const CNWVirtualMachineCommands__ExecuteCommandSetVar = reinterpret_cast<void*>(0x08203FF0);
void * const CNWVirtualMachineCommands__ExecuteCommandSetWeather = reinterpret_cast<void*>(0x0821C778);
void * const CNWVirtualMachineCommands__ExecuteCommandSetXP = reinterpret_cast<void*>(0x08218B60);
void * const CNWVirtualMachineCommands__ExecuteCommandSetXPScale = reinterpret_cast<void*>(0x08236938);
void * const CNWVirtualMachineCommands__ExecuteCommandSignalEvent = reinterpret_cast<void*>(0x08209A90);
void * const CNWVirtualMachineCommands__ExecuteCommandSoundObjectPlay = reinterpret_cast<void*>(0x08234190);
void * const CNWVirtualMachineCommands__ExecuteCommandSoundObjectSetPosition = reinterpret_cast<void*>(0x0823429C);
void * const CNWVirtualMachineCommands__ExecuteCommandSoundObjectSetVolume = reinterpret_cast<void*>(0x08234230);
void * const CNWVirtualMachineCommands__ExecuteCommandSoundObjectStop = reinterpret_cast<void*>(0x082341E0);
void * const CNWVirtualMachineCommands__ExecuteCommandSpawnScriptDebugger = reinterpret_cast<void*>(0x08235554);
void * const CNWVirtualMachineCommands__ExecuteCommandSpeakOneLinerConversation = reinterpret_cast<void*>(0x0820267C);
void * const CNWVirtualMachineCommands__ExecuteCommandSpeakString = reinterpret_cast<void*>(0x08202404);
void * const CNWVirtualMachineCommands__ExecuteCommandSpeakStrRef = reinterpret_cast<void*>(0x0820E584);
void * const CNWVirtualMachineCommands__ExecuteCommandStandardFactionReputationAccess = reinterpret_cast<void*>(0x0821D4E4);
void * const CNWVirtualMachineCommands__ExecuteCommandStartNewModule = reinterpret_cast<void*>(0x08234CEC);
void * const CNWVirtualMachineCommands__ExecuteCommandStopFade = reinterpret_cast<void*>(0x08235A38);
void * const CNWVirtualMachineCommands__ExecuteCommandStoreCameraFacing = reinterpret_cast<void*>(0x08235BEC);
void * const CNWVirtualMachineCommands__ExecuteCommandStoreCampaignObject = reinterpret_cast<void*>(0x08225328);
void * const CNWVirtualMachineCommands__ExecuteCommandStoreGet = reinterpret_cast<void*>(0x0822B990);
void * const CNWVirtualMachineCommands__ExecuteCommandStoreSet = reinterpret_cast<void*>(0x0822BA44);
void * const CNWVirtualMachineCommands__ExecuteCommandStringConversions = reinterpret_cast<void*>(0x0820E054);
void * const CNWVirtualMachineCommands__ExecuteCommandSummonAssociate = reinterpret_cast<void*>(0x082337E4);
void * const CNWVirtualMachineCommands__ExecuteCommandSurrenderToEnemies = reinterpret_cast<void*>(0x0821A690);
void * const CNWVirtualMachineCommands__ExecuteCommandTakeGoldFromCreature = reinterpret_cast<void*>(0x082197E4);
void * const CNWVirtualMachineCommands__ExecuteCommandTalent = reinterpret_cast<void*>(0x08213308);
void * const CNWVirtualMachineCommands__ExecuteCommandTalentAccess = reinterpret_cast<void*>(0x08233C14);
void * const CNWVirtualMachineCommands__ExecuteCommandTestString = reinterpret_cast<void*>(0x0820B9BC);
void * const CNWVirtualMachineCommands__ExecuteCommandTimeConversions = reinterpret_cast<void*>(0x08232804);
void * const CNWVirtualMachineCommands__ExecuteCommandUnequipItem = reinterpret_cast<void*>(0x08201248);
void * const CNWVirtualMachineCommands__ExecuteCommandUnpossessFamiliar = reinterpret_cast<void*>(0x0822AFE4);
void * const CNWVirtualMachineCommands__ExecuteCommandVector = reinterpret_cast<void*>(0x082328D0);
void * const CNWVirtualMachineCommands__ExecuteCommandVectorConversions = reinterpret_cast<void*>(0x08209D2C);
void * const CNWVirtualMachineCommands__ExecuteCommandVectorMagnitude = reinterpret_cast<void*>(0x0823270C);
void * const CNWVirtualMachineCommands__ExecuteCommandVectorNormalize = reinterpret_cast<void*>(0x08209B74);
void * const CNWVirtualMachineCommands__ExecuteCommandVersusEffect = reinterpret_cast<void*>(0x08215740);
void * const CNWVirtualMachineCommands__ExecuteCommandVoiceChat = reinterpret_cast<void*>(0x08218FDC);
void * const CNWVirtualMachineCommands__ExecuteCommandWait = reinterpret_cast<void*>(0x0820CCB4);
void * const CNWVirtualMachineCommands__GetDebuggerLabelName = reinterpret_cast<void*>(0x081FBD80);
void * const CNWVirtualMachineCommands__GetEngineStructureWatchView = reinterpret_cast<void*>(0x081FBED0);
void * const CNWVirtualMachineCommands__GetEqualGameDefinedStructure = reinterpret_cast<void*>(0x081FBB7C);
void * const CNWVirtualMachineCommands__GetGameDefinedStructureName = reinterpret_cast<void*>(0x08231BB4);
void * const CNWVirtualMachineCommands__GetObjectWatchView = reinterpret_cast<void*>(0x081FC5A0);
void * const CNWVirtualMachineCommands__GetTableFromArmorPart = reinterpret_cast<void*>(0x0822B2D0);
void * const CNWVirtualMachineCommands__InitializeCommands = reinterpret_cast<void*>(0x081F5CC4);
void * const CNWVirtualMachineCommands__LoadGameDefinedStructure = reinterpret_cast<void*>(0x081FB9AC);
void * const CNWVirtualMachineCommands__ReportError = reinterpret_cast<void*>(0x081FB68C);
void * const CNWVirtualMachineCommands__RunScriptCallback = reinterpret_cast<void*>(0x081FB558);
void * const CNWVirtualMachineCommands__SaveGameDefinedStructure = reinterpret_cast<void*>(0x08231A90);

void * const CObjectLookupTable__CObjectLookupTableCtor = reinterpret_cast<void*>(0x080949D0);
void * const CObjectLookupTable__CObjectLookupTableDtor = reinterpret_cast<void*>(0x08094A10);
void * const CObjectLookupTable__AddID = reinterpret_cast<void*>(0x08094A48);
void * const CObjectLookupTable__GetIDFromIndex = reinterpret_cast<void*>(0x08094AAC);
void * const CObjectLookupTable__GetIndexFromID = reinterpret_cast<void*>(0x08094ABC);
void * const CObjectLookupTable__GetUpdate = reinterpret_cast<void*>(0x08094B9C);
void * const CObjectLookupTable__Touch = reinterpret_cast<void*>(0x08094AF8);
void * const CObjectLookupTable__Update = reinterpret_cast<void*>(0x08094C1C);

void * const CObjectTableManager__CObjectTableManagerCtor = reinterpret_cast<void*>(0x08094C60);
void * const CObjectTableManager__CObjectTableManagerDtor = reinterpret_cast<void*>(0x08094C84);
void * const CObjectTableManager__AddID = reinterpret_cast<void*>(0x08094D80);
void * const CObjectTableManager__ClearAll = reinterpret_cast<void*>(0x08094D18);
void * const CObjectTableManager__CreateNewPlayer = reinterpret_cast<void*>(0x0809484C);
void * const CObjectTableManager__GetIDFromIndex = reinterpret_cast<void*>(0x08094E28);
void * const CObjectTableManager__GetIndexFromID = reinterpret_cast<void*>(0x08094E6C);
void * const CObjectTableManager__RemovePlayer = reinterpret_cast<void*>(0x08094CB8);
void * const CObjectTableManager__Touch = reinterpret_cast<void*>(0x0809490C);

void * const CPathfindInfoIntraTileSuccessors__CPathfindInfoIntraTileSuccessorsCtor = reinterpret_cast<void*>(0x08242344);

void * const CPathfindInformation__CPathfindInformationCtor = reinterpret_cast<void*>(0x08241BA8);
void * const CPathfindInformation__CPathfindInformationDtor = reinterpret_cast<void*>(0x08242378);
void * const CPathfindInformation__ComputeStepTolerance = reinterpret_cast<void*>(0x082427A0);
void * const CPathfindInformation__CreateFirstTileFValueAlternatives = reinterpret_cast<void*>(0x0824269C);
void * const CPathfindInformation__DeleteFirstTileFValueAlternatives = reinterpret_cast<void*>(0x0824227C);
void * const CPathfindInformation__FlipStartEndPoints = reinterpret_cast<void*>(0x08242724);
void * const CPathfindInformation__FlipTempEndPoints = reinterpret_cast<void*>(0x0824275C);
void * const CPathfindInformation__GetFirstTileFValueAlternatives = reinterpret_cast<void*>(0x08242628);
void * const CPathfindInformation__Initialize = reinterpret_cast<void*>(0x08241CB4);
void * const CPathfindInformation__ResetAtEndOfPath = reinterpret_cast<void*>(0x082423AC);
void * const CPathfindInformation__ResetGridSearchData = reinterpret_cast<void*>(0x0824251C);
void * const CPathfindInformation__ResetInterAreaPathSearchData = reinterpret_cast<void*>(0x08242494);
void * const CPathfindInformation__ResetInterAreaSearchData = reinterpret_cast<void*>(0x08242430);
void * const CPathfindInformation__ResetInterTileSearchData = reinterpret_cast<void*>(0x082421D4);
void * const CPathfindInformation__ResetIntraTileSearchData = reinterpret_cast<void*>(0x082425C4);
void * const CPathfindInformation__ResetWayPointData = reinterpret_cast<void*>(0x082420EC);
void * const CPathfindInformation__SetFirstTileFValueAlternatives = reinterpret_cast<void*>(0x08242664);
void * const CPathfindInformation__Shutdown = reinterpret_cast<void*>(0x08241FC0);

void * const CRes__CResCtor__0 = reinterpret_cast<void*>(0x082B35C8);
void * const CRes__CResCtor__1 = reinterpret_cast<void*>(0x082B3624);
void * const CRes__CResDtor = reinterpret_cast<void*>(0x082B3668);
void * const CRes__CancelRequest = reinterpret_cast<void*>(0x082B36D4);
void * const CRes__Demand = reinterpret_cast<void*>(0x082B36F0);
void * const CRes__Dump = reinterpret_cast<void*>(0x082B372C);
void * const CRes__GetData = reinterpret_cast<void*>(0x082B3748);
void * const CRes__GetDemands = reinterpret_cast<void*>(0x082B3754);
void * const CRes__GetFixedResourceDataOffset = reinterpret_cast<void*>(0x082B3FE8);
void * const CRes__GetFixedResourceSize = reinterpret_cast<void*>(0x082B3FDC);
void * const CRes__GetID = reinterpret_cast<void*>(0x082B376C);
void * const CRes__GetRequests = reinterpret_cast<void*>(0x082B3760);
void * const CRes__GetSize = reinterpret_cast<void*>(0x082B3778);
void * const CRes__OnResourceFreed = reinterpret_cast<void*>(0x082B3FF0);
void * const CRes__OnResourceServiced = reinterpret_cast<void*>(0x082B3FFC);
void * const CRes__ReadRaw = reinterpret_cast<void*>(0x082B370C);
void * const CRes__Release = reinterpret_cast<void*>(0x082B3784);
void * const CRes__Request = reinterpret_cast<void*>(0x082B37A0);
void * const CRes__SetID = reinterpret_cast<void*>(0x082B37BC);
void * const CRes__SetPos = reinterpret_cast<void*>(0x082B4008);

void * const CRes2DA__CRes2DACtor = reinterpret_cast<void*>(0x082C52B4);
void * const CRes2DA__CRes2DADtor = reinterpret_cast<void*>(0x082C52F0);
void * const CRes2DA__Get2DADataPtr = reinterpret_cast<void*>(0x082C5338);
void * const CRes2DA__Get2DAHeaderPtr = reinterpret_cast<void*>(0x082C532C);
void * const CRes2DA__Get2DASize = reinterpret_cast<void*>(0x082C5344);
void * const CRes2DA__IsLoaded = reinterpret_cast<void*>(0x082C5350);
void * const CRes2DA__OnResourceFreed = reinterpret_cast<void*>(0x082C535C);
void * const CRes2DA__OnResourceServiced = reinterpret_cast<void*>(0x082C5388);

void * const CResARE__CResAREDtor = reinterpret_cast<void*>(0x080D54EC);

void * const CResDWK__CResDWKCtor = reinterpret_cast<void*>(0x0824048C);
void * const CResDWK__CResDWKDtor = reinterpret_cast<void*>(0x082404C8);
void * const CResDWK__GetDWKDataPtr = reinterpret_cast<void*>(0x08240504);
void * const CResDWK__GetDWKSize = reinterpret_cast<void*>(0x08240510);
void * const CResDWK__IsLoaded = reinterpret_cast<void*>(0x0824051C);
void * const CResDWK__OnResourceFreed = reinterpret_cast<void*>(0x08240528);
void * const CResDWK__OnResourceServiced = reinterpret_cast<void*>(0x0824054C);

void * const CResGFF__CResGFFCtor__0 = reinterpret_cast<void*>(0x082B8468);
void * const CResGFF__CResGFFCtor__1 = reinterpret_cast<void*>(0x082B8370);
void * const CResGFF__CResGFFDtor = reinterpret_cast<void*>(0x082B85E0);
void * const CResGFF__AddDataField = reinterpret_cast<void*>(0x082BB654);
void * const CResGFF__AddDataLayoutField = reinterpret_cast<void*>(0x082B93E8);
void * const CResGFF__AddDataLayoutList = reinterpret_cast<void*>(0x082B94A8);
void * const CResGFF__AddField = reinterpret_cast<void*>(0x082B9164);
void * const CResGFF__AddLabel = reinterpret_cast<void*>(0x082B92E0);
void * const CResGFF__AddList = reinterpret_cast<void*>(0x082BBFD8);
void * const CResGFF__AddListElement = reinterpret_cast<void*>(0x082B9E50);
void * const CResGFF__AddStruct = reinterpret_cast<void*>(0x082B90A8);
void * const CResGFF__AddStructToStruct = reinterpret_cast<void*>(0x082BC078);
void * const CResGFF__CreateGFFFile = reinterpret_cast<void*>(0x082BAAC4);
void * const CResGFF__GetDataField = reinterpret_cast<void*>(0x082BB588);
void * const CResGFF__GetDataFieldNum = reinterpret_cast<void*>(0x082BC6B8);
void * const CResGFF__GetDataFromPointer = reinterpret_cast<void*>(0x082B961C);
void * const CResGFF__GetDataLayoutField = reinterpret_cast<void*>(0x082BB5C0);
void * const CResGFF__GetDataLayoutFieldNum = reinterpret_cast<void*>(0x082BC6CC);
void * const CResGFF__GetDataLayoutList = reinterpret_cast<void*>(0x082BB5F8);
void * const CResGFF__GetDataLayoutListNum = reinterpret_cast<void*>(0x082BC6E0);
void * const CResGFF__GetElementType = reinterpret_cast<void*>(0x082BB760);
void * const CResGFF__GetField__0 = reinterpret_cast<void*>(0x082B8AF8);
void * const CResGFF__GetField__1 = reinterpret_cast<void*>(0x082BC708);
void * const CResGFF__GetFieldByLabel = reinterpret_cast<void*>(0x082B8B9C);
void * const CResGFF__GetFieldCount__0 = reinterpret_cast<void*>(0x082BB79C);
void * const CResGFF__GetFieldCount__1 = reinterpret_cast<void*>(0x082BB7B8);
void * const CResGFF__GetFieldLabel = reinterpret_cast<void*>(0x082BB838);
void * const CResGFF__GetFieldNum = reinterpret_cast<void*>(0x082BC690);
void * const CResGFF__GetFieldSize = reinterpret_cast<void*>(0x082B9860);
void * const CResGFF__GetFieldStringID = reinterpret_cast<void*>(0x082BB888);
void * const CResGFF__GetFieldType = reinterpret_cast<void*>(0x082BB7F4);
void * const CResGFF__GetFileData = reinterpret_cast<void*>(0x082B9568);
void * const CResGFF__GetGFFFileInfo = reinterpret_cast<void*>(0x082BB70C);
void * const CResGFF__GetLabel = reinterpret_cast<void*>(0x082BB544);
void * const CResGFF__GetLabelNum = reinterpret_cast<void*>(0x082BC6A4);
void * const CResGFF__GetList = reinterpret_cast<void*>(0x082BB8F4);
void * const CResGFF__GetListCount = reinterpret_cast<void*>(0x082BB990);
void * const CResGFF__GetListElement = reinterpret_cast<void*>(0x082B9940);
void * const CResGFF__GetStruct = reinterpret_cast<void*>(0x082BB510);
void * const CResGFF__GetStructFromStruct = reinterpret_cast<void*>(0x082BBA00);
void * const CResGFF__GetStructNum = reinterpret_cast<void*>(0x082BC67C);
void * const CResGFF__GetTopLevelStruct = reinterpret_cast<void*>(0x082BBA5C);
void * const CResGFF__GetTotalSize = reinterpret_cast<void*>(0x082BC5C4);
void * const CResGFF__GetWastedFieldSpace = reinterpret_cast<void*>(0x082BC660);
void * const CResGFF__GetWastedListSpace = reinterpret_cast<void*>(0x082BC66C);
void * const CResGFF__InitializeForWriting = reinterpret_cast<void*>(0x082B8D08);
void * const CResGFF__IsDataInPlace = reinterpret_cast<void*>(0x082BB630);
void * const CResGFF__IsLoaded = reinterpret_cast<void*>(0x082BC650);
void * const CResGFF__OnResourceFreed = reinterpret_cast<void*>(0x082BB3F8);
void * const CResGFF__OnResourceServiced = reinterpret_cast<void*>(0x082B8708);
void * const CResGFF__Pack = reinterpret_cast<void*>(0x082BB120);
void * const CResGFF__ReadFieldBYTE = reinterpret_cast<void*>(0x082BBA7C);
void * const CResGFF__ReadFieldCExoLocString = reinterpret_cast<void*>(0x082B9BA8);
void * const CResGFF__ReadFieldCExoString = reinterpret_cast<void*>(0x082B9AAC);
void * const CResGFF__ReadFieldCHAR = reinterpret_cast<void*>(0x082BBADC);
void * const CResGFF__ReadFieldCResRef = reinterpret_cast<void*>(0x082B99DC);
void * const CResGFF__ReadFieldDOUBLE = reinterpret_cast<void*>(0x082BBE68);
void * const CResGFF__ReadFieldDWORD = reinterpret_cast<void*>(0x082BBBFC);
void * const CResGFF__ReadFieldDWORD64 = reinterpret_cast<void*>(0x082BBD10);
void * const CResGFF__ReadFieldFLOAT = reinterpret_cast<void*>(0x082BBCB4);
void * const CResGFF__ReadFieldINT = reinterpret_cast<void*>(0x082BBC58);
void * const CResGFF__ReadFieldINT64 = reinterpret_cast<void*>(0x082BBDBC);
void * const CResGFF__ReadFieldSHORT = reinterpret_cast<void*>(0x082BBB9C);
void * const CResGFF__ReadFieldVOID = reinterpret_cast<void*>(0x082BBF1C);
void * const CResGFF__ReadFieldWORD = reinterpret_cast<void*>(0x082BBB3C);
void * const CResGFF__ReleaseResource = reinterpret_cast<void*>(0x082BB454);
void * const CResGFF__SetFileType = reinterpret_cast<void*>(0x082BC630);
void * const CResGFF__SetReplaceExistingFields = reinterpret_cast<void*>(0x082BC6F4);
void * const CResGFF__WriteFieldBYTE = reinterpret_cast<void*>(0x082BC0F4);
void * const CResGFF__WriteFieldCExoLocString = reinterpret_cast<void*>(0x082BA650);
void * const CResGFF__WriteFieldCExoString = reinterpret_cast<void*>(0x082BA4EC);
void * const CResGFF__WriteFieldCHAR = reinterpret_cast<void*>(0x082BC184);
void * const CResGFF__WriteFieldCResRef = reinterpret_cast<void*>(0x082BA368);
void * const CResGFF__WriteFieldDOUBLE = reinterpret_cast<void*>(0x082BA20C);
void * const CResGFF__WriteFieldDWORD = reinterpret_cast<void*>(0x082BC334);
void * const CResGFF__WriteFieldDWORD64 = reinterpret_cast<void*>(0x082B9F4C);
void * const CResGFF__WriteFieldFLOAT = reinterpret_cast<void*>(0x082BC444);
void * const CResGFF__WriteFieldINT = reinterpret_cast<void*>(0x082BC3BC);
void * const CResGFF__WriteFieldINT64 = reinterpret_cast<void*>(0x082BA0AC);
void * const CResGFF__WriteFieldSHORT = reinterpret_cast<void*>(0x082BC2A4);
void * const CResGFF__WriteFieldVOID = reinterpret_cast<void*>(0x082BA9B0);
void * const CResGFF__WriteFieldWORD = reinterpret_cast<void*>(0x082BC214);
void * const CResGFF__WriteGFFData = reinterpret_cast<void*>(0x082BAD2C);
void * const CResGFF__WriteGFFFile__0 = reinterpret_cast<void*>(0x082BAFCC);
void * const CResGFF__WriteGFFFile__1 = reinterpret_cast<void*>(0x082BC4CC);
void * const CResGFF__WriteGFFToPointer = reinterpret_cast<void*>(0x082BAE78);

void * const CResGFFFieldIDHash__Hash = reinterpret_cast<void*>(0x082C5270);
void * const CResGFFFieldIDHash__Initialize = reinterpret_cast<void*>(0x082C5234);

void * const CResIFO__CResIFODtor = reinterpret_cast<void*>(0x081C1774);

void * const CResLTR__CResLTRCtor = reinterpret_cast<void*>(0x08271BC0);
void * const CResLTR__CResLTRDtor = reinterpret_cast<void*>(0x08271C3C);
void * const CResLTR__GetEndDoubleLetterProb = reinterpret_cast<void*>(0x08271CF4);
void * const CResLTR__GetEndSingleLetterProb = reinterpret_cast<void*>(0x08271D18);
void * const CResLTR__GetEndTripleLetterProb = reinterpret_cast<void*>(0x08271CD0);
void * const CResLTR__GetLTRHeaderPtr = reinterpret_cast<void*>(0x08271CAC);
void * const CResLTR__GetMiddleDoubleLetterProb = reinterpret_cast<void*>(0x08271CE8);
void * const CResLTR__GetMiddleSingleLetterProb = reinterpret_cast<void*>(0x08271D0C);
void * const CResLTR__GetMiddleTripleLetterProb = reinterpret_cast<void*>(0x08271CC4);
void * const CResLTR__GetStartDoubleLetterProb = reinterpret_cast<void*>(0x08271CDC);
void * const CResLTR__GetStartSingleLetterProb = reinterpret_cast<void*>(0x08271D00);
void * const CResLTR__GetStartTripleLetterProb = reinterpret_cast<void*>(0x08271CB8);
void * const CResLTR__OnResourceFreed = reinterpret_cast<void*>(0x08271378);
void * const CResLTR__OnResourceServiced = reinterpret_cast<void*>(0x08271648);

void * const CResNCS__CResNCSCtor = reinterpret_cast<void*>(0x0826A6CC);
void * const CResNCS__CResNCSDtor = reinterpret_cast<void*>(0x0826A700);
void * const CResNCS__GetNCSDataPtr = reinterpret_cast<void*>(0x0826A73C);
void * const CResNCS__GetNCSSize = reinterpret_cast<void*>(0x0826A748);
void * const CResNCS__IsLoaded = reinterpret_cast<void*>(0x0826A754);
void * const CResNCS__OnResourceFreed = reinterpret_cast<void*>(0x0826A760);
void * const CResNCS__OnResourceServiced = reinterpret_cast<void*>(0x0826A784);

void * const CResNDB__CResNDBCtor = reinterpret_cast<void*>(0x0826A7EC);
void * const CResNDB__CResNDBDtor = reinterpret_cast<void*>(0x0826A820);
void * const CResNDB__GetNDBDataPtr = reinterpret_cast<void*>(0x0826A85C);
void * const CResNDB__GetNDBSize = reinterpret_cast<void*>(0x0826A868);
void * const CResNDB__IsLoaded = reinterpret_cast<void*>(0x0826A874);
void * const CResNDB__OnResourceFreed = reinterpret_cast<void*>(0x0826A880);
void * const CResNDB__OnResourceServiced = reinterpret_cast<void*>(0x0826A8A4);

void * const CResNSS__CResNSSCtor = reinterpret_cast<void*>(0x0826A90C);
void * const CResNSS__CResNSSDtor = reinterpret_cast<void*>(0x0826A940);
void * const CResNSS__GetNSSDataPtr = reinterpret_cast<void*>(0x0826A97C);
void * const CResNSS__GetNSSSize = reinterpret_cast<void*>(0x0826A988);
void * const CResNSS__IsLoaded = reinterpret_cast<void*>(0x0826A994);
void * const CResNSS__OnResourceFreed = reinterpret_cast<void*>(0x0826A9A0);
void * const CResNSS__OnResourceServiced = reinterpret_cast<void*>(0x0826A9C4);

void * const CResPWK__CResPWKCtor = reinterpret_cast<void*>(0x082405B4);
void * const CResPWK__CResPWKDtor = reinterpret_cast<void*>(0x082405F0);
void * const CResPWK__GetPWKDataPtr = reinterpret_cast<void*>(0x0824062C);
void * const CResPWK__GetPWKSize = reinterpret_cast<void*>(0x08240638);
void * const CResPWK__IsLoaded = reinterpret_cast<void*>(0x08240644);
void * const CResPWK__OnResourceFreed = reinterpret_cast<void*>(0x08240650);
void * const CResPWK__OnResourceServiced = reinterpret_cast<void*>(0x08240674);

void * const CResRef__CResRefCtor__0 = reinterpret_cast<void*>(0x082B322C);
void * const CResRef__CResRefCtor__1 = reinterpret_cast<void*>(0x082B3244);
void * const CResRef__CResRefCtor__2 = reinterpret_cast<void*>(0x082B3260);
void * const CResRef__CResRefCtor__3 = reinterpret_cast<void*>(0x082B327C);
void * const CResRef__CResRefCtor__4 = reinterpret_cast<void*>(0x082B3298);
void * const CResRef____apl = reinterpret_cast<void*>(0x082AEB2C);
void * const CResRef____as__0 = reinterpret_cast<void*>(0x082AEA8C);
void * const CResRef____as__1 = reinterpret_cast<void*>(0x082B347C);
void * const CResRef____as__2 = reinterpret_cast<void*>(0x082B34C8);
void * const CResRef____as__3 = reinterpret_cast<void*>(0x082B3544);
void * const CResRef____eq__0 = reinterpret_cast<void*>(0x082AEA24);
void * const CResRef____eq__1 = reinterpret_cast<void*>(0x082B33F4);
void * const CResRef____eq__2 = reinterpret_cast<void*>(0x082B3418);
void * const CResRef____ne__0 = reinterpret_cast<void*>(0x082AE9C0);
void * const CResRef____ne__1 = reinterpret_cast<void*>(0x082B33B4);
void * const CResRef____ne__2 = reinterpret_cast<void*>(0x082B33D4);
void * const CResRef____nt = reinterpret_cast<void*>(0x082B346C);
void * const CResRef__CopyToString__0 = reinterpret_cast<void*>(0x082B3304);
void * const CResRef__CopyToString__1 = reinterpret_cast<void*>(0x082B3338);
void * const CResRef__GetLength = reinterpret_cast<void*>(0x082B3398);
void * const CResRef__GetResRef__0 = reinterpret_cast<void*>(0x082B3358);
void * const CResRef__GetResRef__1 = reinterpret_cast<void*>(0x082B35B0);
void * const CResRef__GetResRefStr = reinterpret_cast<void*>(0x082B3360);
void * const CResRef__IsValid = reinterpret_cast<void*>(0x082B3388);

void * const CResSET__CResSETCtor = reinterpret_cast<void*>(0x08095658);
void * const CResSET__CResSETDtor = reinterpret_cast<void*>(0x08095694);
void * const CResSET__CopySETData = reinterpret_cast<void*>(0x080956D0);
void * const CResSET__CreateSectionTable = reinterpret_cast<void*>(0x08094FE8);
void * const CResSET__GetNextLine = reinterpret_cast<void*>(0x080958DC);
void * const CResSET__GetSectionEntryValue = reinterpret_cast<void*>(0x080957F4);
void * const CResSET__GetSETDataPtr = reinterpret_cast<void*>(0x08095700);
void * const CResSET__GetSETSize = reinterpret_cast<void*>(0x0809570C);
void * const CResSET__IsLoaded = reinterpret_cast<void*>(0x08095718);
void * const CResSET__OnResourceFreed = reinterpret_cast<void*>(0x08094EE0);
void * const CResSET__OnResourceServiced = reinterpret_cast<void*>(0x08095724);
void * const CResSET__SkipWhiteSpace = reinterpret_cast<void*>(0x08095930);

void * const CResTGA__CResTGACtor = reinterpret_cast<void*>(0x082BCE00);
void * const CResTGA__CResTGADtor = reinterpret_cast<void*>(0x082BCE68);
void * const CResTGA__CopyTGAData = reinterpret_cast<void*>(0x082BCEA4);
void * const CResTGA__GetTGAAttrib = reinterpret_cast<void*>(0x082BCED4);
void * const CResTGA__GetTGAColorMapPtr = reinterpret_cast<void*>(0x082BCF0C);
void * const CResTGA__GetTGADataPtr = reinterpret_cast<void*>(0x082BCF18);
void * const CResTGA__GetTGAHeaderPtr = reinterpret_cast<void*>(0x082BCF24);
void * const CResTGA__GetTGASize = reinterpret_cast<void*>(0x082BCF30);
void * const CResTGA__IsColorMapped = reinterpret_cast<void*>(0x082BCF3C);
void * const CResTGA__IsCompressed = reinterpret_cast<void*>(0x082BCF48);
void * const CResTGA__IsLoaded = reinterpret_cast<void*>(0x082BCF54);
void * const CResTGA__OnResourceFreed = reinterpret_cast<void*>(0x082BCF60);
void * const CResTGA__OnResourceServiced = reinterpret_cast<void*>(0x082BC778);
void * const CResTGA__ReadColorMappedRLETGA = reinterpret_cast<void*>(0x082BCB74);
void * const CResTGA__ReadUnmappedRLETGA = reinterpret_cast<void*>(0x082BCC28);
void * const CResTGA__Write = reinterpret_cast<void*>(0x082BC9BC);

void * const CResWOK__CResWOKCtor = reinterpret_cast<void*>(0x0809597C);
void * const CResWOK__CResWOKDtor = reinterpret_cast<void*>(0x080959B0);
void * const CResWOK__GetWOKDataPtr = reinterpret_cast<void*>(0x080959EC);
void * const CResWOK__GetWOKSize = reinterpret_cast<void*>(0x080959F8);
void * const CResWOK__IsLoaded = reinterpret_cast<void*>(0x08095A04);
void * const CResWOK__OnResourceFreed = reinterpret_cast<void*>(0x08095A10);
void * const CResWOK__OnResourceServiced = reinterpret_cast<void*>(0x08095A34);

void * const CScriptCompiler__CScriptCompilerCtor = reinterpret_cast<void*>(0x08242F2C);
void * const CScriptCompiler__CScriptCompilerDtor = reinterpret_cast<void*>(0x08243724);
void * const CScriptCompiler__AddStructureToStack = reinterpret_cast<void*>(0x08252C30);
void * const CScriptCompiler__AddSymbolToLabelList = reinterpret_cast<void*>(0x08252F48);
void * const CScriptCompiler__AddSymbolToQueryList = reinterpret_cast<void*>(0x082530E8);
void * const CScriptCompiler__AddToGlobalVariableList = reinterpret_cast<void*>(0x0825E4FC);
void * const CScriptCompiler__AddToSymbolTableVarStack = reinterpret_cast<void*>(0x08253538);
void * const CScriptCompiler__AddUserDefinedIdentifier = reinterpret_cast<void*>(0x0825CFC4);
void * const CScriptCompiler__AddVariableToStack = reinterpret_cast<void*>(0x08252AA8);
void * const CScriptCompiler__CheckForBadLValue = reinterpret_cast<void*>(0x0825E4BC);
void * const CScriptCompiler__CleanUpAfterCompile = reinterpret_cast<void*>(0x08248C60);
void * const CScriptCompiler__CleanUpAfterCompiles = reinterpret_cast<void*>(0x08245D78);
void * const CScriptCompiler__CleanUpDuringCompile = reinterpret_cast<void*>(0x0825E11C);
void * const CScriptCompiler__ClearAllSymbolLists = reinterpret_cast<void*>(0x08254F10);
void * const CScriptCompiler__ClearCompiledScriptCode = reinterpret_cast<void*>(0x08247F90);
void * const CScriptCompiler__ClearSwitchLabelList = reinterpret_cast<void*>(0x0824A0B8);
void * const CScriptCompiler__ClearUserDefinedIdentifiers = reinterpret_cast<void*>(0x0824897C);
void * const CScriptCompiler__CompileFile = reinterpret_cast<void*>(0x08245E8C);
void * const CScriptCompiler__CompileScriptChunk = reinterpret_cast<void*>(0x08246248);
void * const CScriptCompiler__CompileScriptConditional = reinterpret_cast<void*>(0x0824632C);
void * const CScriptCompiler__CreateScriptParseTreeNode = reinterpret_cast<void*>(0x08258388);
void * const CScriptCompiler__DeleteCompileStack = reinterpret_cast<void*>(0x0825E560);
void * const CScriptCompiler__DeleteParseTree = reinterpret_cast<void*>(0x08247E38);
void * const CScriptCompiler__DeleteScriptParseTreeNode = reinterpret_cast<void*>(0x0825E404);
void * const CScriptCompiler__DetermineLocationOfCode = reinterpret_cast<void*>(0x082493C4);
void * const CScriptCompiler__DuplicateScriptParseTree = reinterpret_cast<void*>(0x082584DC);
void * const CScriptCompiler__EndLineNumberAtBinaryInstruction = reinterpret_cast<void*>(0x08253304);
void * const CScriptCompiler__FinalizeFinalCode = reinterpret_cast<void*>(0x08254E80);
void * const CScriptCompiler__FoundReturnStatementOnAllBranches = reinterpret_cast<void*>(0x08252A08);
void * const CScriptCompiler__GenerateCodeForSwitchLabels = reinterpret_cast<void*>(0x08255000);
void * const CScriptCompiler__GenerateDebuggerTypeAbbreviation = reinterpret_cast<void*>(0x08253E6C);
void * const CScriptCompiler__GenerateFinalCodeFromParseTree = reinterpret_cast<void*>(0x08248440);
void * const CScriptCompiler__GenerateIdentifierList = reinterpret_cast<void*>(0x08255378);
void * const CScriptCompiler__GenerateIdentifiersFromConstantVariables = reinterpret_cast<void*>(0x0824A214);
void * const CScriptCompiler__GenerateParseTree = reinterpret_cast<void*>(0x08258610);
void * const CScriptCompiler__GetCompiledScriptCode = reinterpret_cast<void*>(0x08247F6C);
void * const CScriptCompiler__GetFunctionNameFromSymbolSubTypes = reinterpret_cast<void*>(0x08252E54);
void * const CScriptCompiler__GetHashEntryByName = reinterpret_cast<void*>(0x08245640);
void * const CScriptCompiler__GetIdentifierByName = reinterpret_cast<void*>(0x08255114);
void * const CScriptCompiler__GetNewScriptParseTreeNode = reinterpret_cast<void*>(0x08258020);
void * const CScriptCompiler__GetStructureField = reinterpret_cast<void*>(0x082551C8);
void * const CScriptCompiler__GetStructureSize = reinterpret_cast<void*>(0x082550BC);
void * const CScriptCompiler__HandleIdentifierToken = reinterpret_cast<void*>(0x08257E94);
void * const CScriptCompiler__HandleToken = reinterpret_cast<void*>(0x08257E54);
void * const CScriptCompiler__HashManagerAdd = reinterpret_cast<void*>(0x082457B8);
void * const CScriptCompiler__HashManagerDelete = reinterpret_cast<void*>(0x08245980);
void * const CScriptCompiler__HashString__0 = reinterpret_cast<void*>(0x08247BE8);
void * const CScriptCompiler__HashString__1 = reinterpret_cast<void*>(0x08247C44);
void * const CScriptCompiler__Initialize = reinterpret_cast<void*>(0x08243C90);
void * const CScriptCompiler__InitializeFinalCode = reinterpret_cast<void*>(0x08254E0C);
void * const CScriptCompiler__InitializeIncludeFile = reinterpret_cast<void*>(0x08247D78);
void * const CScriptCompiler__InitializePreDefinedStructures = reinterpret_cast<void*>(0x08247CB0);
void * const CScriptCompiler__InitializeSwitchLabelList = reinterpret_cast<void*>(0x08254FC0);
void * const CScriptCompiler__InsertGlobalVariablesInParseTree = reinterpret_cast<void*>(0x08254F88);
void * const CScriptCompiler__InstallLoader = reinterpret_cast<void*>(0x08248E40);
void * const CScriptCompiler__InVisitGenerateCode = reinterpret_cast<void*>(0x0824BA14);
void * const CScriptCompiler__ModifySRStackReturnTree = reinterpret_cast<void*>(0x0825E3E0);
void * const CScriptCompiler__OutputError = reinterpret_cast<void*>(0x08246410);
void * const CScriptCompiler__OutputIdentifierError = reinterpret_cast<void*>(0x08249660);
void * const CScriptCompiler__OutputWalkTreeError = reinterpret_cast<void*>(0x08248D4C);
void * const CScriptCompiler__ParseCharacterAlphabet = reinterpret_cast<void*>(0x08256598);
void * const CScriptCompiler__ParseCharacterAmpersand = reinterpret_cast<void*>(0x082576B8);
void * const CScriptCompiler__ParseCharacterAsterisk = reinterpret_cast<void*>(0x0825779C);
void * const CScriptCompiler__ParseCharacterCarat = reinterpret_cast<void*>(0x08257CE0);
void * const CScriptCompiler__ParseCharacterColon = reinterpret_cast<void*>(0x08257E20);
void * const CScriptCompiler__ParseCharacterComma = reinterpret_cast<void*>(0x08257D6C);
void * const CScriptCompiler__ParseCharacterEllipsis = reinterpret_cast<void*>(0x08257DA0);
void * const CScriptCompiler__ParseCharacterEqualSign = reinterpret_cast<void*>(0x08257B80);
void * const CScriptCompiler__ParseCharacterExclamationPoint = reinterpret_cast<void*>(0x08257B24);
void * const CScriptCompiler__ParseCharacterHyphen = reinterpret_cast<void*>(0x08257978);
void * const CScriptCompiler__ParseCharacterLeftAngle = reinterpret_cast<void*>(0x08256754);
void * const CScriptCompiler__ParseCharacterLeftBrace = reinterpret_cast<void*>(0x082579EC);
void * const CScriptCompiler__ParseCharacterLeftBracket = reinterpret_cast<void*>(0x08257A54);
void * const CScriptCompiler__ParseCharacterLeftSquareBracket = reinterpret_cast<void*>(0x08257ABC);
void * const CScriptCompiler__ParseCharacterNumeric = reinterpret_cast<void*>(0x082575A8);
void * const CScriptCompiler__ParseCharacterPercentSign = reinterpret_cast<void*>(0x08257C50);
void * const CScriptCompiler__ParseCharacterPeriod = reinterpret_cast<void*>(0x082564E8);
void * const CScriptCompiler__ParseCharacterPlusSign = reinterpret_cast<void*>(0x08257BDC);
void * const CScriptCompiler__ParseCharacterQuestionMark = reinterpret_cast<void*>(0x08257DEC);
void * const CScriptCompiler__ParseCharacterQuotationMark = reinterpret_cast<void*>(0x08257930);
void * const CScriptCompiler__ParseCharacterRightAngle = reinterpret_cast<void*>(0x08256678);
void * const CScriptCompiler__ParseCharacterRightBrace = reinterpret_cast<void*>(0x08257A20);
void * const CScriptCompiler__ParseCharacterRightBracket = reinterpret_cast<void*>(0x08257A88);
void * const CScriptCompiler__ParseCharacterRightSquareBracket = reinterpret_cast<void*>(0x08257AF0);
void * const CScriptCompiler__ParseCharacterSemicolon = reinterpret_cast<void*>(0x08257CAC);
void * const CScriptCompiler__ParseCharacterSlash = reinterpret_cast<void*>(0x0825762C);
void * const CScriptCompiler__ParseCharacterTilde = reinterpret_cast<void*>(0x08257D38);
void * const CScriptCompiler__ParseCharacterVerticalBar = reinterpret_cast<void*>(0x08257728);
void * const CScriptCompiler__ParseCommentedOutCharacter = reinterpret_cast<void*>(0x082577F4);
void * const CScriptCompiler__ParseFloatFromTokenString = reinterpret_cast<void*>(0x08256428);
void * const CScriptCompiler__ParseIdentifierFile = reinterpret_cast<void*>(0x0825625C);
void * const CScriptCompiler__ParseNextCharacter = reinterpret_cast<void*>(0x0825695C);
void * const CScriptCompiler__ParseSource = reinterpret_cast<void*>(0x0825E1CC);
void * const CScriptCompiler__ParseStringCharacter = reinterpret_cast<void*>(0x08257874);
void * const CScriptCompiler__PopSRStack = reinterpret_cast<void*>(0x0825E328);
void * const CScriptCompiler__PostVisitGenerateCode = reinterpret_cast<void*>(0x0824C7E4);
void * const CScriptCompiler__PreVisitGenerateCode = reinterpret_cast<void*>(0x0824A688);
void * const CScriptCompiler__PrintBinaryAddress = reinterpret_cast<void*>(0x08255090);
void * const CScriptCompiler__PrintParseIdentifierFileError = reinterpret_cast<void*>(0x08256188);
void * const CScriptCompiler__PrintParseSourceError = reinterpret_cast<void*>(0x0825DFA8);
void * const CScriptCompiler__PushSRStack = reinterpret_cast<void*>(0x08257EF0);
void * const CScriptCompiler__RemoveFromSymbolTableVarStack = reinterpret_cast<void*>(0x08253888);
void * const CScriptCompiler__ResolveDebuggingInformation = reinterpret_cast<void*>(0x082552E8);
void * const CScriptCompiler__ResolveDebuggingInformationForIdentifier = reinterpret_cast<void*>(0x08253C64);
void * const CScriptCompiler__ResolveLabels = reinterpret_cast<void*>(0x082497A0);
void * const CScriptCompiler__SetAutomaticCleanUpAfterCompiles = reinterpret_cast<void*>(0x08247F58);
void * const CScriptCompiler__SetCompileConditionalFile = reinterpret_cast<void*>(0x08247F30);
void * const CScriptCompiler__SetCompileConditionalOrMain = reinterpret_cast<void*>(0x08247F44);
void * const CScriptCompiler__SetCompileDebugLevel = reinterpret_cast<void*>(0x08247EC8);
void * const CScriptCompiler__SetCompileSymbolicOutput = reinterpret_cast<void*>(0x08247EF0);
void * const CScriptCompiler__SetGenerateDebuggerOutput = reinterpret_cast<void*>(0x08247EDC);
void * const CScriptCompiler__SetIdentifierSpecification = reinterpret_cast<void*>(0x08245B64);
void * const CScriptCompiler__SetOptimizeBinaryCodeLength = reinterpret_cast<void*>(0x08247F1C);
void * const CScriptCompiler__SetOutputAlias = reinterpret_cast<void*>(0x08247F04);
void * const CScriptCompiler__ShutDown = reinterpret_cast<void*>(0x08243A24);
void * const CScriptCompiler__ShutdownIncludeFile = reinterpret_cast<void*>(0x08247DE8);
void * const CScriptCompiler__StartLineNumberAtBinaryInstruction = reinterpret_cast<void*>(0x0825527C);
void * const CScriptCompiler__Test_CompareDirectoryContents = reinterpret_cast<void*>(0x08246E3C);
void * const CScriptCompiler__Test_CompareFileInclusion = reinterpret_cast<void*>(0x08247610);
void * const CScriptCompiler__Test_CompileAllScriptsInDirectory = reinterpret_cast<void*>(0x0824665C);
void * const CScriptCompiler__TestIdentifierToken = reinterpret_cast<void*>(0x082567F4);
void * const CScriptCompiler__TokenInitialize = reinterpret_cast<void*>(0x0825E30C);
void * const CScriptCompiler__TraverseTreeForSwitchLabels = reinterpret_cast<void*>(0x08249C98);
void * const CScriptCompiler__ValidateLocationOfIdentifier = reinterpret_cast<void*>(0x082494A0);
void * const CScriptCompiler__WalkParseTree = reinterpret_cast<void*>(0x08253210);
void * const CScriptCompiler__WriteDebuggerOutputToFile = reinterpret_cast<void*>(0x08254014);
void * const CScriptCompiler__WriteFinalCodeToFile = reinterpret_cast<void*>(0x08248670);
void * const CScriptCompiler__WriteResolvedOutput = reinterpret_cast<void*>(0x0824A580);

void * const CScriptCompilerIdListEntry__CScriptCompilerIdListEntryCtor = reinterpret_cast<void*>(0x082427EC);
void * const CScriptCompilerIdListEntry__CScriptCompilerIdListEntryDtor = reinterpret_cast<void*>(0x082428FC);
void * const CScriptCompilerIdListEntry__ExpandParameterSpace = reinterpret_cast<void*>(0x08242A38);

void * const CScriptEvent__CScriptEventCtor = reinterpret_cast<void*>(0x080610BC);
void * const CScriptEvent__CScriptEventDtor = reinterpret_cast<void*>(0x0806189C);
void * const CScriptEvent____eq = reinterpret_cast<void*>(0x080617B0);
void * const CScriptEvent____ne = reinterpret_cast<void*>(0x08061B4C);
void * const CScriptEvent__CopyScriptEvent = reinterpret_cast<void*>(0x08061164);
void * const CScriptEvent__GetFloat = reinterpret_cast<void*>(0x080619A4);
void * const CScriptEvent__GetInteger = reinterpret_cast<void*>(0x08061938);
void * const CScriptEvent__GetObjectID = reinterpret_cast<void*>(0x08061A10);
void * const CScriptEvent__GetString = reinterpret_cast<void*>(0x08061A80);
void * const CScriptEvent__LoadEvent = reinterpret_cast<void*>(0x0806147C);
void * const CScriptEvent__SaveEvent = reinterpret_cast<void*>(0x080612A8);
void * const CScriptEvent__SetFloat = reinterpret_cast<void*>(0x080619D0);
void * const CScriptEvent__SetInteger = reinterpret_cast<void*>(0x08061964);
void * const CScriptEvent__SetObjectID = reinterpret_cast<void*>(0x08061A40);
void * const CScriptEvent__SetString = reinterpret_cast<void*>(0x08061AC8);

void * const CScriptLocation__CScriptLocationCtor = reinterpret_cast<void*>(0x081D433C);
void * const CScriptLocation__CScriptLocationDtor = reinterpret_cast<void*>(0x081D4378);
void * const CScriptLocation__CopyScriptLocation = reinterpret_cast<void*>(0x081D4394);
void * const CScriptLocation__LoadLocation = reinterpret_cast<void*>(0x081C86F8);
void * const CScriptLocation__SaveLocation = reinterpret_cast<void*>(0x081D43C8);

void * const CScriptSourceFile__CScriptSourceFileCtor = reinterpret_cast<void*>(0x08247B24);
void * const CScriptSourceFile__CScriptSourceFileDtor = reinterpret_cast<void*>(0x08248124);
void * const CScriptSourceFile__LoadScript = reinterpret_cast<void*>(0x08247B44);
void * const CScriptSourceFile__UnloadScript = reinterpret_cast<void*>(0x08247BAC);

void * const CScriptTalent__CScriptTalentCtor = reinterpret_cast<void*>(0x081D445C);
void * const CScriptTalent__CScriptTalentDtor = reinterpret_cast<void*>(0x081D448C);
void * const CScriptTalent__CopyScriptTalent = reinterpret_cast<void*>(0x081D44A8);
void * const CScriptTalent__Equals = reinterpret_cast<void*>(0x081D4644);
void * const CScriptTalent__LoadTalent = reinterpret_cast<void*>(0x081D457C);
void * const CScriptTalent__SaveTalent = reinterpret_cast<void*>(0x081D44E0);

void * const CServerAIBodyBagInfo__LoadBodyBag = reinterpret_cast<void*>(0x080985D8);
void * const CServerAIBodyBagInfo__SaveBodyBag = reinterpret_cast<void*>(0x08098578);

void * const CServerAIEventNode__LoadNode = reinterpret_cast<void*>(0x08097A4C);
void * const CServerAIEventNode__SaveNode = reinterpret_cast<void*>(0x0809774C);

void * const CServerAIList__CServerAIListCtor = reinterpret_cast<void*>(0x08097F7C);
void * const CServerAIList__CServerAIListDtor = reinterpret_cast<void*>(0x08097FA0);
void * const CServerAIList__AddObject = reinterpret_cast<void*>(0x08097FD4);
void * const CServerAIList__GetNextObject = reinterpret_cast<void*>(0x08098038);
void * const CServerAIList__RemoveObject = reinterpret_cast<void*>(0x08097FF0);

void * const CServerAIMaster__CServerAIMasterCtor = reinterpret_cast<void*>(0x08095A9C);
void * const CServerAIMaster__CServerAIMasterDtor = reinterpret_cast<void*>(0x08095C28);
void * const CServerAIMaster__AddEventAbsoluteTime = reinterpret_cast<void*>(0x0809813C);
void * const CServerAIMaster__AddEventAbsoluteTimeViaTail = reinterpret_cast<void*>(0x0809820C);
void * const CServerAIMaster__AddEventDeltaTime = reinterpret_cast<void*>(0x08096388);
void * const CServerAIMaster__AddObject = reinterpret_cast<void*>(0x080980E0);
void * const CServerAIMaster__AdjustTargetAndWitnessReputations = reinterpret_cast<void*>(0x08096480);
void * const CServerAIMaster__ClearEventQueue = reinterpret_cast<void*>(0x080980A4);
void * const CServerAIMaster__DeleteEventData = reinterpret_cast<void*>(0x080976C0);
void * const CServerAIMaster__EventPending = reinterpret_cast<void*>(0x080982DC);
void * const CServerAIMaster__GetPendingEvent = reinterpret_cast<void*>(0x08098334);
void * const CServerAIMaster__LoadEventQueue = reinterpret_cast<void*>(0x0809844C);
void * const CServerAIMaster__LoadReputationAdjustments = reinterpret_cast<void*>(0x08096DE0);
void * const CServerAIMaster__OnEffectApplied = reinterpret_cast<void*>(0x080984E4);
void * const CServerAIMaster__OnEffectRemoved = reinterpret_cast<void*>(0x08098508);
void * const CServerAIMaster__OnItemPropertyApplied = reinterpret_cast<void*>(0x08098528);
void * const CServerAIMaster__OnItemPropertyRemoved = reinterpret_cast<void*>(0x08098550);
void * const CServerAIMaster__RemoveObject = reinterpret_cast<void*>(0x080962A8);
void * const CServerAIMaster__SaveEventQueue = reinterpret_cast<void*>(0x080983A8);
void * const CServerAIMaster__SetAILevel = reinterpret_cast<void*>(0x08096318);
void * const CServerAIMaster__SetExoAppInternal = reinterpret_cast<void*>(0x08098094);
void * const CServerAIMaster__UpdateState = reinterpret_cast<void*>(0x08095D60);

void * const CServerExoApp__CServerExoAppCtor = reinterpret_cast<void*>(0x080B1A14);
void * const CServerExoApp__CServerExoAppDtor = reinterpret_cast<void*>(0x080B1A68);
void * const CServerExoApp__AddCDKeyToBannedList = reinterpret_cast<void*>(0x080B27B8);
void * const CServerExoApp__AddCharListRequest = reinterpret_cast<void*>(0x080B26B0);
void * const CServerExoApp__AddIPToBannedList = reinterpret_cast<void*>(0x080B26F0);
void * const CServerExoApp__AddPlayerNameToBannedList = reinterpret_cast<void*>(0x080B2754);
void * const CServerExoApp__AddSubNetProfileSendSize = reinterpret_cast<void*>(0x080B2B24);
void * const CServerExoApp__AddToExclusionList = reinterpret_cast<void*>(0x080B25E0);
void * const CServerExoApp__AdmitNetworkAddress = reinterpret_cast<void*>(0x080B2068);
void * const CServerExoApp__AdmitPlayerName = reinterpret_cast<void*>(0x080B2148);
void * const CServerExoApp__ContinueMessageProcessing = reinterpret_cast<void*>(0x080B21E4);
void * const CServerExoApp__ExportAllPlayers = reinterpret_cast<void*>(0x080B1C74);
void * const CServerExoApp__GetActiveExclusionList = reinterpret_cast<void*>(0x080B2618);
void * const CServerExoApp__GetActivePauseState = reinterpret_cast<void*>(0x080B25A8);
void * const CServerExoApp__GetActiveTimer = reinterpret_cast<void*>(0x080B1FA4);
void * const CServerExoApp__GetApplicationId = reinterpret_cast<void*>(0x080B26C8);
void * const CServerExoApp__GetAreaByGameObjectID = reinterpret_cast<void*>(0x080B1E10);
void * const CServerExoApp__GetAreaOfEffectByGameObjectID = reinterpret_cast<void*>(0x080B1E70);
void * const CServerExoApp__GetAutoSavePending = reinterpret_cast<void*>(0x080B1CF0);
void * const CServerExoApp__GetBannedListString = reinterpret_cast<void*>(0x080B22F0);
void * const CServerExoApp__GetCDKeys = reinterpret_cast<void*>(0x080B2C78);
void * const CServerExoApp__GetClientObjectByObjectId = reinterpret_cast<void*>(0x080B24B8);
void * const CServerExoApp__GetClientObjectByPlayerId = reinterpret_cast<void*>(0x080B24D0);
void * const CServerExoApp__GetCodeBase = reinterpret_cast<void*>(0x080B2424);
void * const CServerExoApp__GetConnectionLib = reinterpret_cast<void*>(0x080B2410);
void * const CServerExoApp__GetCreatureByGameObjectID = reinterpret_cast<void*>(0x080B1DE0);
void * const CServerExoApp__GetCreatureDeathLogging = reinterpret_cast<void*>(0x080B2B3C);
void * const CServerExoApp__GetDebugMode = reinterpret_cast<void*>(0x080B200C);
void * const CServerExoApp__GetDifficultyOption = reinterpret_cast<void*>(0x080B2698);
void * const CServerExoApp__GetDoorByGameObjectID = reinterpret_cast<void*>(0x080B1E58);
void * const CServerExoApp__GetEncounterByGameObjectID = reinterpret_cast<void*>(0x080B1EA0);
void * const CServerExoApp__GetExoAppInternal = reinterpret_cast<void*>(0x080B2BB4);
void * const CServerExoApp__GetExportCharacterPending = reinterpret_cast<void*>(0x080B1C24);
void * const CServerExoApp__GetExportPlayersCharacter = reinterpret_cast<void*>(0x080B1C60);
void * const CServerExoApp__GetExtendedServerInfo__0 = reinterpret_cast<void*>(0x080B1AC4);
void * const CServerExoApp__GetExtendedServerInfo__1 = reinterpret_cast<void*>(0x080B2BC8);
void * const CServerExoApp__GetFactionOfObject = reinterpret_cast<void*>(0x080B2558);
void * const CServerExoApp__GetFirstPCObject = reinterpret_cast<void*>(0x080B2A8C);
void * const CServerExoApp__GetFPS = reinterpret_cast<void*>(0x080B2BD0);
void * const CServerExoApp__GetGameObject = reinterpret_cast<void*>(0x080B1D98);
void * const CServerExoApp__GetGameSpyEnabled = reinterpret_cast<void*>(0x080B2AF8);
void * const CServerExoApp__GetImportingChar = reinterpret_cast<void*>(0x080B1CB4);
void * const CServerExoApp__GetIsCDKeyOnBannedList = reinterpret_cast<void*>(0x080B2A20);
void * const CServerExoApp__GetIsControlledByPlayer = reinterpret_cast<void*>(0x080B2534);
void * const CServerExoApp__GetIsIPOnBannedList = reinterpret_cast<void*>(0x080B2948);
void * const CServerExoApp__GetIsMultiPlayer = reinterpret_cast<void*>(0x080B2AD4);
void * const CServerExoApp__GetIsPlayerNameOnBannedList = reinterpret_cast<void*>(0x080B29B4);
void * const CServerExoApp__GetItemByGameObjectID = reinterpret_cast<void*>(0x080B1DC8);
void * const CServerExoApp__GetLoadingModule = reinterpret_cast<void*>(0x080B1C8C);
void * const CServerExoApp__GetModule = reinterpret_cast<void*>(0x080B1ADC);
void * const CServerExoApp__GetModuleByGameObjectID = reinterpret_cast<void*>(0x080B1DF8);
void * const CServerExoApp__GetModuleDescription = reinterpret_cast<void*>(0x080B18F4);
void * const CServerExoApp__GetModuleLanguage = reinterpret_cast<void*>(0x080B1F00);
void * const CServerExoApp__GetModuleName = reinterpret_cast<void*>(0x080B1AF4);
void * const CServerExoApp__GetMoveToModulePending = reinterpret_cast<void*>(0x080B1B94);
void * const CServerExoApp__GetMoveToModuleString = reinterpret_cast<void*>(0x080B1BC8);
void * const CServerExoApp__GetMultiplayerEnabled = reinterpret_cast<void*>(0x080B2660);
void * const CServerExoApp__GetNetLayer = reinterpret_cast<void*>(0x080B1F40);
void * const CServerExoApp__GetNextPCObject = reinterpret_cast<void*>(0x080B2AA4);
void * const CServerExoApp__GetNWSMessage = reinterpret_cast<void*>(0x080B1F54);
void * const CServerExoApp__GetObjectArray = reinterpret_cast<void*>(0x080B1D84);
void * const CServerExoApp__GetPauseState = reinterpret_cast<void*>(0x080B258C);
void * const CServerExoApp__GetPauseTimer = reinterpret_cast<void*>(0x080B1FE4);
void * const CServerExoApp__GetPlaceableByGameObjectID = reinterpret_cast<void*>(0x080B1E40);
void * const CServerExoApp__GetPlaceMeshManager = reinterpret_cast<void*>(0x080B1F90);
void * const CServerExoApp__GetPlayerAddressData = reinterpret_cast<void*>(0x080B2438);
void * const CServerExoApp__GetPlayerIDByGameObjectID = reinterpret_cast<void*>(0x080B1ED0);
void * const CServerExoApp__GetPlayerLanguage = reinterpret_cast<void*>(0x080B1EE8);
void * const CServerExoApp__GetPlayerList = reinterpret_cast<void*>(0x080B1F2C);
void * const CServerExoApp__GetPlayerListString = reinterpret_cast<void*>(0x080B22CC);
void * const CServerExoApp__GetPortalListString = reinterpret_cast<void*>(0x080B2314);
void * const CServerExoApp__GetReloadModuleWhenEmpty = reinterpret_cast<void*>(0x080B2684);
void * const CServerExoApp__GetServerAIMaster = reinterpret_cast<void*>(0x080B1F18);
void * const CServerExoApp__GetServerInfo = reinterpret_cast<void*>(0x080B1AB0);
void * const CServerExoApp__GetServerMode = reinterpret_cast<void*>(0x080B1F7C);
void * const CServerExoApp__GetSoundObjectByGameObjectID = reinterpret_cast<void*>(0x080B1EB8);
void * const CServerExoApp__GetStoreByGameObjectID = reinterpret_cast<void*>(0x080B1DB0);
void * const CServerExoApp__GetSysAdminList = reinterpret_cast<void*>(0x080B1F68);
void * const CServerExoApp__GetTimestopTimer = reinterpret_cast<void*>(0x080B1FD0);
void * const CServerExoApp__GetTriggerByGameObjectID = reinterpret_cast<void*>(0x080B1E28);
void * const CServerExoApp__GetWaypointByGameObjectID = reinterpret_cast<void*>(0x080B1E88);
void * const CServerExoApp__GetWorldTimer = reinterpret_cast<void*>(0x080B1FBC);
void * const CServerExoApp__GSClientAddServer = reinterpret_cast<void*>(0x080B2C48);
void * const CServerExoApp__GSClientChatMessage = reinterpret_cast<void*>(0x080B2BE4);
void * const CServerExoApp__GSClientClearServers = reinterpret_cast<void*>(0x080B2C60);
void * const CServerExoApp__GSClientGroupRoomAdded = reinterpret_cast<void*>(0x080B2BDC);
void * const CServerExoApp__GSClientRemoveServer = reinterpret_cast<void*>(0x080B2C50);
void * const CServerExoApp__GSClientUpdateConnectionPhase = reinterpret_cast<void*>(0x080B2C68);
void * const CServerExoApp__GSClientUpdateServer = reinterpret_cast<void*>(0x080B2C58);
void * const CServerExoApp__HandleGameSpyToServerMessage = reinterpret_cast<void*>(0x080B23F8);
void * const CServerExoApp__HandleMessage = reinterpret_cast<void*>(0x080B2020);
void * const CServerExoApp__Initialize = reinterpret_cast<void*>(0x080B2038);
void * const CServerExoApp__InitiateModuleForPlayer = reinterpret_cast<void*>(0x080B2504);
void * const CServerExoApp__IsOnActiveExclusionList = reinterpret_cast<void*>(0x080B2630);
void * const CServerExoApp__IsOnExclusionList = reinterpret_cast<void*>(0x080B26D8);
void * const CServerExoApp__LoadCharacterFinish = reinterpret_cast<void*>(0x080B1D54);
void * const CServerExoApp__LoadCharacterStart = reinterpret_cast<void*>(0x080B1D04);
void * const CServerExoApp__LoadGame = reinterpret_cast<void*>(0x080B1B50);
void * const CServerExoApp__LoadModule = reinterpret_cast<void*>(0x080B2244);
void * const CServerExoApp__LoadPrimaryPlayer = reinterpret_cast<void*>(0x080B1D6C);
void * const CServerExoApp__MainLoop = reinterpret_cast<void*>(0x080B2050);
void * const CServerExoApp__MovePlayerToArea = reinterpret_cast<void*>(0x080B251C);
void * const CServerExoApp__OnCDChange = reinterpret_cast<void*>(0x080B2338);
void * const CServerExoApp__OnExit = reinterpret_cast<void*>(0x080B2350);
void * const CServerExoApp__OnGainFocus = reinterpret_cast<void*>(0x080B2368);
void * const CServerExoApp__OnLostFocus = reinterpret_cast<void*>(0x080B2380);
void * const CServerExoApp__OnVideoChange = reinterpret_cast<void*>(0x080B2398);
void * const CServerExoApp__PlayerListChange = reinterpret_cast<void*>(0x080B21B4);
void * const CServerExoApp__PushMessageOverWall = reinterpret_cast<void*>(0x080B2ABC);
void * const CServerExoApp__RemoveCDKeyFromBannedList = reinterpret_cast<void*>(0x080B28E4);
void * const CServerExoApp__RemoveFromExclusionList = reinterpret_cast<void*>(0x080B25FC);
void * const CServerExoApp__RemoveIPFromBannedList = reinterpret_cast<void*>(0x080B281C);
void * const CServerExoApp__RemovePCFromWorld = reinterpret_cast<void*>(0x080B21FC);
void * const CServerExoApp__RemovePlayerNameFromBannedList = reinterpret_cast<void*>(0x080B2880);
void * const CServerExoApp__ResolvePlayerByFirstName = reinterpret_cast<void*>(0x080B2648);
void * const CServerExoApp__RestartNetLayer = reinterpret_cast<void*>(0x080B2488);
void * const CServerExoApp__RunModule = reinterpret_cast<void*>(0x080B22B4);
void * const CServerExoApp__SaveGame = reinterpret_cast<void*>(0x080B1B18);
void * const CServerExoApp__SendCharacterQuery = reinterpret_cast<void*>(0x080B1B38);
void * const CServerExoApp__SetApplicationIdsMatch = reinterpret_cast<void*>(0x080B2C70);
void * const CServerExoApp__SetAutoSavePending = reinterpret_cast<void*>(0x080B1CDC);
void * const CServerExoApp__SetDebugMode = reinterpret_cast<void*>(0x080B1FF8);
void * const CServerExoApp__SetEndGamePending = reinterpret_cast<void*>(0x080B1BF0);
void * const CServerExoApp__SetEndGameString = reinterpret_cast<void*>(0x080B1C04);
void * const CServerExoApp__SetExportCharacterPending = reinterpret_cast<void*>(0x080B1C38);
void * const CServerExoApp__SetExportPlayersCharacter = reinterpret_cast<void*>(0x080B1C4C);
void * const CServerExoApp__SetForceUpdate = reinterpret_cast<void*>(0x080B23E0);
void * const CServerExoApp__SetGameSpyEnabled = reinterpret_cast<void*>(0x080B2AE4);
void * const CServerExoApp__SetGameSpyReporting = reinterpret_cast<void*>(0x080B23B0);
void * const CServerExoApp__SetImportingChar = reinterpret_cast<void*>(0x080B1CC8);
void * const CServerExoApp__SetLoadingModule = reinterpret_cast<void*>(0x080B1CA0);
void * const CServerExoApp__SetMoveToModulePending = reinterpret_cast<void*>(0x080B1B80);
void * const CServerExoApp__SetMoveToModuleString = reinterpret_cast<void*>(0x080B1BA8);
void * const CServerExoApp__SetNetworkAddressBan = reinterpret_cast<void*>(0x080B20D8);
void * const CServerExoApp__SetPauseState = reinterpret_cast<void*>(0x080B25C0);
void * const CServerExoApp__SetReloadModuleWhenEmpty = reinterpret_cast<void*>(0x080B2670);
void * const CServerExoApp__SetWeGotDisconnected = reinterpret_cast<void*>(0x080B2C80);
void * const CServerExoApp__Shutdown = reinterpret_cast<void*>(0x080B2214);
void * const CServerExoApp__ShutdownNetLayer = reinterpret_cast<void*>(0x080B2470);
void * const CServerExoApp__ShutDownToMainMenu = reinterpret_cast<void*>(0x080B2BC0);
void * const CServerExoApp__StartNewModule = reinterpret_cast<void*>(0x080B1B68);
void * const CServerExoApp__StartServices = reinterpret_cast<void*>(0x080B2458);
void * const CServerExoApp__StopServices = reinterpret_cast<void*>(0x080B24A0);
void * const CServerExoApp__StripColorTokens = reinterpret_cast<void*>(0x080B2B0C);
void * const CServerExoApp__TogglePauseState = reinterpret_cast<void*>(0x080B2570);
void * const CServerExoApp__Uninitialize = reinterpret_cast<void*>(0x080B23C8);
void * const CServerExoApp__UnloadModule = reinterpret_cast<void*>(0x080B222C);
void * const CServerExoApp__ValidatePlayerLogin = reinterpret_cast<void*>(0x080B24EC);
void * const CServerExoApp__VomitServerOptionsToLog = reinterpret_cast<void*>(0x080B21CC);

void * const CServerExoAppInternal__CServerExoAppInternalCtor = reinterpret_cast<void*>(0x08098854);
void * const CServerExoAppInternal__CServerExoAppInternalDtor = reinterpret_cast<void*>(0x08098C9C);
void * const CServerExoAppInternal__AddCDKeyToBannedList = reinterpret_cast<void*>(0x080B0EB4);
void * const CServerExoAppInternal__AddCharListRequest = reinterpret_cast<void*>(0x080B0C80);
void * const CServerExoAppInternal__AddIPToBannedList = reinterpret_cast<void*>(0x080B0DC4);
void * const CServerExoAppInternal__AddPendingAuthorization = reinterpret_cast<void*>(0x080B07FC);
void * const CServerExoAppInternal__AddPlayerNameToBannedList = reinterpret_cast<void*>(0x080B0E3C);
void * const CServerExoAppInternal__AddSubNetProfile = reinterpret_cast<void*>(0x080AF7AC);
void * const CServerExoAppInternal__AddSubNetProfileRecvSize = reinterpret_cast<void*>(0x080B131C);
void * const CServerExoAppInternal__AddSubNetProfileSendSize = reinterpret_cast<void*>(0x080B12A4);
void * const CServerExoAppInternal__AddToExclusionList = reinterpret_cast<void*>(0x080ADF8C);
void * const CServerExoAppInternal__AdmitNetworkAddress = reinterpret_cast<void*>(0x080AFCD0);
void * const CServerExoAppInternal__AdmitPlayerName = reinterpret_cast<void*>(0x080AFD00);
void * const CServerExoAppInternal__CheckMasterServerTranslation = reinterpret_cast<void*>(0x080AE270);
void * const CServerExoAppInternal__ConnectionLibMainLoop = reinterpret_cast<void*>(0x080AB720);
void * const CServerExoAppInternal__ContinueMessageProcessing = reinterpret_cast<void*>(0x080B02E4);
void * const CServerExoAppInternal__CopyModuleToCurrentGame = reinterpret_cast<void*>(0x0809E430);
void * const CServerExoAppInternal__CreateServerVaultLostAndFound = reinterpret_cast<void*>(0x080B1214);
void * const CServerExoAppInternal__DealWithLoadGameError = reinterpret_cast<void*>(0x080A10F4);
void * const CServerExoAppInternal__EndGame = reinterpret_cast<void*>(0x08099A90);
void * const CServerExoAppInternal__ExportAllPlayers = reinterpret_cast<void*>(0x080AFEB0);
void * const CServerExoAppInternal__ExportPlayer = reinterpret_cast<void*>(0x080AFF10);
void * const CServerExoAppInternal__GetActiveExclusionList = reinterpret_cast<void*>(0x080AE088);
void * const CServerExoAppInternal__GetActivePauseState = reinterpret_cast<void*>(0x080B0A38);
void * const CServerExoAppInternal__GetActiveTimer = reinterpret_cast<void*>(0x080ADA7C);
void * const CServerExoAppInternal__GetAreaByGameObjectID = reinterpret_cast<void*>(0x080B0484);
void * const CServerExoAppInternal__GetAreaOfEffectByGameObjectID = reinterpret_cast<void*>(0x080B05D4);
void * const CServerExoAppInternal__GetBannedListString = reinterpret_cast<void*>(0x080AD4B0);
void * const CServerExoAppInternal__GetClientObjectByObjectId = reinterpret_cast<void*>(0x080AFD30);
void * const CServerExoAppInternal__GetClientObjectByPlayerId = reinterpret_cast<void*>(0x08098E94);
void * const CServerExoAppInternal__GetCreatureByGameObjectID = reinterpret_cast<void*>(0x080B03DC);
void * const CServerExoAppInternal__GetDifficultyOption = reinterpret_cast<void*>(0x080B0C58);
void * const CServerExoAppInternal__GetDoorByGameObjectID = reinterpret_cast<void*>(0x080B0580);
void * const CServerExoAppInternal__GetEncounterByGameObjectID = reinterpret_cast<void*>(0x080B067C);
void * const CServerExoAppInternal__GetExtendedServerInfo = reinterpret_cast<void*>(0x080A0318);
void * const CServerExoAppInternal__GetFactionOfObject = reinterpret_cast<void*>(0x080AC4D4);
void * const CServerExoAppInternal__GetFirstPCObject = reinterpret_cast<void*>(0x080B1100);
void * const CServerExoAppInternal__GetGameObject = reinterpret_cast<void*>(0x080B02FC);
void * const CServerExoAppInternal__GetIsCDKeyOnBannedList = reinterpret_cast<void*>(0x080AEF04);
void * const CServerExoAppInternal__GetIsIPOnBannedList = reinterpret_cast<void*>(0x080AE8DC);
void * const CServerExoAppInternal__GetIsPlayerNameOnBannedList = reinterpret_cast<void*>(0x080AEC10);
void * const CServerExoAppInternal__GetItemByGameObjectID = reinterpret_cast<void*>(0x080B0388);
void * const CServerExoAppInternal__GetModule = reinterpret_cast<void*>(0x080AFDC8);
void * const CServerExoAppInternal__GetModuleByGameObjectID = reinterpret_cast<void*>(0x080B0430);
void * const CServerExoAppInternal__GetModuleExists = reinterpret_cast<void*>(0x0809FD64);
void * const CServerExoAppInternal__GetModuleLanguage = reinterpret_cast<void*>(0x080B0790);
void * const CServerExoAppInternal__GetModuleName = reinterpret_cast<void*>(0x08098F58);
void * const CServerExoAppInternal__GetNextPCObject = reinterpret_cast<void*>(0x080B117C);
void * const CServerExoAppInternal__GetPauseState = reinterpret_cast<void*>(0x080B0958);
void * const CServerExoAppInternal__GetPlaceableByGameObjectID = reinterpret_cast<void*>(0x080B052C);
void * const CServerExoAppInternal__GetPlayerAddressData = reinterpret_cast<void*>(0x080B0000);
void * const CServerExoAppInternal__GetPlayerIDByGameObjectID = reinterpret_cast<void*>(0x080B0BB0);
void * const CServerExoAppInternal__GetPlayerLanguage = reinterpret_cast<void*>(0x080B0724);
void * const CServerExoAppInternal__GetPlayerListString = reinterpret_cast<void*>(0x080AC5E8);
void * const CServerExoAppInternal__GetPortalListString = reinterpret_cast<void*>(0x080B08A8);
void * const CServerExoAppInternal__GetServerInfoFromIniFile = reinterpret_cast<void*>(0x080A5570);
void * const CServerExoAppInternal__GetSoundObjectByGameObjectID = reinterpret_cast<void*>(0x080B06D0);
void * const CServerExoAppInternal__GetStoreByGameObjectID = reinterpret_cast<void*>(0x080B0334);
void * const CServerExoAppInternal__GetTriggerByGameObjectID = reinterpret_cast<void*>(0x080B04D8);
void * const CServerExoAppInternal__GetWaypointByGameObjectID = reinterpret_cast<void*>(0x080B0628);
void * const CServerExoAppInternal__HandleGameSpyToServerMessage = reinterpret_cast<void*>(0x080AB024);
void * const CServerExoAppInternal__HandleMessage = reinterpret_cast<void*>(0x0809DF80);
void * const CServerExoAppInternal__Initialize = reinterpret_cast<void*>(0x080AFFC8);
void * const CServerExoAppInternal__InitializeNetLayer = reinterpret_cast<void*>(0x080A5238);
void * const CServerExoAppInternal__InitiateModuleForPlayer = reinterpret_cast<void*>(0x080A1284);
void * const CServerExoAppInternal__IsOnActiveExclusionList = reinterpret_cast<void*>(0x080B0B44);
void * const CServerExoAppInternal__IsOnExclusionList = reinterpret_cast<void*>(0x080ADE9C);
void * const CServerExoAppInternal__LoadCharacterFinish = reinterpret_cast<void*>(0x0809DA64);
void * const CServerExoAppInternal__LoadCharacterStart = reinterpret_cast<void*>(0x0809CBD4);
void * const CServerExoAppInternal__LoadGame = reinterpret_cast<void*>(0x08099760);
void * const CServerExoAppInternal__LoadModule = reinterpret_cast<void*>(0x0809E4E8);
void * const CServerExoAppInternal__LoadPrimaryPlayer = reinterpret_cast<void*>(0x080AFE64);
void * const CServerExoAppInternal__MainLoop = reinterpret_cast<void*>(0x080A0474);
void * const CServerExoAppInternal__MarkUpdateClientsForObject = reinterpret_cast<void*>(0x080B0104);
void * const CServerExoAppInternal__MovePlayerToArea = reinterpret_cast<void*>(0x080A1B08);
void * const CServerExoAppInternal__OnCDChange = reinterpret_cast<void*>(0x080B0024);
void * const CServerExoAppInternal__OnExit = reinterpret_cast<void*>(0x080B002C);
void * const CServerExoAppInternal__OnGainFocus = reinterpret_cast<void*>(0x080B0034);
void * const CServerExoAppInternal__OnLostFocus = reinterpret_cast<void*>(0x080B003C);
void * const CServerExoAppInternal__OnVideoChange = reinterpret_cast<void*>(0x080B0044);
void * const CServerExoAppInternal__PlayerListChange = reinterpret_cast<void*>(0x080A1D18);
void * const CServerExoAppInternal__PushMessageOverWall = reinterpret_cast<void*>(0x080B11E4);
void * const CServerExoAppInternal__ReadBannedLists = reinterpret_cast<void*>(0x080A9910);
void * const CServerExoAppInternal__RemoveCDKeyFromBannedList = reinterpret_cast<void*>(0x080B1064);
void * const CServerExoAppInternal__RemoveFromExclusionList = reinterpret_cast<void*>(0x080B0A5C);
void * const CServerExoAppInternal__RemoveIPFromBannedList = reinterpret_cast<void*>(0x080B0F2C);
void * const CServerExoAppInternal__RemovePCFromWorld = reinterpret_cast<void*>(0x080A4C94);
void * const CServerExoAppInternal__RemovePendingAuthorization = reinterpret_cast<void*>(0x080B0854);
void * const CServerExoAppInternal__RemovePlayerNameFromBannedList = reinterpret_cast<void*>(0x080B0FC8);
void * const CServerExoAppInternal__RemoveSubNetProfile = reinterpret_cast<void*>(0x080AF90C);
void * const CServerExoAppInternal__ReprocessExclusionListActions = reinterpret_cast<void*>(0x080B0970);
void * const CServerExoAppInternal__ResolvePlayerByFirstName = reinterpret_cast<void*>(0x080AE0D4);
void * const CServerExoAppInternal__RestartNetLayer = reinterpret_cast<void*>(0x080B00F8);
void * const CServerExoAppInternal__RunModule = reinterpret_cast<void*>(0x080A28A4);
void * const CServerExoAppInternal__SaveGame = reinterpret_cast<void*>(0x0809902C);
void * const CServerExoAppInternal__SendCharacterQuery = reinterpret_cast<void*>(0x080AFF6C);
void * const CServerExoAppInternal__SendEnteringStartNewModuleMessage = reinterpret_cast<void*>(0x080AFE0C);
void * const CServerExoAppInternal__SendExitingStartNewModuleMessage = reinterpret_cast<void*>(0x080AFE34);
void * const CServerExoAppInternal__SendHeartbeatToMasterServer = reinterpret_cast<void*>(0x080AE4E4);
void * const CServerExoAppInternal__SendStartStallEvent = reinterpret_cast<void*>(0x080AFFD4);
void * const CServerExoAppInternal__SetEstimatedSaveSize = reinterpret_cast<void*>(0x080A01A8);
void * const CServerExoAppInternal__SetGameSpyReporting = reinterpret_cast<void*>(0x080B0798);
void * const CServerExoAppInternal__SetNetworkAddressBan = reinterpret_cast<void*>(0x080B004C);
void * const CServerExoAppInternal__SetPauseState = reinterpret_cast<void*>(0x080ADB18);
void * const CServerExoAppInternal__Shutdown = reinterpret_cast<void*>(0x080A4FD0);
void * const CServerExoAppInternal__ShutdownNetLayer = reinterpret_cast<void*>(0x080B00C0);
void * const CServerExoAppInternal__ShutdownServerProfiles = reinterpret_cast<void*>(0x080AFB1C);
void * const CServerExoAppInternal__StallEventSaveGame = reinterpret_cast<void*>(0x080A0E64);
void * const CServerExoAppInternal__StartNewModule = reinterpret_cast<void*>(0x08099B68);
void * const CServerExoAppInternal__StartServices = reinterpret_cast<void*>(0x080A2AF8);
void * const CServerExoAppInternal__StartShutdownTimer = reinterpret_cast<void*>(0x080B0C98);
void * const CServerExoAppInternal__StopServices = reinterpret_cast<void*>(0x080A4524);
void * const CServerExoAppInternal__StorePlayerCharacters = reinterpret_cast<void*>(0x0809A8B4);
void * const CServerExoAppInternal__StripColorTokens = reinterpret_cast<void*>(0x080AF440);
void * const CServerExoAppInternal__Test_Unit_Script_Compile = reinterpret_cast<void*>(0x080AF110);
void * const CServerExoAppInternal__Test_Unit_Script_Run = reinterpret_cast<void*>(0x080AF2F0);
void * const CServerExoAppInternal__TogglePauseState = reinterpret_cast<void*>(0x080B0924);
void * const CServerExoAppInternal__Uninitialize = reinterpret_cast<void*>(0x080B0298);
void * const CServerExoAppInternal__UnloadModule = reinterpret_cast<void*>(0x0809E070);
void * const CServerExoAppInternal__UnlockBiowareModule = reinterpret_cast<void*>(0x08099C24);
void * const CServerExoAppInternal__UpdateAutoSaveTimer = reinterpret_cast<void*>(0x080AF018);
void * const CServerExoAppInternal__UpdateClientGameObjects = reinterpret_cast<void*>(0x080B021C);
void * const CServerExoAppInternal__UpdateClientGameObjectsForPlayer = reinterpret_cast<void*>(0x080A4A70);
void * const CServerExoAppInternal__UpdateClientsForObject = reinterpret_cast<void*>(0x080B0198);
void * const CServerExoAppInternal__UpdateLogHeartbeatTimer = reinterpret_cast<void*>(0x080B0CC8);
void * const CServerExoAppInternal__UpdateShutdownTimer = reinterpret_cast<void*>(0x080AE6F0);
void * const CServerExoAppInternal__UpdateWindowTitle = reinterpret_cast<void*>(0x080B00B8);
void * const CServerExoAppInternal__ValidateCreateServerCharacter = reinterpret_cast<void*>(0x0809AE78);
void * const CServerExoAppInternal__ValidatePlayerLogin = reinterpret_cast<void*>(0x080B02A0);
void * const CServerExoAppInternal__VomitServerOptionsToLog = reinterpret_cast<void*>(0x080AA870);
void * const CServerExoAppInternal__WriteServerInfoToIniFile = reinterpret_cast<void*>(0x080A9E14);

void * const CServerInfo__CServerInfoCtor = reinterpret_cast<void*>(0x080B2CB4);
void * const CServerInfo__FindOptionIndex = reinterpret_cast<void*>(0x080B3AA4);
void * const CServerInfo__SetDifficultyLevel = reinterpret_cast<void*>(0x080B3BC4);

void * const CStoreCustomer__CStoreCustomerCtor = reinterpret_cast<void*>(0x08085AD4);

void * const CTlkFile__CTlkFileCtor = reinterpret_cast<void*>(0x082B614C);
void * const CTlkFile__ReadHeader = reinterpret_cast<void*>(0x082B61F8);

void * const CTlkTable__CTlkTableCtor = reinterpret_cast<void*>(0x082B6238);
void * const CTlkTable__CTlkTableDtor = reinterpret_cast<void*>(0x082B4220);
void * const CTlkTable__ClearCustomTokens = reinterpret_cast<void*>(0x082B636C);
void * const CTlkTable__CloseFile = reinterpret_cast<void*>(0x082B6284);
void * const CTlkTable__CloseFileAlternate = reinterpret_cast<void*>(0x082B62E4);
void * const CTlkTable__ExoIsDBCSLeadByte = reinterpret_cast<void*>(0x082B6348);
void * const CTlkTable__FetchInternal = reinterpret_cast<void*>(0x082B4404);
void * const CTlkTable__GetLanguageVersion = reinterpret_cast<void*>(0x082B63C8);
void * const CTlkTable__GetSimpleString = reinterpret_cast<void*>(0x082B4AF8);
void * const CTlkTable__GetTokenValue = reinterpret_cast<void*>(0x082B6474);
void * const CTlkTable__OpenFile__0 = reinterpret_cast<void*>(0x082B4BA0);
void * const CTlkTable__OpenFile__1 = reinterpret_cast<void*>(0x082B553C);
void * const CTlkTable__OpenFileAlternate = reinterpret_cast<void*>(0x082B6350);
void * const CTlkTable__ParseStr = reinterpret_cast<void*>(0x082B5B24);
void * const CTlkTable__RemapFontName = reinterpret_cast<void*>(0x082B432C);
void * const CTlkTable__SetCustomToken = reinterpret_cast<void*>(0x082B58D4);
void * const CTlkTable__SetUseLargeDialogFont = reinterpret_cast<void*>(0x082B63EC);

void * const CTwoDimArrays__CTwoDimArraysCtor = reinterpret_cast<void*>(0x080B3C14);
void * const CTwoDimArrays__CTwoDimArraysDtor = reinterpret_cast<void*>(0x080B4030);
void * const CTwoDimArrays__ClearCached2DAs = reinterpret_cast<void*>(0x080B98A4);
void * const CTwoDimArrays__GetCached2DA = reinterpret_cast<void*>(0x080B92A8);
void * const CTwoDimArrays__GetEpicAttackBonus = reinterpret_cast<void*>(0x080B9A68);
void * const CTwoDimArrays__GetEpicFortSaveBonus = reinterpret_cast<void*>(0x080B9A04);
void * const CTwoDimArrays__GetEpicRefSaveBonus = reinterpret_cast<void*>(0x080B9A24);
void * const CTwoDimArrays__GetEpicWillSaveBonus = reinterpret_cast<void*>(0x080B9A48);
void * const CTwoDimArrays__GetIPRPCostTable = reinterpret_cast<void*>(0x080B99E0);
void * const CTwoDimArrays__Load2DArrays = reinterpret_cast<void*>(0x080B4CAC);
void * const CTwoDimArrays__LoadEpicAttacks = reinterpret_cast<void*>(0x080B91A0);
void * const CTwoDimArrays__LoadEpicSaves = reinterpret_cast<void*>(0x080B8FE4);
void * const CTwoDimArrays__LoadIPRPCostTables = reinterpret_cast<void*>(0x080B8D14);
void * const CTwoDimArrays__UnLoad2DArrays = reinterpret_cast<void*>(0x080B7728);
void * const CTwoDimArrays__UnLoadIPRPCostTables = reinterpret_cast<void*>(0x080B9964);
void * const CTwoDimArrays__Update2DACache = reinterpret_cast<void*>(0x080B9A88);

void * const CVirtualMachine__CVirtualMachineCtor = reinterpret_cast<void*>(0x0825F150);
void * const CVirtualMachine__CVirtualMachineDtor = reinterpret_cast<void*>(0x0825F9A0);
void * const CVirtualMachine__Debugger = reinterpret_cast<void*>(0x08263D98);
void * const CVirtualMachine__DeleteScript = reinterpret_cast<void*>(0x082641EC);
void * const CVirtualMachine__DeleteScriptSituation = reinterpret_cast<void*>(0x08264550);
void * const CVirtualMachine__ExecuteCode = reinterpret_cast<void*>(0x0825FD0C);
void * const CVirtualMachine__GetRunScriptReturnValue = reinterpret_cast<void*>(0x08264324);
void * const CVirtualMachine__GetScriptLog = reinterpret_cast<void*>(0x082642C4);
void * const CVirtualMachine__InitializeScript = reinterpret_cast<void*>(0x08264194);
void * const CVirtualMachine__LoadScriptSituation_Internal = reinterpret_cast<void*>(0x08263244);
void * const CVirtualMachine__PopInstructionPtr = reinterpret_cast<void*>(0x08264258);
void * const CVirtualMachine__PushInstructionPtr = reinterpret_cast<void*>(0x08264294);
void * const CVirtualMachine__ReadScriptFile = reinterpret_cast<void*>(0x08261C2C);
void * const CVirtualMachine__RunScript = reinterpret_cast<void*>(0x08261F94);
void * const CVirtualMachine__RunScriptFile = reinterpret_cast<void*>(0x0826276C);
void * const CVirtualMachine__RunScriptSituation = reinterpret_cast<void*>(0x08262534);
void * const CVirtualMachine__SaveScriptSituation_Internal = reinterpret_cast<void*>(0x0826306C);
void * const CVirtualMachine__SetCommandImplementer = reinterpret_cast<void*>(0x082645CC);
void * const CVirtualMachine__SetDebugGUIFlag = reinterpret_cast<void*>(0x082645B8);
void * const CVirtualMachine__SetUpScriptSituation = reinterpret_cast<void*>(0x08262920);
void * const CVirtualMachine__StackPopCommand_Internal = reinterpret_cast<void*>(0x08262EBC);
void * const CVirtualMachine__StackPopEngineStructure = reinterpret_cast<void*>(0x08262CFC);
void * const CVirtualMachine__StackPopFloat = reinterpret_cast<void*>(0x08262AD8);
void * const CVirtualMachine__StackPopInteger = reinterpret_cast<void*>(0x082629FC);
void * const CVirtualMachine__StackPopObject = reinterpret_cast<void*>(0x08262DFC);
void * const CVirtualMachine__StackPopString = reinterpret_cast<void*>(0x08262C18);
void * const CVirtualMachine__StackPopVector = reinterpret_cast<void*>(0x082643C8);
void * const CVirtualMachine__StackPushEngineStructure = reinterpret_cast<void*>(0x082644AC);
void * const CVirtualMachine__StackPushFloat = reinterpret_cast<void*>(0x08264388);
void * const CVirtualMachine__StackPushInteger = reinterpret_cast<void*>(0x0826434C);
void * const CVirtualMachine__StackPushObject = reinterpret_cast<void*>(0x08264514);
void * const CVirtualMachine__StackPushString = reinterpret_cast<void*>(0x08264430);
void * const CVirtualMachine__StackPushVector = reinterpret_cast<void*>(0x08262B98);
void * const CVirtualMachine__Test_RunAllScriptsInDirectory = reinterpret_cast<void*>(0x082634C4);

void * const CVirtualMachineCache__CVirtualMachineCacheDtor = reinterpret_cast<void*>(0x082640D8);
void * const CVirtualMachineCache__ClearAllFiles = reinterpret_cast<void*>(0x08264114);
void * const CVirtualMachineCache__PrecacheFile = reinterpret_cast<void*>(0x0825F0B4);

void * const CVirtualMachineCmdImplementer__CVirtualMachineCmdImplementerDtor = reinterpret_cast<void*>(0x08236D84);

void * const CVirtualMachineDebuggerInstance__CVirtualMachineDebuggerInstanceCtor = reinterpret_cast<void*>(0x08264C00);
void * const CVirtualMachineDebuggerInstance__CVirtualMachineDebuggerInstanceDtor = reinterpret_cast<void*>(0x08264DF0);
void * const CVirtualMachineDebuggerInstance__DebuggerDisplayCurrentLocation = reinterpret_cast<void*>(0x08269A88);
void * const CVirtualMachineDebuggerInstance__DebuggerMainLoop = reinterpret_cast<void*>(0x0826A07C);
void * const CVirtualMachineDebuggerInstance__DebuggerSingleStep = reinterpret_cast<void*>(0x08265540);
void * const CVirtualMachineDebuggerInstance__FindEmptyWatchViewEntry = reinterpret_cast<void*>(0x08268178);
void * const CVirtualMachineDebuggerInstance__FindWatchViewEntry = reinterpret_cast<void*>(0x0826A4F0);
void * const CVirtualMachineDebuggerInstance__GenerateCallStackParameterView = reinterpret_cast<void*>(0x08267914);
void * const CVirtualMachineDebuggerInstance__GenerateCallStackView = reinterpret_cast<void*>(0x08267A30);
void * const CVirtualMachineDebuggerInstance__GenerateDebugVariableLocationForParameter = reinterpret_cast<void*>(0x0826A490);
void * const CVirtualMachineDebuggerInstance__GenerateFunctionIDFromInstructionPointer = reinterpret_cast<void*>(0x0826A2F8);
void * const CVirtualMachineDebuggerInstance__GenerateLineNumberFromInstructionPointer = reinterpret_cast<void*>(0x0826A338);
void * const CVirtualMachineDebuggerInstance__GenerateStackSizeAtInstructionPointer = reinterpret_cast<void*>(0x08267760);
void * const CVirtualMachineDebuggerInstance__GenerateTypeName = reinterpret_cast<void*>(0x08267488);
void * const CVirtualMachineDebuggerInstance__GenerateTypeSize = reinterpret_cast<void*>(0x082673C8);
void * const CVirtualMachineDebuggerInstance__GenerateTypeValueFromStackLocation = reinterpret_cast<void*>(0x082675F0);
void * const CVirtualMachineDebuggerInstance__GetNextDebugVariable = reinterpret_cast<void*>(0x0826A3F4);
void * const CVirtualMachineDebuggerInstance__LoadDebugInfo = reinterpret_cast<void*>(0x082659D4);
void * const CVirtualMachineDebuggerInstance__LoadDebugInfoLine = reinterpret_cast<void*>(0x0826A2B4);
void * const CVirtualMachineDebuggerInstance__LoadScriptLine = reinterpret_cast<void*>(0x0826A254);
void * const CVirtualMachineDebuggerInstance__ParseAndExecuteMessage = reinterpret_cast<void*>(0x08265684);
void * const CVirtualMachineDebuggerInstance__ReadIntegerFromInput = reinterpret_cast<void*>(0x0826A158);
void * const CVirtualMachineDebuggerInstance__ReadStringFromInput = reinterpret_cast<void*>(0x082655CC);
void * const CVirtualMachineDebuggerInstance__SendCallStackWindowUpdateCommands = reinterpret_cast<void*>(0x08267EE8);
void * const CVirtualMachineDebuggerInstance__SendCodeWindowUpdateCommands = reinterpret_cast<void*>(0x08267084);
void * const CVirtualMachineDebuggerInstance__SendLabelsAndKeywords = reinterpret_cast<void*>(0x08269CF8);
void * const CVirtualMachineDebuggerInstance__SendWatchWindowEntry = reinterpret_cast<void*>(0x08268804);
void * const CVirtualMachineDebuggerInstance__SendWatchWindowUpdateCommands = reinterpret_cast<void*>(0x08269238);
void * const CVirtualMachineDebuggerInstance__ShutDownDebugger = reinterpret_cast<void*>(0x0826A100);
void * const CVirtualMachineDebuggerInstance__SpawnDebugger = reinterpret_cast<void*>(0x08265364);
void * const CVirtualMachineDebuggerInstance__ToggleWatchWindowExpansion = reinterpret_cast<void*>(0x0826A1B0);

void * const CVirtualMachineDebugLoader__CVirtualMachineDebugLoaderDtor = reinterpret_cast<void*>(0x08248214);
void * const CVirtualMachineDebugLoader__DemandDebugInfo = reinterpret_cast<void*>(0x08264B08);
void * const CVirtualMachineDebugLoader__GetDataPtr = reinterpret_cast<void*>(0x08269FE4);
void * const CVirtualMachineDebugLoader__GetSize = reinterpret_cast<void*>(0x0826A004);
void * const CVirtualMachineDebugLoader__ReleaseDebugInfo = reinterpret_cast<void*>(0x0826A024);

void * const CVirtualMachineFile__CVirtualMachineFileCtor = reinterpret_cast<void*>(0x08263F8C);
void * const CVirtualMachineFile__CVirtualMachineFileDtor = reinterpret_cast<void*>(0x08263FAC);
void * const CVirtualMachineFile__GetData = reinterpret_cast<void*>(0x082640A4);
void * const CVirtualMachineFile__LoadFile = reinterpret_cast<void*>(0x08264028);
void * const CVirtualMachineFile__UnloadFile = reinterpret_cast<void*>(0x08264068);

void * const CVirtualMachineStack__CVirtualMachineStackCtor = reinterpret_cast<void*>(0x08263E30);
void * const CVirtualMachineStack__CVirtualMachineStackDtor = reinterpret_cast<void*>(0x08263E5C);
void * const CVirtualMachineStack__AddToTopOfStack = reinterpret_cast<void*>(0x0825E5C4);
void * const CVirtualMachineStack__AssignLocationToLocation = reinterpret_cast<void*>(0x0825E738);
void * const CVirtualMachineStack__ClearStack = reinterpret_cast<void*>(0x0825EFD0);
void * const CVirtualMachineStack__CopyFromStack = reinterpret_cast<void*>(0x0825E89C);
void * const CVirtualMachineStack__GetBasePointer = reinterpret_cast<void*>(0x08263EC4);
void * const CVirtualMachineStack__GetStackPointer = reinterpret_cast<void*>(0x08263EE0);
void * const CVirtualMachineStack__InitializeStack = reinterpret_cast<void*>(0x08263E90);
void * const CVirtualMachineStack__LoadStack = reinterpret_cast<void*>(0x0825ED18);
void * const CVirtualMachineStack__ModifyIntegerAtLocation = reinterpret_cast<void*>(0x08263E9C);
void * const CVirtualMachineStack__SaveStack = reinterpret_cast<void*>(0x0825EB80);
void * const CVirtualMachineStack__SetBasePointer = reinterpret_cast<void*>(0x08263ED0);
void * const CVirtualMachineStack__SetStackPointer = reinterpret_cast<void*>(0x08263EEC);

void * const CWorldTimer__CWorldTimerCtor = reinterpret_cast<void*>(0x08241160);
void * const CWorldTimer__CWorldTimerDtor = reinterpret_cast<void*>(0x082411C0);
void * const CWorldTimer__AddWorldTimes = reinterpret_cast<void*>(0x08241804);
void * const CWorldTimer__AdvanceToTime = reinterpret_cast<void*>(0x08240CE0);
void * const CWorldTimer__CompareWorldTimes = reinterpret_cast<void*>(0x082418AC);
void * const CWorldTimer__ConvertFromCalendarDay = reinterpret_cast<void*>(0x08241388);
void * const CWorldTimer__ConvertFromTimeOfDay = reinterpret_cast<void*>(0x082413F8);
void * const CWorldTimer__ConvertToCalendarDay = reinterpret_cast<void*>(0x082412A0);
void * const CWorldTimer__ConvertToTimeOfDay = reinterpret_cast<void*>(0x082412F4);
void * const CWorldTimer__GetCalendarDayFromSeconds = reinterpret_cast<void*>(0x08241A8C);
void * const CWorldTimer__GetSnapshotTime = reinterpret_cast<void*>(0x08241274);
void * const CWorldTimer__GetSnapshotTimeDifference = reinterpret_cast<void*>(0x08241284);
void * const CWorldTimer__GetTimeDifferenceFromWorldTime = reinterpret_cast<void*>(0x08241650);
void * const CWorldTimer__GetTimeOfDayFromSeconds = reinterpret_cast<void*>(0x08241AF0);
void * const CWorldTimer__GetWorldTime = reinterpret_cast<void*>(0x082416A4);
void * const CWorldTimer__GetWorldTimeCalendarDay = reinterpret_cast<void*>(0x0824084C);
void * const CWorldTimer__GetWorldTimeCalendarDayString = reinterpret_cast<void*>(0x08240938);
void * const CWorldTimer__GetWorldTimeDay = reinterpret_cast<void*>(0x0824196C);
void * const CWorldTimer__GetWorldTimeHour = reinterpret_cast<void*>(0x08241994);
void * const CWorldTimer__GetWorldTimeMillisecond = reinterpret_cast<void*>(0x08241A3C);
void * const CWorldTimer__GetWorldTimeMinute = reinterpret_cast<void*>(0x082419CC);
void * const CWorldTimer__GetWorldTimeMonth = reinterpret_cast<void*>(0x08241934);
void * const CWorldTimer__GetWorldTimeSecond = reinterpret_cast<void*>(0x08241A08);
void * const CWorldTimer__GetWorldTimeTimeOfDay = reinterpret_cast<void*>(0x08240A10);
void * const CWorldTimer__GetWorldTimeTimeOfDayString = reinterpret_cast<void*>(0x08240AFC);
void * const CWorldTimer__GetWorldTimeYear = reinterpret_cast<void*>(0x082418F8);
void * const CWorldTimer__PauseWorldTimer = reinterpret_cast<void*>(0x082406DC);
void * const CWorldTimer__ResetTimer = reinterpret_cast<void*>(0x082417A0);
void * const CWorldTimer__SetFixedSnapshotRate = reinterpret_cast<void*>(0x08241A5C);
void * const CWorldTimer__SetMinutesPerHour = reinterpret_cast<void*>(0x082411DC);
void * const CWorldTimer__SetSnapshotTime = reinterpret_cast<void*>(0x0824121C);
void * const CWorldTimer__SetWorldTime__0 = reinterpret_cast<void*>(0x08241478);
void * const CWorldTimer__SetWorldTime__1 = reinterpret_cast<void*>(0x08241590);
void * const CWorldTimer__SubtractWorldTimes = reinterpret_cast<void*>(0x08241850);
void * const CWorldTimer__TranslateWorldTimeToString = reinterpret_cast<void*>(0x08240BCC);
void * const CWorldTimer__UnpauseWorldTimer = reinterpret_cast<void*>(0x082407BC);

void * const FreeStanding__AdminClientInfo = reinterpret_cast<void*>(0x080501E0);
void * const FreeStanding__AdminClientList = reinterpret_cast<void*>(0x0804F2BC);
void * const FreeStanding__AdminKick = reinterpret_cast<void*>(0x0804FF0C);
void * const FreeStanding__AdminLoadGame = reinterpret_cast<void*>(0x0804E870);
void * const FreeStanding__AdminLoadModule = reinterpret_cast<void*>(0x0804E534);
void * const FreeStanding__AdminSaveGame = reinterpret_cast<void*>(0x0804EDB8);
void * const FreeStanding__AdminSay = reinterpret_cast<void*>(0x080509F4);
void * const FreeStanding__AdminSetPort = reinterpret_cast<void*>(0x08050D40);
void * const FreeStanding__AdminStatus = reinterpret_cast<void*>(0x0804FA20);
void * const FreeStanding__ExoFree = reinterpret_cast<void*>(0x082C8F6C);
void * const FreeStanding__ExoMalloc = reinterpret_cast<void*>(0x082C8F60);

void * const Matrix__getquaternion = reinterpret_cast<void*>(0x0826BED0);

void * const Plane__Transform = reinterpret_cast<void*>(0x0826C164);

void * const Quaternion____aml = reinterpret_cast<void*>(0x0826FEB4);

void * const Vector____adv = reinterpret_cast<void*>(0x0826FB64);
void * const Vector____ami = reinterpret_cast<void*>(0x0826FB1C);
void * const Vector____aml = reinterpret_cast<void*>(0x0826FB40);
void * const Vector____apl = reinterpret_cast<void*>(0x0826FAF8);
void * const Vector__Normalize = reinterpret_cast<void*>(0x0826B0D0);

}